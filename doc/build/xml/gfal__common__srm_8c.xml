<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal__common__srm_8c" kind="file">
    <compoundname>gfal_common_srm.c</compoundname>
    <includes local="no">regex.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="gfal__common__srm_8h" local="yes">gfal_common_srm.h</includes>
    <includes refid="gfal__common__srm__access_8h" local="yes">gfal_common_srm_access.h</includes>
    <includes refid="gfal__common__srm__internal__layer_8h" local="yes">gfal_common_srm_internal_layer.h</includes>
    <includes refid="gfal__common__srm__mkdir_8h" local="yes">gfal_common_srm_mkdir.h</includes>
    <includes refid="gfal__common__srm__stat_8h" local="yes">gfal_common_srm_stat.h</includes>
    <includes refid="gfal__common__srm__rmdir_8h" local="yes">gfal_common_srm_rmdir.h</includes>
    <includes refid="gfal__common__srm__opendir_8h" local="yes">gfal_common_srm_opendir.h</includes>
    <includes refid="gfal__common__srm__open_8h" local="yes">gfal_common_srm_open.h</includes>
    <includes refid="gfal__common__srm__readdir_8h" local="yes">gfal_common_srm_readdir.h</includes>
    <includes refid="gfal__common__srm__chmod_8h" local="yes">gfal_common_srm_chmod.h</includes>
    <includes refid="gfal__common__srm__getxattr_8h" local="yes">gfal_common_srm_getxattr.h</includes>
    <includes refid="gfal__common__internal_8h" local="yes">../gfal_common_internal.h</includes>
    <includes refid="gfal__common__errverbose_8h" local="yes">../gfal_common_errverbose.h</includes>
    <includes refid="gfal__common__catalog_8h" local="yes">../gfal_common_catalog.h</includes>
    <incdepgraph>
      <node id="1154">
        <label>sys/stat.h</label>
      </node>
      <node id="1158">
        <label>stdarg.h</label>
      </node>
      <node id="1168">
        <label>gfal_common_srm_opendir.h</label>
        <link refid="gfal__common__srm__opendir_8h"/>
        <childnode refid="1169" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
      </node>
      <node id="1179">
        <label>attr/xattr.h</label>
      </node>
      <node id="1173">
        <label>../gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
      </node>
      <node id="1169">
        <label>stdlib.h</label>
      </node>
      <node id="1174">
        <label>../gfal_common_errverbose.h</label>
        <link refid="gfal__common__errverbose_8h"/>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1148">
        <label>../gfal_prototypes.h</label>
        <link refid="gfal__prototypes_8h-source"/>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1178">
        <label>gfal_common_srm_getxattr.h</label>
        <link refid="gfal__common__srm__getxattr_8h"/>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1179" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
      </node>
      <node id="1160">
        <label>errno.h</label>
      </node>
      <node id="1177">
        <label>gfal_common_srm_chmod.h</label>
        <link refid="gfal__common__srm__chmod_8h-source"/>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
      </node>
      <node id="1176">
        <label>gfal_common_srm_readdir.h</label>
        <link refid="gfal__common__srm__readdir_8h"/>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
      </node>
      <node id="1155">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="1165">
        <label>gfal_common_srm_mkdir.h</label>
        <link refid="gfal__common__srm__mkdir_8h"/>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
      </node>
      <node id="1159">
        <label>uuid/uuid.h</label>
      </node>
      <node id="1172">
        <label>gfal_common_srm_open.h</label>
        <link refid="gfal__common__srm__open_8h-source"/>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
      </node>
      <node id="1143">
        <label>/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c</label>
        <link refid="gfal_common_srm.c"/>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
        <childnode refid="1176" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
      </node>
      <node id="1146">
        <label>gfal_common_srm.h</label>
        <link refid="gfal__common__srm_8h"/>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
      </node>
      <node id="1171">
        <label>pthread.h</label>
      </node>
      <node id="1152">
        <label>sys/types.h</label>
      </node>
      <node id="1147">
        <label>string.h</label>
      </node>
      <node id="1170">
        <label>../gfal_common_filedescriptor.h</label>
        <link refid="gfal__common__filedescriptor_8h"/>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
      </node>
      <node id="1151">
        <label>unistd.h</label>
      </node>
      <node id="1167">
        <label>gfal_common_srm_rmdir.h</label>
        <link refid="gfal__common__srm__rmdir_8h"/>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
      </node>
      <node id="1161">
        <label>../../externals/gsimplecache/gcachemain.h</label>
        <link refid="gcachemain_8h-source"/>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1149">
        <label>glib.h</label>
      </node>
      <node id="1145">
        <label>time.h</label>
      </node>
      <node id="1164">
        <label>gfal_srm_ifce.h</label>
      </node>
      <node id="1162">
        <label>gfal_common_srm_access.h</label>
        <link refid="gfal__common__srm__access_8h"/>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
      </node>
      <node id="1157">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1154" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
      </node>
      <node id="1166">
        <label>gfal_common_srm_stat.h</label>
        <link refid="gfal__common__srm__stat_8h"/>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
      </node>
      <node id="1156">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="1144">
        <label>regex.h</label>
      </node>
      <node id="1175">
        <label>stdio.h</label>
      </node>
      <node id="1163">
        <label>gfal_common_srm_internal_layer.h</label>
        <link refid="gfal__common__srm__internal__layer_8h"/>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1155" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
      </node>
      <node id="1150">
        <label>../gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="1151" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1154" relation="include">
        </childnode>
        <childnode refid="1155" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
      </node>
      <node id="1153">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="gfal__common__srm_8c_153abf256730d533302d1910e5fb61efe" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="26" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gfal__common__srm_8c_19eaea5b630099808082807628bd08e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gfal_srm_getName</definition>
        <argsstring>()</argsstring>
        <name>gfal_srm_getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>srm plugin id </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="63" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_19e0bd4129a8c46aad9a8f889e8585a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_checker_compile</definition>
        <argsstring>(gfal_srmv2_opt *opts, GError **err)</argsstring>
        <name>gfal_checker_compile</name>
        <param>
          <type>gfal_srmv2_opt *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="68" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_149410f364584e278d824f27bad6777d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_surl_checker</definition>
        <argsstring>(catalog_handle ch, const char *surl, GError **err)</argsstring>
        <name>gfal_surl_checker</name>
        <param>
          <type>catalog_handle</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>parse a surl to check the validity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="76" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_1ae7daa4f5c8d2af440ce6ed85efb283b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>static gboolean gfal_srm_check_url</definition>
        <argsstring>(catalog_handle handle, const char *url, catalog_mode mode, GError **err)</argsstring>
        <name>gfal_srm_check_url</name>
        <param>
          <type>catalog_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type>catalog_mode</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>url checker for the srm module, surl part </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="89" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="89" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_1dcf4f58d267d7a0a9e56b21889fd40b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gfal_srm_destroyG</definition>
        <argsstring>(catalog_handle ch)</argsstring>
        <name>gfal_srm_destroyG</name>
        <param>
          <type>catalog_handle</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>destroyer function, call when the module is unload </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="112" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="112" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_100d7f2a5c374d306365e5dd0baf73c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_srm_opt_initG</definition>
        <argsstring>(gfal_srmv2_opt *opts, gfal_handle handle)</argsstring>
        <name>gfal_srm_opt_initG</name>
        <param>
          <type>gfal_srmv2_opt *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an opts struct with the default parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="122" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="122" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_15c9edde4d67d96432a319d940a4799f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gfal_catalog_interface</type>
        <definition>gfal_catalog_interface gfal_plugin_init</definition>
        <argsstring>(gfal_handle handle, GError **err)</argsstring>
        <name>gfal_plugin_init</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init function, called before all </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="134" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="134" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_1583148369d56c8899aedf505a4bd2c5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_srm_construct_key</definition>
        <argsstring>(const char *url, const char *prefix, char *buff, const size_t s_buff)</argsstring>
        <name>gfal_srm_construct_key</name>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>s_buff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a key for the cache system from a url and a prefix </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="175" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_1029b9bf9c0858e450fea92fd6946dd9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_get_fullendpoint</definition>
        <argsstring>(const char *surl, GError **err)</argsstring>
        <name>gfal_get_fullendpoint</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>create a full endpath from a surl with full endpath </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="184" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="184" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_1c3f7e4d896977d068aa52fac05d472dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_get_hostname_from_surl</definition>
        <argsstring>(const char *surl, GError **err)</argsstring>
        <name>gfal_get_hostname_from_surl</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>get the hostname from a surl </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return NULL if error and set err else return the hostname value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="199" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="199" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_10d446b68846125f4a2e0afcd299ebf8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum gfal_srm_proto</type>
        <definition>static enum gfal_srm_proto gfal_get_proto_from_bdii</definition>
        <argsstring>(const char *se_type_bdii)</argsstring>
        <name>gfal_get_proto_from_bdii</name>
        <param>
          <type>const char *</type>
          <declname>se_type_bdii</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>map a bdii se protocol type to a gfal protocol type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="215" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="215" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_1f14e43f26833cf0fe15518d24b6c5472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_default_storageG</definition>
        <argsstring>(gfal_srmv2_opt *opts, enum gfal_srm_proto proto)</argsstring>
        <name>gfal_set_default_storageG</name>
        <param>
          <type>gfal_srmv2_opt *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type>enum gfal_srm_proto</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
<para>accessor for the default storage type definition </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="231" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8c_19177e8f96da30fda27c71daead3ff4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_srm_convert_filestatuses_to_GError</definition>
        <argsstring>(struct srmv2_filestatus *statuses, int n, GError **err)</argsstring>
        <name>gfal_srm_convert_filestatuses_to_GError</name>
        <param>
          <type>struct srmv2_filestatus *</type>
          <declname>statuses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="239" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="239" bodyend="251"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gfal__common__srm_8c_158ac4e2053d2c689cfe00c767b332fb8" prot="public" static="yes" mutable="no">
        <type>enum gfal_srm_proto</type>
        <definition>enum gfal_srm_proto gfal_proto_list_pref[]</definition>
        <argsstring>[]</argsstring>
        <name>gfal_proto_list_pref</name>
        <initializer> { PROTO_SRMv2, PROTO_SRM, PROTO_ERROR_UNKNOW }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>list of the protols in the order of preference </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="53" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal__common__srm_8c_1cc9ff1d962503dcc0db13cda2fcec77a" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* srm_turls_sup_protocols[]</definition>
        <argsstring>[]</argsstring>
        <name>srm_turls_sup_protocols</name>
        <initializer> { &quot;file&quot;, &quot;rfio&quot;, &quot;gsidcap&quot;, &quot;dcap&quot;,  &quot;kdcap&quot;,  NULL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>list of the turls supported protocols </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" line="58" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/>#define<sp/>_GNU_SOURCE<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;regex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm_8h" kindref="compound">gfal_common_srm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__access_8h" kindref="compound">gfal_common_srm_access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__internal__layer_8h" kindref="compound">gfal_common_srm_internal_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__access_8h" kindref="compound">gfal_common_srm_access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__mkdir_8h" kindref="compound">gfal_common_srm_mkdir.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__stat_8h" kindref="compound">gfal_common_srm_stat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__rmdir_8h" kindref="compound">gfal_common_srm_rmdir.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__opendir_8h" kindref="compound">gfal_common_srm_opendir.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_common_srm_open.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__readdir_8h" kindref="compound">gfal_common_srm_readdir.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_common_srm_chmod.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm__getxattr_8h" kindref="compound">gfal_common_srm_getxattr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_common_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_common_errverbose.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_common_catalog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_srm_proto<sp/>gfal_proto_list_pref[]=<sp/>{<sp/>PROTO_SRMv2,<sp/>PROTO_SRM,<sp/>PROTO_ERROR_UNKNOW<sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>srm_turls_sup_protocols[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rfio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;gsidcap&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dcap&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;kdcap&quot;</highlight><highlight class="normal">,<sp/><sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>gfal_srm_getName(){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;srm_plugin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_checker_compile(gfal_srmv2_opt*<sp/>opts,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>regcomp(&amp;opts-&gt;rexurl,<sp/></highlight><highlight class="stringliteral">&quot;^srm://([:alnum:]|-|/|\.|_)+$&quot;</highlight><highlight class="normal">,REG_ICASE<sp/>|<sp/>REG_EXTENDED);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(ret==0,-1,err,</highlight><highlight class="stringliteral">&quot;[gfal_surl_checker_]<sp/>fail<sp/>to<sp/>compile<sp/>regex,<sp/>report<sp/>this<sp/>bug&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_surl_checker(catalog_handle<sp/>ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>surl,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_srmv2_opt*<sp/>opts<sp/>=<sp/>(gfal_srmv2_opt*)<sp/>ch;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(surl<sp/>==<sp/>NULL<sp/>||<sp/>strnlen(surl,<sp/>GFAL_URL_MAX_LEN)<sp/>==<sp/>GFAL_URL_MAX_LEN){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,<sp/>0,<sp/>EINVAL,<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Invalid<sp/>surl,<sp/>surl<sp/>too<sp/>long<sp/>or<sp/>NULL&quot;</highlight><highlight class="normal">,__func__);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regexec(&amp;opts-&gt;rexurl,surl,0,NULL,0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gboolean<sp/>gfal_srm_check_url(catalog_handle<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>url,<sp/>catalog_mode<sp/>mode,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mode){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_ACCESS:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_MKDIR:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_STAT:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_LSTAT:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_RMDIR:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_OPENDIR:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_GETTURL:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_PUTTURL:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_OPEN:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_CHMOD:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_UNLINK:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_GETXATTR:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GFAL_CATALOG_LISTXATTR:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_surl_checker(handle,<sp/>url,<sp/><sp/>err)==0)?TRUE:FALSE;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gfal_srm_destroyG(catalog_handle<sp/>ch){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_srmv2_opt*<sp/>opts<sp/>=<sp/>(gfal_srmv2_opt*)<sp/>ch;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regfree(&amp;opts-&gt;rexurl);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regfree(&amp;opts-&gt;rex_full);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsimplecache_delete(opts-&gt;cache);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(opts);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gfal_srm_opt_initG(gfal_srmv2_opt*<sp/>opts,<sp/>gfal_handle<sp/>handle){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_checker_compile(opts,<sp/>NULL);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opts-&gt;opt_srmv2_protocols<sp/>=<sp/>srm_turls_sup_protocols;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opts-&gt;srm_proto_type<sp/>=<sp/>PROTO_SRMv2;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opts-&gt;handle<sp/>=<sp/>handle;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opts-&gt;filesizes<sp/>=<sp/>GFAL_NEWFILE_SIZE;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opts-&gt;cache<sp/>=<sp/>gsimplecache_new(500000);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">gfal_catalog_interface<sp/><ref refid="gfal__dcap__plugin__main_8c_15c9edde4d67d96432a319d940a4799f1" kindref="member">gfal_plugin_init</ref>(gfal_handle<sp/>handle,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_catalog_interface<sp/>srm_catalog;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GError*<sp/>tmp_err=NULL;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;srm_catalog,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(gfal_catalog_interface));<sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>catalog<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_srmv2_opt*<sp/>opts<sp/>=<sp/>g_new0(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>_gfal_srmv2_opt,1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>the<sp/>srmv2<sp/>option<sp/>struct<sp/>and<sp/>clear<sp/>it<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_srm_opt_initG(opts,<sp/>handle);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.handle<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>opts;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.check_catalog_url<sp/>=<sp/>&amp;gfal_srm_check_url;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.catalog_delete<sp/>=<sp/>&amp;gfal_srm_destroyG;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.accessG<sp/>=<sp/>&amp;<ref refid="gfal__common__srm__access_8c_1c97d6cdbdc19261f398fece514431491" kindref="member">gfal_srm_accessG</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.mkdirpG<sp/>=<sp/>&amp;gfal_srm_mkdirG;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.statG=<sp/>&amp;<ref refid="gfal__common__srm__stat_8c_15073234723ab7d40a031a9493a9cf8e6" kindref="member">gfal_srm_statG</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.lstatG<sp/>=<sp/>&amp;<ref refid="gfal__common__srm__stat_8c_15073234723ab7d40a031a9493a9cf8e6" kindref="member">gfal_srm_statG</ref>;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>management<sp/>for<sp/>symlink<sp/>in<sp/>srm<sp/>protocol/srm-ifce,<sp/>just<sp/>map<sp/>to<sp/>stat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.rmdirG<sp/>=<sp/>&amp;gfal_srm_rmdirG;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.opendirG<sp/>=<sp/>&amp;gfal_srm_opendirG;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.readdirG<sp/>=<sp/>&amp;gfal_srm_readdirG;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.closedirG<sp/>=<sp/>&amp;gfal_srm_closedirG;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.getName=<sp/>&amp;gfal_srm_getName;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.getTURLG<sp/>=<sp/>&amp;gfal_srm_getTURLS_catalog;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.putTURLG=<sp/>&amp;gfal_srm_putTURLS_catalog;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.openG<sp/>=<sp/>&amp;gfal_srm_openG;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.closeG<sp/>=<sp/>&amp;gfal_srm_closeG;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.readG=<sp/>&amp;gfal_srm_readG;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.writeG=<sp/>&amp;gfal_srm_writeG;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.chmodG=<sp/>&amp;gfal_srm_chmodG;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.lseekG=<sp/>&amp;gfal_srm_lseekG;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.unlinkG<sp/>=<sp/>&amp;gfal_srm_unlinkG;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.getxattrG<sp/>=<sp/>&amp;<ref refid="gfal__common__srm__getxattr_8c_1294634c95c41aced18458de57f4de555" kindref="member">gfal_srm_getxattrG</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_catalog.listxattrG<sp/>=<sp/>&amp;<ref refid="gfal__common__srm__getxattr_8c_15ed727e9131d092843d162ad577287f7" kindref="member">gfal_srm_listxattrG</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>srm_catalog;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>gfal_srm_construct_key(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>url,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buff,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t<sp/>s_buff){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_strlcpy(buff,<sp/>prefix,<sp/>s_buff);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_strlcat(buff,<sp/>url,<sp/>s_buff);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>gfal_get_fullendpoint(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>surl,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>strstr(surl,</highlight><highlight class="stringliteral">&quot;?SFN=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len_prefix<sp/>=<sp/>strlen(GFAL_PREFIX_SRM);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>srm<sp/>prefix<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len_endpoint_prefix<sp/>=<sp/>strlen(GFAL_ENDPOINT_DEFAULT_PREFIX);<sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>endpoint<sp/>protocol<sp/>prefix<sp/>len<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(p<sp/>&amp;&amp;<sp/>len_prefix<sp/>&amp;&amp;<sp/>(p&gt;(surl+len_prefix))<sp/>&amp;&amp;<sp/>len_endpoint_prefix,NULL,err,</highlight><highlight class="stringliteral">&quot;[gfal_get_fullendpoint]<sp/>full<sp/>surl<sp/>must<sp/>contain<sp/>?SFN=<sp/>and<sp/>a<sp/>valid<sp/>prefix,<sp/>fatal<sp/>error&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assertion<sp/>on<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>resu<sp/>=<sp/>calloc(p-surl-len_prefix+len_endpoint_prefix,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(resu,<sp/>GFAL_ENDPOINT_DEFAULT_PREFIX,<sp/>len_endpoint_prefix);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(resu<sp/>+<sp/>len_endpoint_prefix,<sp/>surl+len_prefix,<sp/>p-<sp/>surl-len_prefix);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>endpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resu;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>gfal_get_hostname_from_surl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>surl,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srm_prefix_len<sp/>=<sp/>strlen(GFAL_PREFIX_SRM);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>surl_len<sp/>=<sp/>strnlen(surl,2048);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(surl<sp/>&amp;&amp;<sp/><sp/>(srm_prefix_len<sp/>&lt;<sp/>surl_len)<sp/><sp/>&amp;&amp;<sp/>(surl_len<sp/>&lt;<sp/>2048),NULL,<sp/>err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_get_hostname_from_surl]<sp/>invalid<sp/>value<sp/>in<sp/>params&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>strchr(surl+srm_prefix_len,</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prep<sp/>=<sp/>strstr(surl,<sp/>GFAL_PREFIX_SRM);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prep<sp/>!=<sp/>surl){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,<sp/>EINVAL,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_get_hostname_from_surl<sp/>not<sp/>a<sp/>valid<sp/>surl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strndup(surl+srm_prefix_len,<sp/>p-surl-srm_prefix_len);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_srm_proto<sp/>gfal_get_proto_from_bdii(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>se_type_bdii){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_srm_proto<sp/>resu;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(se_type_bdii,</highlight><highlight class="stringliteral">&quot;srm_v1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resu<sp/>=<sp/>PROTO_SRM;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(se_type_bdii,</highlight><highlight class="stringliteral">&quot;srm_v2&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resu<sp/>=<sp/>PROTO_SRMv2;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resu<sp/>=<sp/>PROTO_ERROR_UNKNOW;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resu;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gfal_set_default_storageG(gfal_srmv2_opt*<sp/>opts,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_srm_proto<sp/>proto){</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opts-&gt;srm_proto_type<sp/>=<sp/>proto;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_srm_convert_filestatuses_to_GError(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_filestatus*<sp/>statuses,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(statuses<sp/>&amp;&amp;<sp/>n,<sp/>-1,<sp/>err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_srm_convert_filestatuses_to_GError]<sp/>args<sp/>invalids&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<sp/>n;<sp/>++i){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statuses[i].status<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,<sp/>0,<sp/>statuses[i].status,<sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>Error<sp/>on<sp/>the<sp/>surl<sp/>%s<sp/>while<sp/>putdone<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statuses[i].surl,<sp/>statuses[i].explanation);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.c"/>
  </compounddef>
</doxygen>
