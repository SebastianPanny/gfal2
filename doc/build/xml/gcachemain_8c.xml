<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gcachemain_8c" kind="file">
    <compoundname>gcachemain.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">glib.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">pthread.h</includes>
    <includes refid="gcachemain_8h" local="yes">gcachemain.h</includes>
    <incdepgraph>
      <node id="1820">
        <label>stdlib.h</label>
      </node>
      <node id="1823">
        <label>pthread.h</label>
      </node>
      <node id="1821">
        <label>string.h</label>
      </node>
      <node id="1817">
        <label>/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c</label>
        <link refid="gcachemain.c"/>
        <childnode refid="1818" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1821" relation="include">
        </childnode>
        <childnode refid="1822" relation="include">
        </childnode>
        <childnode refid="1823" relation="include">
        </childnode>
        <childnode refid="1824" relation="include">
        </childnode>
      </node>
      <node id="1824">
        <label>gcachemain.h</label>
        <link refid="gcachemain_8h-source"/>
        <childnode refid="1819" relation="include">
        </childnode>
      </node>
      <node id="1819">
        <label>glib.h</label>
      </node>
      <node id="1822">
        <label>time.h</label>
      </node>
      <node id="1818">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__Internal__item" prot="public">_Internal_item</innerclass>
    <innerclass refid="struct__GSimpleCache__Handle" prot="public">_GSimpleCache_Handle</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="gcachemain_8c_153abf256730d533302d1910e5fb61efe" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
<para>Simple and flexible cache system with timeout. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="author"><para>Adev </para></simplesect>
<simplesect kind="date"><para>27/07/11 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="8" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gcachemain_8c_1a7da5760c5a17bf089041de410b4a405" prot="public" static="no">
        <type>_Internal_item</type>
        <definition>typedef struct _Internal_item  Internal_item</definition>
        <argsstring></argsstring>
        <name>Internal_item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gcachemain_8c_160c588b8efa1f63b0cdaa74d2f073327" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gsimplecache_destroy_item_internal</definition>
        <argsstring>(gpointer a)</argsstring>
        <name>gsimplecache_destroy_item_internal</name>
        <param>
          <type>gpointer</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="32" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_11819efad8225d245c03b48a0663e5a3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>static gboolean hash_strings_are_equals</definition>
        <argsstring>(gconstpointer a, gconstpointer b)</argsstring>
        <name>hash_strings_are_equals</name>
        <param>
          <type>gconstpointer</type>
          <declname>a</declname>
        </param>
        <param>
          <type>gconstpointer</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="40" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_1094fa49998e9ff6e0a3f03aae57d40ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GSimpleCache *</type>
        <definition>GSimpleCache* gsimplecache_new</definition>
        <argsstring>(guint64 max_size)</argsstring>
        <name>gsimplecache_new</name>
        <param>
          <type>guint64</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new cache with a capacity of max_size bytes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="47" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_19ac9104fa3f13219721d77331351dbb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gsimplecache_delete</definition>
        <argsstring>(GSimpleCache *cache)</argsstring>
        <name>gsimplecache_delete</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete a cache object, all internals object are free </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="57" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_19148a6f63297e234c89d21e3b75ffd9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* gsimplecache_find_kstr_internal</definition>
        <argsstring>(GSimpleCache *cache, const char *key)</argsstring>
        <name>gsimplecache_find_kstr_internal</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="67" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_1ae23e52f2e06e7b7380b1698a3a64f58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>gboolean</type>
        <definition>gboolean gsimplecache_remove_internal_kstr</definition>
        <argsstring>(GSimpleCache *cache, const char *key)</argsstring>
        <name>gsimplecache_remove_internal_kstr</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="75" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_1ef518bee9e7825db1bfe1e6c6d2ab98b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gsimplecache_add_item_internal</definition>
        <argsstring>(GSimpleCache *cache, char *dup_key, Internal_item *item)</argsstring>
        <name>gsimplecache_add_item_internal</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dup_key</declname>
        </param>
        <param>
          <type>Internal_item *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="82" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_1cbd089d33200fd75d6781454a47487e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gsimplecache_add_item_kstr</definition>
        <argsstring>(GSimpleCache *cache, const char *key, void *item, GDestroyNotify value_destroyer)</argsstring>
        <name>gsimplecache_add_item_kstr</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>GDestroyNotify</type>
          <declname>value_destroyer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an item to the cache referenced by the Key key while a duration time (in sec ) After this duration, the item will be deleted by the value_destroyer function <simplesect kind="warning"><para>, the key is duplicated and free internally </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="92" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_1441b89c3092c6d6459fb0569a2071f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>gboolean gsimplecache_remove_kstr</definition>
        <argsstring>(GSimpleCache *cache, const char *key)</argsstring>
        <name>gsimplecache_remove_kstr</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>remove the item in the cache, return TRUE if removed else FALSE destroy the internal item automatically </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="107" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_1e714b21c881bc0e9ec97a52325b208fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* gsimplecache_take_kstr</definition>
        <argsstring>(GSimpleCache *cache, const char *key)</argsstring>
        <name>gsimplecache_take_kstr</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>find the item in the cache, return it if exist , else return NULL the returned value must be free by hand </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="119" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="119" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="gcachemain_8c_187029895813769a1f6f8e15cc5b96eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* gsimplecache_find_kstr</definition>
        <argsstring>(GSimpleCache *cache, const char *key)</argsstring>
        <name>gsimplecache_find_kstr</name>
        <param>
          <type>GSimpleCache *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>search the item in the cache, return it if exist and is not outdated, else return NULL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="136" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="136" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gcachemain_8c_1b45390cdee8de09f0e75de4eb73c7c76" prot="public" static="yes" mutable="no">
        <type>const guint64</type>
        <definition>const guint64 max_list_len</definition>
        <argsstring></argsstring>
        <name>max_list_len</name>
        <initializer> MAX_LIST_LEN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="18" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gcachemain_8c_1ef1635552a1417591b0a8f12d4401fee" prot="public" static="no" mutable="no">
        <type>__thread gboolean</type>
        <definition>__thread gboolean skip_deletion</definition>
        <argsstring></argsstring>
        <name>skip_deletion</name>
        <initializer> FALSE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" line="20" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gcachemain.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>guint64<sp/>max_list_len<sp/>=<sp/>MAX_LIST_LEN;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">__thread<sp/>gboolean<sp/>skip_deletion<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_Internal_item{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GDestroyNotify<sp/>value_destroyer;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/>Internal_item;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_GSimpleCache_Handle{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GHashTable*<sp/><sp/>table;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_t<sp/>mux;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gsimplecache_destroy_item_internal(gpointer<sp/>a){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internal_item*<sp/>i<sp/>=<sp/>(Internal_item*)<sp/>a;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(skip_deletion<sp/>==<sp/>FALSE)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;value_destroyer(i-&gt;item);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_free(i);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>gboolean<sp/>hash_strings_are_equals(gconstpointer<sp/>a,<sp/>gconstpointer<sp/>b){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(strcmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>a,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>b)==<sp/>0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">GSimpleCache*<sp/>gsimplecache_new(guint64<sp/>max_size){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GSimpleCache*<sp/>ret<sp/>=<sp/>(GSimpleCache*)<sp/>g_new(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>_GSimpleCache_Handle,1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;table<sp/>=<sp/>g_hash_table_new_full(&amp;g_str_hash,<sp/>&amp;hash_strings_are_equals,<sp/>&amp;free,<sp/>&amp;gsimplecache_destroy_item_internal<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;ret-&gt;mux,NULL);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gsimplecache_delete(GSimpleCache*<sp/>cache){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;cache-&gt;mux);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_hash_table_remove_all(cache-&gt;table);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;cache-&gt;mux);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_destroy(&amp;cache-&gt;mux);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_free(cache);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>gsimplecache_find_kstr_internal(GSimpleCache*<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internal_item*<sp/>ret<sp/>=<sp/>(Internal_item*)<sp/>g_hash_table_lookup(cache-&gt;table,<sp/>(gconstpointer)<sp/>key);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=<sp/>NULL<sp/>){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret-&gt;item;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>gboolean<sp/>gsimplecache_remove_internal_kstr(GSimpleCache*<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key){</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g_hash_table_remove(cache-&gt;table,<sp/>(gconstpointer)<sp/>key);<sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gsimplecache_add_item_internal(GSimpleCache*<sp/>cache,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dup_key,<sp/>Internal_item*<sp/>item){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_hash_table_insert(cache-&gt;table,<sp/>dup_key,<sp/>item);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gsimplecache_add_item_kstr(GSimpleCache*<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>item,<sp/>GDestroyNotify<sp/>value_destroyer){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;cache-&gt;mux);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internal_item*<sp/>it<sp/>=<sp/>g_new(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>_Internal_item,1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;value_destroyer<sp/>=<sp/>value_destroyer;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;item<sp/>=<sp/>item;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsimplecache_add_item_internal(cache,<sp/>strdup(key),<sp/>it);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;cache-&gt;mux);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">gboolean<sp/>gsimplecache_remove_kstr(GSimpleCache*<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;cache-&gt;mux);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gboolean<sp/>ret<sp/>=<sp/>gsimplecache_remove_internal_kstr(cache,<sp/>key);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;cache-&gt;mux);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>gsimplecache_take_kstr(GSimpleCache*<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;cache-&gt;mux);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ret<sp/>=<sp/>gsimplecache_find_kstr_internal(cache,<sp/>key);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_deletion<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsimplecache_remove_internal_kstr(cache,<sp/>key);<sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_deletion<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;cache-&gt;mux);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>gsimplecache_find_kstr(GSimpleCache*<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;cache-&gt;mux);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ret<sp/>=<sp/>gsimplecache_find_kstr_internal(cache,<sp/>key);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;cache-&gt;mux);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/externals/gsimplecache/gcachemain.c"/>
  </compounddef>
</doxygen>
