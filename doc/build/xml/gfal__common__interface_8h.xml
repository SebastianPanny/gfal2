<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal__common__interface_8h" kind="file">
    <compoundname>gfal_common_interface.h</compoundname>
    <includes refid="gfal__common__srm_8h" local="yes">gfal_common_srm.h</includes>
    <includes refid="gfal__common_8h" local="yes">gfal_common.h</includes>
    <includedby refid="gfal__common__interface_8c" local="yes">/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c</includedby>
    <incdepgraph>
      <node id="322">
        <label>sys/stat.h</label>
      </node>
      <node id="332">
        <label>stdarg.h</label>
      </node>
      <node id="341">
        <label>../gfal_common.h</label>
      </node>
      <node id="346">
        <label>lber.h</label>
      </node>
      <node id="339">
        <label>voms/gfal_voms_if.h</label>
        <link refid="gfal__voms__if_8h-source"/>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
      </node>
      <node id="343">
        <label>stdlib.h</label>
      </node>
      <node id="336">
        <label>gfal_common_errverbose.h</label>
        <link refid="gfal__common__errverbose_8h"/>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>errno.h</label>
      </node>
      <node id="347">
        <label>ldap.h</label>
      </node>
      <node id="335">
        <label>gfal_common_storage.h</label>
        <link refid="gfal__common__storage_8h-source"/>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="342">
        <label>mds/gfal_common_mds.h</label>
        <link refid="gfal__common__mds_8h-source"/>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>uuid/uuid.h</label>
      </node>
      <node id="317">
        <label>gfal_common_srm.h</label>
        <link refid="gfal__common__srm_8h"/>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
      </node>
      <node id="338">
        <label>gfal_file.h</label>
        <link refid="gfal__file_8h-source"/>
      </node>
      <node id="320">
        <label>sys/types.h</label>
      </node>
      <node id="316">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h</label>
        <link refid="gfal_common_interface.h"/>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="329">
        <label>string.h</label>
      </node>
      <node id="331">
        <label>lfc_api.h</label>
      </node>
      <node id="330">
        <label>lfc/lfc_ifce.h</label>
        <link refid="lfc__ifce_8h-source"/>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="324">
        <label>unistd.h</label>
      </node>
      <node id="325">
        <label>glib.h</label>
      </node>
      <node id="348">
        <label>ServiceDiscovery.h</label>
      </node>
      <node id="351">
        <label>time.h</label>
      </node>
      <node id="318">
        <label>gfal_common.h</label>
        <link refid="gfal__common_8h"/>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
      </node>
      <node id="345">
        <label>sys/time.h</label>
      </node>
      <node id="344">
        <label>ctype.h</label>
      </node>
      <node id="349">
        <label>gfal_srm_ifce.h</label>
      </node>
      <node id="327">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
      <node id="326">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="340">
        <label>voms_apic.h</label>
      </node>
      <node id="350">
        <label>regex.h</label>
      </node>
      <node id="337">
        <label>stdio.h</label>
      </node>
      <node id="319">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>lfc/gfal_common_lfc.h</label>
        <link refid="gfal__common__lfc_8h"/>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
      </node>
      <node id="321">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="353">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c</label>
        <link refid="gfal__common__interface_8c"/>
      </node>
      <node id="352">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h</label>
        <link refid="gfal_common_interface.h"/>
        <childnode refid="353" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="gfal__common__interface_8h_1bdebd69c0c6a74b1b5adf88b5e836d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_last_error_string</definition>
        <argsstring>(gfal_handle handle)</argsstring>
        <name>gfal_last_error_string</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string of the last error reported or NULL if no error is reported </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="31" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_1ad28f1c5d1a0ed623834e6133bb7dd2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_has_error</definition>
        <argsstring>(gfal_handle handle)</argsstring>
        <name>gfal_has_error</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return TRUE value if error occured else FALSE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="33" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_14ca376cf47166fabd46a45fccb863ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_clear_error</definition>
        <argsstring>(gfal_handle handle)</argsstring>
        <name>gfal_clear_error</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>clear the current error registered in the handle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="35" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_14211faf02a3c5cc696c7c9f974415d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gfal_handle</type>
        <definition>gfal_handle gfal_handle_new</definition>
        <argsstring>()</argsstring>
        <name>gfal_handle_new</name>
        <briefdescription>
<para>get a initiated gfal_handle </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a gfal_handle, need to be free after usage. return NULL if errors Wrapper of gfal_initG for the &quot;without GLib&quot; use case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="37" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_10071cb3665f7dca9648fa46bebeca524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_handle_free</definition>
        <argsstring>(gfal_handle handle)</argsstring>
        <name>gfal_handle_free</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="39" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common.c" bodystart="2477" bodyend="2540"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_168ef05f37b4971c8306b1cc6ee529647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async</definition>
        <argsstring>(gfal_handle handle, char **surls)</argsstring>
        <name>gfal_get_async</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>surls</declname>
        </param>
        <briefdescription>
<para>launch a surls-&gt; turls translation in asynchronous mode </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>need a initiaed gfal_handle </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: the gfal_handle initiated ( gfal_init  ) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>surls</parametername>
</parameternamelist>
<parameterdescription>
<para>: table of string of the differents surls to convert, NULL pointer must be the end of the table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return positive if success else -1, check GError for more information Wrapper of gfal_get_asyncG for the &quot;without GLib&quot; use case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="41" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="48" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_1ce6fcac8e92ad2e1d699eed2ce74a257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_async_request_is_finished</definition>
        <argsstring>(gfal_handle handle)</argsstring>
        <name>gfal_async_request_is_finished</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>progress of the last request </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return positive value if the current request is finished, 0 if false or -1 if error occured Wrapper of gfal_async_request_is_finishedG for the &quot;without GLib&quot; use case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="43" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_10c654545b837b8e1928842ee762ce5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async_results</definition>
        <argsstring>(gfal_handle handle, char ***turls)</argsstring>
        <name>gfal_get_async_results</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>turls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the result to the last get_async request <simplesect kind="return"><para>return the number of responses in turls or negative value if error </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: handle of the current context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char***</parametername>
</parameternamelist>
<parameterdescription>
<para>turls : char** turls with the full list of answer, an answer with error is a NULL pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>turls need to be free manually </para></simplesect>
<simplesect kind="return"><para>return the number of turls in the table, else negative value if error Wrapper for the &quot;without GLib&quot; use case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="45" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_1a3161f12f9d5c8151f44df4f132602cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async_get_results_errcodes</definition>
        <argsstring>(gfal_handle handle, int **turl_errcode)</argsstring>
        <name>gfal_get_async_get_results_errcodes</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>turl_errcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the error code list associated with the turls of the last get_async request <simplesect kind="return"><para>return the number of responses in turls or negative value if error </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: handle of the current context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int**</parametername>
</parameternamelist>
<parameterdescription>
<para>turl_errcode : pointer to a table of int, set to NULL if error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>turl_errcode need to be free manually </para></simplesect>
<simplesect kind="return"><para>return the number of turls in the table, else negative value if error Wrapper for gfal_get_async_get_results_errcodesG for the &quot;without GLib&quot; use case </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="47" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="100" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_1ecd7d68b18088ff620d21dbef85862ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async_get_results_errstring</definition>
        <argsstring>(gfal_handle handle, char ***turl_errstring)</argsstring>
        <name>gfal_get_async_get_results_errstring</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>turl_errstring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the error string associated with the turls of the last get_async request <simplesect kind="return"><para>return the number of responses in turls or negative value if error </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: handle of the current context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char***</parametername>
</parameternamelist>
<parameterdescription>
<para>turls : char** turls with the full list of answer, an answer with error is a NULL pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>turl_errstring need to be free manually </para></simplesect>
<simplesect kind="return"><para>return the number of turls in the table, else negative value if error Wrapper for gfal_get_async_get_results_errstringG for the &quot;without GLib&quot; use case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="49" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_108c8573e050334d5342a31a48b7db4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_wait_async_request</definition>
        <argsstring>(gfal_handle handle, long timeout)</argsstring>
        <name>gfal_wait_async_request</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>long</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>wait for the current request </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>: maximum time to wait before error </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return 0 if finished correctly, return 1 if timeout is reached, return -1 if error Wrapper for gfal_wait_async_requestG for the &quot;without GLib&quot; use case. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="51" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__interface_8h_15e3afd0690b23dedf14d6fa7898f28a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_nobdii_srm</definition>
        <argsstring>(gfal_handle handle, gboolean no_bdii_chk)</argsstring>
        <name>gfal_set_nobdii_srm</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gboolean</type>
          <declname>no_bdii_chk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h" line="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The main Interface file for the SRM interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Devresse Adrien </para></simplesect>
<simplesect kind="version"><para>2.0 </para></simplesect>
<simplesect kind="date"><para>12/04/2011 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm_8h" kindref="compound">gfal_common_srm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common_8h" kindref="compound">gfal_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="gfal__common__interface_8c_1bdebd69c0c6a74b1b5adf88b5e836d8a" kindref="member">gfal_last_error_string</ref>(gfal_handle<sp/>handle);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_1ad28f1c5d1a0ed623834e6133bb7dd2e" kindref="member">gfal_has_error</ref>(gfal_handle<sp/>handle);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_14ca376cf47166fabd46a45fccb863ebe" kindref="member">gfal_clear_error</ref>(gfal_handle<sp/>handle);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">gfal_handle<sp/><ref refid="gfal__common__interface_8c_14211faf02a3c5cc696c7c9f974415d11" kindref="member">gfal_handle_new</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gfal_handle_free(gfal_handle<sp/>handle);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_168ef05f37b4971c8306b1cc6ee529647" kindref="member">gfal_get_async</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>surls);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_1ce6fcac8e92ad2e1d699eed2ce74a257" kindref="member">gfal_async_request_is_finished</ref>(gfal_handle<sp/>handle);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_10c654545b837b8e1928842ee762ce5e9" kindref="member">gfal_get_async_results</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>turls);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_1a3161f12f9d5c8151f44df4f132602cb" kindref="member">gfal_get_async_get_results_errcodes</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>turl_errcode);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_1ecd7d68b18088ff620d21dbef85862ae" kindref="member">gfal_get_async_get_results_errstring</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***<sp/>turl_errstring);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_108c8573e050334d5342a31a48b7db4cb" kindref="member">gfal_wait_async_request</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeout);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gfal__common__interface_8c_195450f539ccc18d88b0d7dede8519bef" kindref="member">gfal_set_nobdii_srm</ref>(gfal_handle<sp/>handle,<sp/>gboolean<sp/>no_bdii_chk);</highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.h"/>
  </compounddef>
</doxygen>
