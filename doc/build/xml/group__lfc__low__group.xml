<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="group__lfc__low__group" kind="group">
    <compoundname>lfc_low_group</compoundname>
    <title>internal LFC functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lfc__low__group_1g9515e0e2961815e3e6ef30ac41ba9ebd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int lfc_mkdirp_trans</definition>
        <argsstring>(const char *, mode_t, char *, int, int)</argsstring>
        <name>lfc_mkdirp_trans</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>mode_t</type>
        </param>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="18"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g6520144d1c6e3e12164e2ec9b9436d69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int lfc_init</definition>
        <argsstring>(char *errbuf, int errbufsz) char *lfc_get_catalog_endpoint(char *errbuf</argsstring>
        <name>lfc_init</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="22"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g4fa605c700ac841df98ffb1b4f2d0ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_replica_exists</definition>
        <argsstring>(const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_replica_exists</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="24" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="178" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g145e85cc530b23736eea535580c4e5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_accessl</definition>
        <argsstring>(const char *path, const char *guid, int mode, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_accessl</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="26" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="197" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g45d447082c9b4e1a47684a43f198d2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_chmodl</definition>
        <argsstring>(const char *path, mode_t mode, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_chmodl</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="28" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="251" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g344113bab975bfeedfa4be33b2054745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* lfc_guidforpfn</definition>
        <argsstring>(const char *pfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guidforpfn</name>
        <param>
          <type>const char *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>lfc_guidforpfn : Get the guid for a replica. If the replica does not exist, fail with ENOENT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="34" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="270" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gf922973a476763abd5185fc13d2af9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_guidsforpfns</definition>
        <argsstring>(int nbfiles, const char **pfns, int amode, char ***guids, int **statuses, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guidsforpfns</name>
        <param>
          <type>int</type>
          <declname>nbfiles</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pfns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amode</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>guids</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>statuses</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>lfc_guidsforpfns : Get the guid for a replica. If the replica does not exist, fail with ENOENT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="41" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="294" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g89af6526e8342c74f90fa2ee10cdc5fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_guid_exists</definition>
        <argsstring>(const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guid_exists</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test if guid exists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="45" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="377" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g942218fc4c4fa95df2bf10db3f3fad75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** lfc_get_replicas</definition>
        <argsstring>(const char *lfn, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_get_replicas</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="47" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="397" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g9ea58977487f9be50e91ba9857bc9510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_unregister_pfns</definition>
        <argsstring>(int nbguids, const char **guids, const char **pfns, int **results, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_unregister_pfns</name>
        <param>
          <type>int</type>
          <declname>nbguids</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>guids</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pfns</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>results</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister replicas (SURLs) from a GUIDs, and remove all links to a GUID if there are no more replicas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="54" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="443" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g338e9042e72eeffa51e27beca09675c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* lfc_guidfromlfn</definition>
        <argsstring>(const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guidfromlfn</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="56" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="545" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g546944558296f5a894005368c236cccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** lfc_get_aliases</definition>
        <argsstring>(const char *lfn, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_get_aliases</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="58" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="565" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gdc3db49fb133cc79ae3250731167b478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_register_file</definition>
        <argsstring>(const char *lfn, const char *guid, const char *surl, mode_t mode, GFAL_LONG64 size, int bool_createonly, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_register_file</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GFAL_LONG64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bool_createonly</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="61" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="610" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gbcf2a1618d925816f8b570cdeac04afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_register_alias</definition>
        <argsstring>(const char *guid, const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_register_alias</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="63" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="777" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g776fc6004cd4c565c42be3365a719376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_unregister_alias</definition>
        <argsstring>(const char *guid, const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_unregister_alias</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="65" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="823" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gb13d4fafbe48d4748371fb2780381908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_mkdirp</definition>
        <argsstring>(const char *path, mode_t mode, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_mkdirp</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="67" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="871" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gf0a92088b3b2bd149ad3968573d3dbce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_renamel</definition>
        <argsstring>(const char *old_name, const char *new_name, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_renamel</name>
        <param>
          <type>const char *</type>
          <declname>old_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="69" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="955" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1ge22436958fd4ad2bb2bcc1b608aa7f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DIR *</type>
        <definition>DIR* lfc_opendirlg</definition>
        <argsstring>(const char *dirname, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_opendirlg</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="71" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="972" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1ga46361de52e13b63a74c50589a75fa33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_rmdirl</definition>
        <argsstring>(const char *dirname, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_rmdirl</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="73" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="991" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g6be41de8da5424cc099b88ec27f772c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_maperror</definition>
        <argsstring>(struct proto_ops *pops, int ioflag)</argsstring>
        <name>lfc_maperror</name>
        <param>
          <type>struct proto_ops *</type>
          <declname>pops</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ioflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="75" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="1008" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g30eee0fb314a09f9b28cddd249ccf692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_setsize</definition>
        <argsstring>(const char *lfn, GFAL_LONG64 size, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_setsize</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>GFAL_LONG64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="77" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="1014" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g3115c08a5c7ffb01087a192358a40ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_statl</definition>
        <argsstring>(const char *lfn, const char *guid, struct stat64 *buf, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_statl</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>struct stat64 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="79" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="1031" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g498672f9d3482822d3da75e23903cfdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_lstatl</definition>
        <argsstring>(const char *lfn, struct stat64 *buf, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_lstatl</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>struct stat64 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="81" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="1062" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g0b34fbad9eb051aa476eec5bea9e7692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_fillsurls</definition>
        <argsstring>(gfal_file gf, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_fillsurls</name>
        <param>
          <type>gfal_file</type>
          <declname>gf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="83" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="1093" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g1f63e86121210390d7f0d448bdd4d44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_remove</definition>
        <argsstring>(gfal_file gfile, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_remove</name>
        <param>
          <type>gfal_file</type>
          <declname>gfile</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="85" bodyfile="/home/adevress/myworkspace/gfal/src/lfc_ifce.c" bodystart="1270" bodyend="1349"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__lfc__low__group_1g51ff886d2f9a537a943f4db41528d563" prot="public" static="no" mutable="no">
        <type>int int</type>
        <definition>int int errbufsz</definition>
        <argsstring></argsstring>
        <name>errbufsz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" line="22" bodyfile="/home/adevress/myworkspace/gfal/doc/src/LFC_LOW_LEVEL_API.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
