<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal__common__srm_8h" kind="file">
    <compoundname>gfal_common_srm.h</compoundname>
    <includes refid="gfal__types_8h" local="yes">gfal_types.h</includes>
    <includes refid="gfal__common__internal_8h" local="yes">gfal_common_internal.h</includes>
    <includes refid="gfal__prototypes_8h" local="yes">gfal_prototypes.h</includes>
    <includes refid="gfal__constants_8h" local="yes">gfal_constants.h</includes>
    <includedby refid="gfal__common__internal_8h" local="yes">/home/adevress/myworkspace/gfal/src/common/gfal_common_internal.h</includedby>
    <includedby refid="gfal__common__srm_8c" local="yes">/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c</includedby>
    <includedby refid="gfal__common__srm__open_8c" local="yes">/home/adevress/myworkspace/gfal/src/common/gfal_common_srm_open.c</includedby>
    <includedby refid="gfal__posix__stat_8c" local="yes">/home/adevress/myworkspace/gfal/src/posix/gfal_posix_stat.c</includedby>
    <incdepgraph>
      <node id="484">
        <label>sys/stat.h</label>
      </node>
      <node id="488">
        <label>stdarg.h</label>
      </node>
      <node id="492">
        <label>gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
      </node>
      <node id="486">
        <label>gfal_prototypes.h</label>
        <link refid="gfal__prototypes_8h-source"/>
        <childnode refid="481" relation="include">
        </childnode>
      </node>
      <node id="490">
        <label>errno.h</label>
      </node>
      <node id="485">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="489">
        <label>uuid/uuid.h</label>
      </node>
      <node id="478">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h</label>
        <link refid="gfal_common_srm.h"/>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
      </node>
      <node id="482">
        <label>sys/types.h</label>
      </node>
      <node id="491">
        <label>string.h</label>
      </node>
      <node id="496">
        <label>lfc_api.h</label>
      </node>
      <node id="495">
        <label>lfc/lfc_ifce.h</label>
        <link refid="lfc__ifce_8h-source"/>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="480">
        <label>unistd.h</label>
      </node>
      <node id="481">
        <label>glib.h</label>
      </node>
      <node id="493">
        <label>gfal_common.h</label>
        <link refid="gfal__common_8h"/>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
      </node>
      <node id="487">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="494">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="497">
        <label>voms_apic.h</label>
      </node>
      <node id="479">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
      <node id="483">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="499">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_srm_open.c</label>
        <link refid="gfal__common__srm__open_8c"/>
      </node>
      <node id="503">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix_stat.c</label>
        <link refid="gfal__posix__stat_8c"/>
      </node>
      <node id="498">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h</label>
        <link refid="gfal_common_srm.h"/>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
      </node>
      <node id="500">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c</label>
        <link refid="gfal__common__interface_8c"/>
      </node>
      <node id="501">
        <label>/home/adevress/myworkspace/gfal/src/common/lfc/gfal_common_lfc.c</label>
        <link refid="gfal__common__lfc_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__gfal__srm__result" prot="public">_gfal_srm_result</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="gfal__common__srm_8h_1c163cc407dc64638a5f13fe1d7ceb858" prot="public" static="no">
        <name>GFAL_PREFIX_SRM</name>
        <initializer>&quot;srm://&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="35" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gfal__common__srm_8h_1496c8a18054866dcb27ae3f3397ac303" prot="public" static="no">
        <name>GFAL_ENDPOINT_DEFAULT_PREFIX</name>
        <initializer>&quot;httpg://&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="36" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gfal__common__srm_8h_195ffd4de24c18af334c1d9c270de7d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_asyncG</definition>
        <argsstring>(gfal_handle handle, GList *surls, GError **err)</argsstring>
        <name>gfal_get_asyncG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GList *</type>
          <declname>surls</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>launch a surls-&gt; turls translation in asynchronous mode </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>need a initiaed gfal_handle </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: the gfal_handle initiated ( gfal_init  ) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>surls</parametername>
</parameternamelist>
<parameterdescription>
<para>: GList of string of the differents surls to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>: GError** for error report </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return positive if success else -1, check GError for more information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="45" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="394" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_11c3a2a23f764ce8bf5cdd73108e4d9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async_resultsG</definition>
        <argsstring>(gfal_handle handle, GList **turls, GError **err)</argsstring>
        <name>gfal_get_async_resultsG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GList **</type>
          <declname>turls</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>get the result to the last get_async request </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return the number of response in turls or negative value if error </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: handle of the current context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GList**</parametername>
</parameternamelist>
<parameterdescription>
<para>turls : GList&lt;char*&gt; turls with the full list of answer, an answer with error is a NULL pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>turls need to be free manually </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="47" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="584" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_1b628e9ad3599f656f022f9101020f519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>gboolean gfal_async_request_is_finishedG</definition>
        <argsstring>(gfal_handle handle, GError **err)</argsstring>
        <name>gfal_async_request_is_finishedG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>progress of the last request </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return TRUE if the current request is finished else FALSE </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>: Gerror** err system </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="49" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="556" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_10d1a5a270a56e0123960a0087bc33c08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async_results_errcodesG</definition>
        <argsstring>(gfal_handle handle, GList **turl_errcode, GError **err)</argsstring>
        <name>gfal_get_async_results_errcodesG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GList **</type>
          <declname>turl_errcode</declname>
          <defname>turls_errcode</defname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>errcode of each turls request </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: handle associated with the request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>turl_errcode</parametername>
</parameternamelist>
<parameterdescription>
<para>: GList&lt;int&gt; of all the errcode associated with the request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>: Gerror** err system </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return number of request turl if success else return negative value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="51" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="685" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_1089643e4b8996a1e8896009f266ccdf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async_results_errstringG</definition>
        <argsstring>(gfal_handle handle, GList **turl_errstring, GError **err)</argsstring>
        <name>gfal_get_async_results_errstringG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GList **</type>
          <declname>turl_errstring</declname>
          <defname>turls_errstring</defname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>get the error string of each request </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>turl_errcode</parametername>
</parameternamelist>
<parameterdescription>
<para>: GList&lt;char*&gt;, give a string error for each turl request, char* can be NULL if no error associated </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return number of request turl if success else return negative value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="53" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="601" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_1171b068add7188f1c08509edf5f4b01d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_async_results_structG</definition>
        <argsstring>(gfal_handle handle, gfal_srm_result **tab_struct, GError **err)</argsstring>
        <name>gfal_get_async_results_structG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gfal_srm_result **</type>
          <declname>tab_struct</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>get </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tab_struct</parametername>
</parameternamelist>
<parameterdescription>
<para>: struct gfal_srm_result*, give a table of a struct gfal_srm_result </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return number of results in table if success else return negative value </para></simplesect>
<simplesect kind="warning"><para>the *tab_struct need to be free() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="55" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="632" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_186890a00f72d9af9ab88f42a69e3bf8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_wait_async_requestG</definition>
        <argsstring>(gfal_handle handle, long timeout, GError **err)</argsstring>
        <name>gfal_wait_async_requestG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>long</type>
          <declname>timeout</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>wait for the current request </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>: maximum time to wait before error </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>: Error report system </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return 0 if finished correctly, return -1 if timeout is reached or if error ( err is set ) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="57" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="660" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_1f0881b420a0b33b1e0f289ee8a7fe578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_delete_srmv2_pinstatuses</definition>
        <argsstring>(struct srmv2_pinfilestatus *srmv2_pinstatuses, int n)</argsstring>
        <name>gfal_delete_srmv2_pinstatuses</name>
        <param>
          <type>struct srmv2_pinfilestatus *</type>
          <declname>srmv2_pinstatuses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>delete properly a struct srmv2_pinstatuses </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="67" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="45" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_12e7ac01f03bbd88580d25496aa16631f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_delete_srmv2_statuses</definition>
        <argsstring>(struct srmv2_filestatus *srmv2_statuses, int n)</argsstring>
        <name>gfal_delete_srmv2_statuses</name>
        <param>
          <type>struct srmv2_filestatus *</type>
          <declname>srmv2_statuses</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>delete properly a struct srmv2_pinstatuses </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="69" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="79" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm_8h_1867db4fccb89253a14e6d126ac9bb3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_delete_srmv2_mdfilestatus</definition>
        <argsstring>(struct srmv2_mdfilestatus *mdfilestatus, int n)</argsstring>
        <name>gfal_delete_srmv2_mdfilestatus</name>
        <param>
          <type>struct srmv2_mdfilestatus *</type>
          <declname>mdfilestatus</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>delete properly a struct srmv2_mdfilestatus </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" line="71" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.c" bodystart="60" bodyend="74"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the header file with the main srm funcs of the common API </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Devresse Adrien </para></simplesect>
<simplesect kind="version"><para>2.0 </para></simplesect>
<simplesect kind="date"><para>12/04/2011 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor">#include<sp/>&quot;gfal_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__internal_8h" kindref="compound">gfal_common_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_prototypes.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GFAL_PREFIX_SRM<sp/>&quot;srm://&quot;</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GFAL_ENDPOINT_DEFAULT_PREFIX<sp/>&quot;httpg://&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_gfal_srm_result{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>turl[GFAL_URL_MAX_LEN+1];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_code;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>err_str[GFAL_ERRMSG_LEN+1];</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_get_asyncG(gfal_handle<sp/>handle,<sp/>GList*<sp/>surls,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_get_async_resultsG(gfal_handle<sp/>handle,<sp/>GList**<sp/>turls,<sp/><sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">gboolean<sp/>gfal_async_request_is_finishedG(gfal_handle<sp/>handle,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_get_async_results_errcodesG(gfal_handle<sp/>handle,<sp/>GList**<sp/>turl_errcode,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_get_async_results_errstringG(gfal_handle<sp/>handle,<sp/>GList**<sp/>turl_errstring,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_get_async_results_structG(gfal_handle<sp/>handle,<sp/>gfal_srm_result**<sp/>tab_struct,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_wait_async_requestG(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeout,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>Internal<sp/>one,<sp/>support<sp/>not<sp/>provided</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gfal_delete_srmv2_pinstatuses(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_pinfilestatus*<sp/><sp/>srmv2_pinstatuses,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gfal_delete_srmv2_statuses(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_filestatus*<sp/><sp/>srmv2_statuses,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gfal_delete_srmv2_mdfilestatus(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_mdfilestatus*<sp/>mdfilestatus,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h"/>
  </compounddef>
</doxygen>
