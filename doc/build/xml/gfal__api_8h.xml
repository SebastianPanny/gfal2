<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal__api_8h" kind="file">
    <compoundname>gfal_api.h</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="gfal__constants_8h" local="yes">gfal_constants.h</includes>
    <includes refid="gfal__types_8h" local="yes">gfal_types.h</includes>
    <includedby refid="mds__ifce_8c" local="yes">/home/adevress/myworkspace/gfal/src/mds_ifce.c</includedby>
    <includedby refid="gfal__version_8c" local="yes">/home/adevress/myworkspace/gfal/src/posix/gfal_version.c</includedby>
    <incdepgraph>
      <node id="372">
        <label>sys/stat.h</label>
      </node>
      <node id="369">
        <label>/home/adevress/myworkspace/gfal/src/gfal_api.h</label>
        <link refid="gfal_api.h"/>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
      </node>
      <node id="375">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="370">
        <label>sys/types.h</label>
      </node>
      <node id="376">
        <label>unistd.h</label>
      </node>
      <node id="373">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="374">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gfal_version</definition>
        <argsstring>()</argsstring>
        <name>gfal_version</name>
        <briefdescription>
<para>return a string of the current gfal_version define at the compilation time </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="40" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1409" bodyend="1411"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g331e181c2fadd801321ad43033835052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_verbose</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_verbose</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>set the verbose mode for the current program </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>: { GFAL_VERBOSE_QUIET , GFAL_VERBOSE_NORMAL  , GFAL_VERBOSE_VERBOSE  , GFAL_VERBOSE_DEBUG  } </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="41" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_errverbose.c" bodystart="39" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1gcf4ae9045b7e5a2a697b1bb1f05994a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_vo</definition>
        <argsstring>(const char *vo)</argsstring>
        <name>gfal_set_vo</name>
        <param>
          <type>const char *</type>
          <declname>vo</declname>
        </param>
        <briefdescription>
<para>set the vo used by gfal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="42" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common.c" bodystart="132" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g267920b468d7578c10aa25469f8cadf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_nobdii</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_nobdii</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>define if bdii System is ignored or not </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>0 for False else true </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="43" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1413" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g62f544258aa58af5122f40f0eb1a7c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_connect</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_connect</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>change the default timeout </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="44" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="34" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g63ec5d282f39173b678ecad2d60a4a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_connect</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_connect</name>
        <briefdescription>
<para>get the current timeout default value : 60 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="45" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1gedd91bb343f17bc2c0ba9db1203f1819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_sendreceive</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_sendreceive</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the value for the send/receive timeout </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="46" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g198564ca7617a8f3dec7c6b925b2c760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_sendreceive</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_sendreceive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the value for the send/receive timeout default value : 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="47" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g7fc461515a2cdf649fd516319cb54ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_bdii</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_bdii</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the timeout for the bdii queries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="48" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g676f0d746479f2c9893609854099d614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_bdii</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_bdii</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the current the timeout for the bdii queries defautl value : 60 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="49" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1gc0dac1437f150d4b5b8779f456050bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_srm</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_srm</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the timeout for the SRM queries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="50" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g31f524748949fca765e6fb8aa20ef41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_srm</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_srm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the timeout for the SRM queries default value : 3600 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="51" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g11dd2ec58a632427ae12b710006c15a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gfal_get_checksum_algname</definition>
        <argsstring>(enum gfal_cksm_type)</argsstring>
        <name>gfal_get_checksum_algname</name>
        <param>
          <type>enum</type>
          <declname>gfal_cksm_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="52" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_checksum.c" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g0ac1b12c9af897b63173fd73043e1669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum gfal_cksm_type</type>
        <definition>enum gfal_cksm_type gfal_parse_checksum_algname</definition>
        <argsstring>(const char *)</argsstring>
        <name>gfal_parse_checksum_algname</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h" line="53" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_checksum.c" bodystart="45" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@(#)$RCSfile:<sp/>gfal_api.h,v<sp/>$<sp/>$Revision:<sp/>1.69<sp/>$<sp/>$Date:<sp/>2009/04/08<sp/>14:23:09<sp/>$<sp/>CERN<sp/>Jean-Philippe<sp/>Baud</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_GFAL_API_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GFAL_API_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>enforce<sp/>proper<sp/>calling<sp/>convention<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/********************<sp/>Common<sp/>functions<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" kindref="member">gfal_version</ref><sp/>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g331e181c2fadd801321ad43033835052" kindref="member">gfal_set_verbose</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1gcf4ae9045b7e5a2a697b1bb1f05994a8" kindref="member">gfal_set_vo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vo);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g267920b468d7578c10aa25469f8cadf7" kindref="member">gfal_set_nobdii</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g62f544258aa58af5122f40f0eb1a7c92" kindref="member">gfal_set_timeout_connect</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g63ec5d282f39173b678ecad2d60a4a6f" kindref="member">gfal_get_timeout_connect</ref><sp/>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1gedd91bb343f17bc2c0ba9db1203f1819" kindref="member">gfal_set_timeout_sendreceive</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g198564ca7617a8f3dec7c6b925b2c760" kindref="member">gfal_get_timeout_sendreceive</ref><sp/>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g7fc461515a2cdf649fd516319cb54ea9" kindref="member">gfal_set_timeout_bdii</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g676f0d746479f2c9893609854099d614" kindref="member">gfal_get_timeout_bdii</ref><sp/>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1gc0dac1437f150d4b5b8779f456050bec" kindref="member">gfal_set_timeout_srm</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g31f524748949fca765e6fb8aa20ef41c" kindref="member">gfal_get_timeout_srm</ref><sp/>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*gfal_get_checksum_algname<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_cksm_type);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_cksm_type<sp/>gfal_parse_checksum_algname<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SWIGPYTHON</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_get_errno<sp/>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/********************<sp/>POSIX<sp/>functions<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment">int<sp/>gfal_access<sp/>(const<sp/>char<sp/>*,<sp/>int);</highlight></codeline>
<codeline lineno="63"><highlight class="comment">int<sp/>gfal_chmod<sp/>(const<sp/>char<sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="64"><highlight class="comment">int<sp/>gfal_close<sp/>(int);</highlight></codeline>
<codeline lineno="65"><highlight class="comment">int<sp/>gfal_closedir<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="66"><highlight class="comment">int<sp/>gfal_creat<sp/>(const<sp/>char<sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="67"><highlight class="comment">int<sp/>gfal_creat64<sp/>(const<sp/>char<sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="68"><highlight class="comment">off_t<sp/>gfal_lseek<sp/>(int,<sp/>off_t,<sp/>int);</highlight></codeline>
<codeline lineno="69"><highlight class="comment">int<sp/>gfal_mkdir<sp/>(const<sp/>char<sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="70"><highlight class="comment">int<sp/>gfal_open<sp/>(const<sp/>char<sp/>*,<sp/>int,<sp/>mode_t);</highlight></codeline>
<codeline lineno="71"><highlight class="comment">int<sp/>gfal_open64<sp/>(const<sp/>char<sp/>*,<sp/>int,<sp/>mode_t);</highlight></codeline>
<codeline lineno="72"><highlight class="comment">DIR<sp/>*gfal_opendir<sp/>(const<sp/>char<sp/>*);</highlight></codeline>
<codeline lineno="73"><highlight class="comment">ssize_t<sp/>gfal_read<sp/>(int,<sp/>void<sp/>*,<sp/>size_t);</highlight></codeline>
<codeline lineno="74"><highlight class="comment">struct<sp/>dirent<sp/>*gfal_readdir<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="75"><highlight class="comment">int<sp/>gfal_rename<sp/>(const<sp/>char<sp/>*,<sp/>const<sp/>char<sp/>*);</highlight></codeline>
<codeline lineno="76"><highlight class="comment">int<sp/>gfal_rmdir<sp/>(const<sp/>char<sp/>*);</highlight></codeline>
<codeline lineno="77"><highlight class="comment">ssize_t<sp/>gfal_setfilchg<sp/>(int,<sp/>const<sp/>void<sp/>*,<sp/>size_t);</highlight></codeline>
<codeline lineno="78"><highlight class="comment">int<sp/>gfal_unlink<sp/>(const<sp/>char<sp/>*);</highlight></codeline>
<codeline lineno="79"><highlight class="comment">ssize_t<sp/>gfal_write<sp/>(int,<sp/>const<sp/>void<sp/>*,<sp/>size_t);</highlight></codeline>
<codeline lineno="80"><highlight class="comment">#if<sp/>!<sp/>defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="81"><highlight class="comment">off64_t<sp/>gfal_lseek64<sp/>(int,<sp/>off64_t,<sp/>int);</highlight></codeline>
<codeline lineno="82"><highlight class="comment">int<sp/>gfal_lstat<sp/>(const<sp/>char<sp/>*,<sp/>struct<sp/>stat<sp/>*);</highlight></codeline>
<codeline lineno="83"><highlight class="comment">int<sp/>gfal_lstat64<sp/>(const<sp/>char<sp/>*,<sp/>struct<sp/>stat64<sp/>*);</highlight></codeline>
<codeline lineno="84"><highlight class="comment">int<sp/>gfal_stat<sp/>(const<sp/>char<sp/>*,<sp/>struct<sp/>stat<sp/>*);</highlight></codeline>
<codeline lineno="85"><highlight class="comment">int<sp/>gfal_stat64<sp/>(const<sp/>char<sp/>*,<sp/>struct<sp/>stat64<sp/>*);</highlight></codeline>
<codeline lineno="86"><highlight class="comment">#if<sp/>defined(linux)<sp/>||<sp/>defined(sun)</highlight></codeline>
<codeline lineno="87"><highlight class="comment">struct<sp/>dirent64<sp/>*gfal_readdir64<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="88"><highlight class="comment">#endif</highlight></codeline>
<codeline lineno="89"><highlight class="comment">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/********************<sp/>SRM<sp/>functions<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/gfal_api.h"/>
  </compounddef>
</doxygen>
