<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal_8c" kind="file">
    <compoundname>gfal.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">dlfcn.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">glib.h</includes>
    <includes local="no">uuid/uuid.h</includes>
    <includes refid="gfal__internals_8h" local="yes">gfal_internals.h</includes>
    <includes local="yes">voms_apic.h</includes>
    <includes refid="gfal__api_8h" local="yes">gfal_api.h</includes>
    <includes refid="lfc__ifce_8h" local="yes">lfc_ifce.h</includes>
    <includes local="no">gfal_srm_ifce.h</includes>
    <includes local="no">gfal_srm_ifce_types.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="gfal__common_8h" local="yes">gfal_common.h</includes>
    <incdepgraph>
      <node id="146">
        <label>sys/stat.h</label>
      </node>
      <node id="141">
        <label>stdarg.h</label>
      </node>
      <node id="154">
        <label>assert.h</label>
      </node>
      <node id="132">
        <label>stdlib.h</label>
      </node>
      <node id="143">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>errno.h</label>
      </node>
      <node id="135">
        <label>fcntl.h</label>
      </node>
      <node id="130">
        <label>/home/adevress/myworkspace/gfal/src/gfal.c</label>
        <link refid="gfal.c"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>gfal_api.h</label>
        <link refid="gfal__api_8h-source"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="140">
        <label>gfal_internals.h</label>
        <link refid="gfal__internals_8h-source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>uuid/uuid.h</label>
      </node>
      <node id="144">
        <label>sys/types.h</label>
      </node>
      <node id="133">
        <label>string.h</label>
      </node>
      <node id="152">
        <label>lfc_api.h</label>
      </node>
      <node id="147">
        <label>unistd.h</label>
      </node>
      <node id="151">
        <label>lfc_ifce.h</label>
        <link refid="lfc__ifce_8h-source"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>glib.h</label>
      </node>
      <node id="137">
        <label>time.h</label>
      </node>
      <node id="155">
        <label>gfal_common.h</label>
        <link refid="gfal__common_8h"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="153">
        <label>gfal_srm_ifce.h</label>
      </node>
      <node id="156">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>voms_apic.h</label>
      </node>
      <node id="131">
        <label>stdio.h</label>
      </node>
      <node id="145">
        <label>dirent.h</label>
      </node>
      <node id="136">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="gfal_8c_153abf256730d533302d1910e5fb61efe" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="22" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gfal_8c_1616a28e950e9272a02aa05e39154d50e" prot="public" static="no">
        <name>OFF_MAX</name>
        <initializer>2147483647</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="43" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gfal_8c_10bb77a5d8a45b2679d2c1784e5ac2686" prot="public" static="no">
        <name>ENDPOINT_DEFAULT_PREFIX</name>
        <initializer>&quot;httpg://&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2498" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gfal_8c_1fb26b505193c80088cceb0cdf63cc257" prot="public" static="no">
        <name>ENDPOINT_DEFAULT_PREFIX_LEN</name>
        <initializer>strlen(&quot;httpg://&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2499" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2499" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="gfal_8c_12ae31c1afe65d0881012d5482f00b4c0" prot="public" static="no">
        <name>status_type</name>
        <enumvalue id="gfal_8c_12ae31c1afe65d0881012d5482f00b4c0e03131760a27e5f1c97a2ca16e096c1d" prot="public">
          <name>DEFAULT_STATUS</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gfal_8c_12ae31c1afe65d0881012d5482f00b4c0d1d44c4fc60f36b7da9f3ca0c005b657" prot="public">
          <name>MD_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gfal_8c_12ae31c1afe65d0881012d5482f00b4c0ad8c3f2f5dccbe650b65b34e4eb52b50" prot="public">
          <name>PIN_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="62" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="62" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gfal_8c_1bce0ec2872720ed0822d0f7dfbfb8ebc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct dir_info *</type>
        <definition>static struct dir_info * alloc_di</definition>
        <argsstring>(DIR *)</argsstring>
        <name>alloc_di</name>
        <param>
          <type>DIR *</type>
          <defname>dir</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="64" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="216" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1e507474c25d1596874828e29bd176af4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xfer_info *</type>
        <definition>static struct xfer_info * alloc_xi</definition>
        <argsstring>(int)</argsstring>
        <name>alloc_xi</name>
        <param>
          <type>int</type>
          <defname>fd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="65" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1d55080f761d644518ad9b40bb081ad93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct dir_info *</type>
        <definition>static struct dir_info * find_di</definition>
        <argsstring>(DIR *)</argsstring>
        <name>find_di</name>
        <param>
          <type>DIR *</type>
          <defname>dir</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="66" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="242" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_12948eaedd64ef3fa522518ad58d7a136" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xfer_info *</type>
        <definition>static struct xfer_info * find_xi</definition>
        <argsstring>(int)</argsstring>
        <name>find_xi</name>
        <param>
          <type>int</type>
          <defname>fd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="67" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="255" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1c1f003da17b72e19720931c649bdf07e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_di</definition>
        <argsstring>(struct dir_info *)</argsstring>
        <name>free_di</name>
        <param>
          <type>struct dir_info *</type>
          <defname>di</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="68" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1c2bf54be838e3e4690e483ef236bfd66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int free_xi</definition>
        <argsstring>(int)</argsstring>
        <name>free_xi</name>
        <param>
          <type>int</type>
          <defname>fd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="69" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="271" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1ee3079a103f19f540aeadf0e388e2547" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mdtomd32</definition>
        <argsstring>(struct stat64 *, struct stat *)</argsstring>
        <name>mdtomd32</name>
        <param>
          <type>struct stat64 *</type>
          <defname>statb64</defname>
        </param>
        <param>
          <type>struct stat *</type>
          <defname>statbuf</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="70" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2480" bodyend="2497"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_16e8520c83447147343d3f0214cf6745e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int copy_gfal_results</definition>
        <argsstring>(gfal_internal, enum status_type)</argsstring>
        <name>copy_gfal_results</name>
        <param>
          <type>gfal_internal</type>
          <defname>req</defname>
        </param>
        <param>
          <type>enum</type>
          <declname>status_type</declname>
          <defname>stype</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="71" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3799" bodyend="3877"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_118c139f1668b2f2c3f94990d06922295" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_gfal_internal</definition>
        <argsstring>(gfal_internal, int, char *, int)</argsstring>
        <name>check_gfal_internal</name>
        <param>
          <type>gfal_internal</type>
          <defname>req</defname>
        </param>
        <param>
          <type>int</type>
          <defname>allow_null_surls</defname>
        </param>
        <param>
          <type>char *</type>
          <defname>errbuf</defname>
        </param>
        <param>
          <type>int</type>
          <defname>errbufsz</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="72" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3687" bodyend="3697"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_171dfa5cc817ae044a0c9239839352fcc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_gfal_results</definition>
        <argsstring>(gfal_filestatus *, int)</argsstring>
        <name>free_gfal_results</name>
        <param>
          <type>gfal_filestatus *</type>
          <defname>gfal</defname>
        </param>
        <param>
          <type>int</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="73" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3700" bodyend="3750"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1bb9f3666f8847e92e6ddfa2039959afd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_srmv2_mdstatuses</definition>
        <argsstring>(struct srmv2_mdfilestatus *, int)</argsstring>
        <name>free_srmv2_mdstatuses</name>
        <param>
          <type>struct srmv2_mdfilestatus *</type>
          <defname>md</defname>
        </param>
        <param>
          <type>int</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="74" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3753" bodyend="3765"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_154942230ba2576538e1ad096332950b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_parse_vomsdata</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>gfal_parse_vomsdata</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="81" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="80" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g6bd6336b0fee1ff32ad6bc5ef3d96068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_get_userdn</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>gfal_get_userdn</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="149" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="148" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1gcf4ae9045b7e5a2a697b1bb1f05994a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_vo</definition>
        <argsstring>(const char *vo)</argsstring>
        <name>gfal_set_vo</name>
        <param>
          <type>const char *</type>
          <declname>vo</declname>
        </param>
        <briefdescription>
<para>set the vo used by gfal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="163" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="162" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g1d7294ee456d16c8b1bf40f97ffb5081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_get_vo</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>gfal_get_vo</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="181" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="180" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g54b4e29078838583c8022630ef5a2ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_fqan</definition>
        <argsstring>(char ***fqan, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_get_fqan</name>
        <param>
          <type>char ***</type>
          <declname>fqan</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="196" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="195" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g3a35f0e6f616c5108f95cfffd557db77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_is_purifydisabled</definition>
        <argsstring>()</argsstring>
        <name>gfal_is_purifydisabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="208" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="207" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g33d6a4a93117a6c07405aa6ac0d42122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_access</definition>
        <argsstring>(const char *path, int amode)</argsstring>
        <name>gfal_access</name>
        <param>
          <type>const char *</type>
          <defname>path</defname>
        </param>
        <param>
          <type>int</type>
          <defname>amode</defname>
        </param>
        <briefdescription>
<para>test access to the given file </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>can be in supported protocols lfn, srm, file, tftp </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately <linebreak/>
<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>ENOENT: The named file/directory does not exist.</para></listitem><listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="284" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="283" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gdfeeecb2052d81e65bcc09903655991b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_chmod</definition>
        <argsstring>(const char *path, mode_t mode)</argsstring>
        <name>gfal_chmod</name>
        <param>
          <type>const char *</type>
          <defname>path</defname>
        </param>
        <param>
          <type>mode_t</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
<para>set rights of the file/dir </para>        </briefdescription>
        <detaileddescription>
<para>changes access mode of the file/directory path according to the bit pattern in mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the file name (this can only be a TURL in the current implementation). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the bit pattern is built by an OR of the constants defined in &lt;sys/stat.h&gt;. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately <linebreak/>
<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>ENOENT: The named file/directory does not exist.</para></listitem><listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="448" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="447" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g83b88bd27def4c4e2fdfea3c5bbf88b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_close</definition>
        <argsstring>(int fd)</argsstring>
        <name>gfal_close</name>
        <param>
          <type>int</type>
          <defname>fd</defname>
        </param>
        <briefdescription>
<para>close the current file descriptor </para>        </briefdescription>
        <detaileddescription>
<para>close the file whose descriptor fd is the one returned by gfal_open. <simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately.<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>EBADF: fd is not a valid file descriptor</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="475" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="474" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g1c97c21d23c919b2647f17bbc8b79db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_closedir</definition>
        <argsstring>(DIR *dir)</argsstring>
        <name>gfal_closedir</name>
        <param>
          <type>DIR *</type>
          <defname>dir</defname>
        </param>
        <briefdescription>
<para>gfal_closedir - close a directory </para>        </briefdescription>
        <detaileddescription>
<para>gfal_closedir closes the directory opened by gfal_opendir and associated with the DIR structure pointed by dirp <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately.</para></simplesect>
<itemizedlist>
<listitem><para>ERRORS : -EBADF :File descriptor in DIR structure is invalid.<itemizedlist>
<listitem><para>ECOMM : Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT : Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="514" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="513" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g5fcdc6f3e7911787be049e20b6ab19b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_creat</definition>
        <argsstring>(const char *filename, mode_t mode)</argsstring>
        <name>gfal_creat</name>
        <param>
          <type>const char *</type>
          <defname>filename</defname>
        </param>
        <param>
          <type>mode_t</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
<para>creates a new file or truncates an existing one </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the file name: either a logical file name, a guid, an SURL or a TURL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>is used only if the file is created </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns a write-only file descriptor if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>ENOENT: The named file/directory does not exist.</para></listitem><listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>EBUSY: Device or resource busy. Happens if you try to open in write mode a CASTOR file that is in an active migration stream</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="539" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="538" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g48783e60cafa1a3bf9aa2170b99f9b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_creat64</definition>
        <argsstring>(const char *filename, mode_t mode)</argsstring>
        <name>gfal_creat64</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>same as create for large file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="545" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="544" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1e6fb0cae56e9344c2b6ed23001f7dcb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_errmsg</definition>
        <argsstring>(char *errbuf, int errbufsz, int level, const char *format,...)</argsstring>
        <name>gfal_errmsg</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="553" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="552" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g8ba4e1df5f2e6439641c56f245d5ce73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>off_t</type>
        <definition>off_t gfal_lseek</definition>
        <argsstring>(int fd, off_t offset, int whence)</argsstring>
        <name>gfal_lseek</name>
        <param>
          <type>int</type>
          <defname>fd</defname>
        </param>
        <param>
          <type>off_t</type>
          <defname>offset</defname>
        </param>
        <param>
          <type>int</type>
          <defname>whence</defname>
        </param>
        <briefdescription>
<para>gfal_lseek - position a file </para>        </briefdescription>
        <detaileddescription>
<para>gfal_lseek positions/repositions to offset the file associated with the descriptor fd generated by a previous gfal_open. whence indicates how to interpret the offset value:</para><para><itemizedlist>
<listitem><para>SEEK_SET The offset is set from beginning of file.</para></listitem><listitem><para>SEEK_CUR The offset is added to current position.</para></listitem><listitem><para>SEEK_END The offset is added to current file size.</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>This routine returns the actual offset from the beginning of the file if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately.<itemizedlist>
<listitem><para>ERRORS :<itemizedlist>
<listitem><para>EBADF fd is not a valid file descriptor.</para></listitem><listitem><para>EINVAL incorrect value for whence.</para></listitem><listitem><para>EFBIG Resulting offset is too big to fit in off_t.</para></listitem><listitem><para>ECOMM Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT Access method not supported.</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
gfal_lseek64 performs the same function on large files using off64_t rather than off_t. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="574" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="573" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g39c7d0b6d366fdb0f218439ed3c3bb37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>off64_t</type>
        <definition>off64_t gfal_lseek64</definition>
        <argsstring>(int fd, off64_t offset, int whence)</argsstring>
        <name>gfal_lseek64</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>off64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="588" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="587" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g6f6affcf386900efc5443a9c97556a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_mkdir</definition>
        <argsstring>(const char *dirname, mode_t mode)</argsstring>
        <name>gfal_mkdir</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="602" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="601" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g6a431a0bdd01baf8cadbdcaa98b1c622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_open</definition>
        <argsstring>(const char *filename, int flags, mode_t mode)</argsstring>
        <name>gfal_open</name>
        <param>
          <type>const char *</type>
          <defname>filename</defname>
        </param>
        <param>
          <type>int</type>
          <defname>flags</defname>
        </param>
        <param>
          <type>mode_t</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
<para>opens a file according to the value of flags </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the file name: either a logical file name, a guid, an SURL or a TURL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>value is built by OR’ing the bits defined in &lt;fcntl.h&gt; but one and only one of the first three flags below must be used<itemizedlist>
<listitem><para>O_RDONLY open for reading only<itemizedlist>
<listitem><para>O_WRONLY open for writing only</para></listitem></itemizedlist>
</para></listitem><listitem><para>O_RDWR open for reading and writing<itemizedlist>
<listitem><para>O_CREAT If the file exists already and O_EXCL is also set, gfal_open will fail.</para></listitem><listitem><para>O_LARGEFILE allows files whose sizes cannot be represented in 31 bits to be opened </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>usef only if file is created </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns the file descriptor if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="693" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="692" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gbed417acea7f862ea1977417ed842ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_open64</definition>
        <argsstring>(const char *filename, int flags, mode_t mode)</argsstring>
        <name>gfal_open64</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="886" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="885" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g004ad5efbd544da820823e597e57be92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DIR *</type>
        <definition>DIR* gfal_opendir</definition>
        <argsstring>(const char *dirname)</argsstring>
        <name>gfal_opendir</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="892" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="891" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gaa6bfe36f33b86e489b798aed96912de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_read</definition>
        <argsstring>(int fd, void *buf, size_t size)</argsstring>
        <name>gfal_read</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="968" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="967" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g2a8ed205f7748d7817a18521268a1f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dirent *</type>
        <definition>struct dirent* gfal_readdir</definition>
        <argsstring>(DIR *dir)</argsstring>
        <name>gfal_readdir</name>
        <param>
          <type>DIR *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="983" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="982" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1ad202b2730efde51021b620bce0d1683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dirent64 *</type>
        <definition>struct dirent64* gfal_readdir64</definition>
        <argsstring>(DIR *dir)</argsstring>
        <name>gfal_readdir64</name>
        <param>
          <type>DIR *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="998" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="997" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g34dc6129530d6bf9e5836ef22c0d2792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_rename</definition>
        <argsstring>(const char *old_name, const char *new_name)</argsstring>
        <name>gfal_rename</name>
        <param>
          <type>const char *</type>
          <declname>old_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1013" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1012" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gcc4b6347640a722674c2d6df437490df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_rmdir</definition>
        <argsstring>(const char *dirname)</argsstring>
        <name>gfal_rmdir</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1098" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1097" bodyend="1194"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g45a23756f2c79a7e07488bb3fb2fc35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_setfilchg</definition>
        <argsstring>(int fd, const void *buf, size_t size)</argsstring>
        <name>gfal_setfilchg</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1198" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1197" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1678840d435b1b1a34645fa21d34e1102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_stat_generic</definition>
        <argsstring>(const char *filename, int bool_link, struct stat64 *statbuf)</argsstring>
        <name>gfal_stat_generic</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bool_link</declname>
        </param>
        <param>
          <type>struct stat64 *</type>
          <declname>statbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1214" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1213" bodyend="1316"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g1d8c86d522d5dd26ee7ddcd9c6925964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_stat</definition>
        <argsstring>(const char *filename, struct stat *statbuf)</argsstring>
        <name>gfal_stat</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>statbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1322" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1321" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gb40e2d23618763284ab4a1fb1a06a880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_stat64</definition>
        <argsstring>(const char *filename, struct stat64 *statbuf)</argsstring>
        <name>gfal_stat64</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>struct stat64 *</type>
          <declname>statbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1349" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1342" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g347f867802a33bc04fdfb769da857103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lstat</definition>
        <argsstring>(const char *filename, struct stat *statbuf)</argsstring>
        <name>gfal_lstat</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>statbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1357" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1356" bodyend="1371"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g739ca4985a67e0fc4fc253f42df2638c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lstat64</definition>
        <argsstring>(const char *filename, struct stat64 *statbuf)</argsstring>
        <name>gfal_lstat64</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>struct stat64 *</type>
          <declname>statbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1384" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1377" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gdeb4c6cc47f507da3e3b498374e308fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_unlink</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>gfal_unlink</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1391" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1390" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g00c2d64894ae81c05846b06c84727ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_write</definition>
        <argsstring>(int fd, const void *buf, size_t size)</argsstring>
        <name>gfal_write</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1548" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1547" bodyend="1561"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1b07b1408744cd6a48b0d7f1e8f893fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_deletesurls</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_deletesurls</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1565" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1564" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_10346572054adf7c9f88aa7836934fb03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_removedir</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_removedir</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1626" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1625" bodyend="1676"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_11abdb6c8aae2779310c606cf86410061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_create_subdirs</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_create_subdirs</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1678" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1677" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_195e09a3cfbab50249ecf2bca54b88274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_get</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1871" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1870" bodyend="1927"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_12665d19dee3b8ed312f27d97310dd21d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_getstatus</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_getstatus</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1931" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1930" bodyend="1974"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1dafd89750e4d0a86149e95cfab51586a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_bringonline</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_bringonline</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="1978" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="1977" bodyend="2024"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1ec2097ecb2aadb209c713a9c2b1d4384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_prestage</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_prestage</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2028" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2027" bodyend="2075"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_164e77a525710c0ffd5def90f8aef3f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_prestagestatus</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_prestagestatus</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2079" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2078" bodyend="2114"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1b149b326996828f815afc9f004057ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_pin</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_pin</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2118" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2117" bodyend="2157"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1229fde0a465692ab8b0ed3fec2ebc29a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_release</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_release</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2161" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2160" bodyend="2227"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1946427a964fb84234ace8d3a2fdc29f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_xfer_done</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_set_xfer_done</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2231" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2230" bodyend="2312"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_125eed083011cdc1cb50910548ff69c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_xfer_running</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_set_xfer_running</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2316" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2315" bodyend="2391"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1aca24e1095b862293529fec208518384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_abortrequest</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_abortrequest</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2395" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2394" bodyend="2439"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_137f6d2d8ea0ad96d32e8542bd59adf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_abortfiles</definition>
        <argsstring>(gfal_internal req, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_abortfiles</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2443" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2442" bodyend="2477"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1a0608e7721d4c03e96f524d471fc2957" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* endpointfromsurl</definition>
        <argsstring>(const char *surl, char *errbuf, int errbufsz, int _prefixing_on)</argsstring>
        <name>endpointfromsurl</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_prefixing_on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2503" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2502" bodyend="2539"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1951b857d6ce43fd8a8914844b5de559a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int canonical_url</definition>
        <argsstring>(const char *url, const char *defproto, char *newurl, int newurlsz, char *errbuf, int errbufsz)</argsstring>
        <name>canonical_url</name>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defproto</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>newurl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newurlsz</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2542" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2542" bodyend="2631"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_11592fb1bdd6aa5ab4c56e3aaf9240b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parseturl</definition>
        <argsstring>(const char *turl, char *protocol, int protocolsz, char *pfn, int pfnsz, char *errbuf, int errbufsz)</argsstring>
        <name>parseturl</name>
        <param>
          <type>const char *</type>
          <declname>turl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>protocolsz</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pfnsz</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2635" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2634" bodyend="2698"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_142f0dde4abdd73f485da45932283f669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setypesandendpoints</definition>
        <argsstring>(const char *endpoint, char ***se_types, char ***se_endpoints, char *errbuf, int errbufsz)</argsstring>
        <name>setypesandendpoints</name>
        <param>
          <type>const char *</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>se_types</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>se_endpoints</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2702" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2701" bodyend="2729"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1563ab483cd3ebb8e7d365d7803523ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setypesandendpointsfromsurl</definition>
        <argsstring>(const char *surl, char ***se_types, char ***se_endpoints, char *errbuf, int errbufsz)</argsstring>
        <name>setypesandendpointsfromsurl</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>se_types</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>se_endpoints</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2733" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2732" bodyend="2744"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_12b8d07dc3c2e96b2bc629ca5ea3d2b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_cat_type</definition>
        <argsstring>(char **cat_type)</argsstring>
        <name>get_cat_type</name>
        <param>
          <type>char **</type>
          <declname>cat_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2747" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2747" bodyend="2759"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_143eaae6782e74a6d25cd0a0f8183833e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_catalog_endpoint</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>get_catalog_endpoint</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2763" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2762" bodyend="2780"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g86568afb8c7f9b0d6944de793a3e867a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_guidforpfn</definition>
        <argsstring>(const char *pfn, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_guidforpfn</name>
        <param>
          <type>const char *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2784" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2783" bodyend="2805"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g72f2d9fb6a55816f243a4c57c5369fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_guidsforpfns</definition>
        <argsstring>(int nbfiles, const char **pfns, int amode, char ***guids, int **statuses, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_guidsforpfns</name>
        <param>
          <type>int</type>
          <declname>nbfiles</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pfns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amode</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>guids</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>statuses</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2809" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2808" bodyend="2846"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1a880588c2bf383146384431128d4cf88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int guid_exists</definition>
        <argsstring>(const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>guid_exists</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2850" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2849" bodyend="2867"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1ba9082c3f661f0aa6a1f4398031a5b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setfilesize</definition>
        <argsstring>(const char *pfn, GFAL_LONG64 filesize, char *errbuf, int errbufsz)</argsstring>
        <name>setfilesize</name>
        <param>
          <type>const char *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type>GFAL_LONG64</type>
          <declname>filesize</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2871" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2870" bodyend="2889"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1gbd0a581309f65e07a5e28d442f07b169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** gfal_get_replicas</definition>
        <argsstring>(const char *lfn, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_get_replicas</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2893" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2892" bodyend="2936"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g70f889fa2436723fb7b3cff20b661f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_unregister_pfns</definition>
        <argsstring>(int nbguids, const char **guids, const char **pfns, int **results, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_unregister_pfns</name>
        <param>
          <type>int</type>
          <declname>nbguids</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>guids</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pfns</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>results</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="2940" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="2939" bodyend="3007"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1fffd314fbaeab0aff9beb7c5b47ab13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* guidfromlfn</definition>
        <argsstring>(const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>guidfromlfn</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3011" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3010" bodyend="3029"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g25d4ae6bef6570590efbc8548e7d79e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** gfal_get_aliases</definition>
        <argsstring>(const char *lfn, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_get_aliases</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3033" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3032" bodyend="3077"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1gdb09f20d086253b45c5d2896be95b4a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_register_file</definition>
        <argsstring>(const char *lfn, const char *guid, const char *surl, mode_t mode, GFAL_LONG64 size, int bool_createonly, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_register_file</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GFAL_LONG64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bool_createonly</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3082" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3080" bodyend="3204"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_14bb13064562b552627698601dda010cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int register_alias</definition>
        <argsstring>(const char *guid, const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>register_alias</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3208" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3207" bodyend="3227"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_18877542e026eef3292c7f5ab44c55124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int unregister_alias</definition>
        <argsstring>(const char *guid, const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>unregister_alias</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3231" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3230" bodyend="3248"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1446a829e4f333d3a0364ab0f2b5a2dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getdomainnm</definition>
        <argsstring>(char *name, int namelen)</argsstring>
        <name>getdomainnm</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>namelen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3252" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3251" bodyend="3285"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1806f5f7bc913922610d15e88a78b7294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_default_se</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>get_default_se</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3290" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3289" bodyend="3315"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1b082f9f86bdeee9d7d01f1e2cf9c7c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int purify_surl</definition>
        <argsstring>(const char *surl, char *surl_cat, const int surl_cat_sz)</argsstring>
        <name>purify_surl</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>surl_cat</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>surl_cat_sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3318" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3318" bodyend="3364"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1378950f0b64ba7143f741dc193af9b84" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int generate_surls</definition>
        <argsstring>(gfal_internal gfal, char *errbuf, int errbufsz)</argsstring>
        <name>generate_surls</name>
        <param>
          <type>gfal_internal</type>
          <declname>gfal</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3368" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3367" bodyend="3461"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1b5d503849656335232e56583b376ee22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gfal_request</type>
        <definition>gfal_request gfal_request_new</definition>
        <argsstring>()</argsstring>
        <name>gfal_request_new</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3465" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3464" bodyend="3475"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_12f7ff4951ca00ee9acb7a3bd3c86681d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_init</definition>
        <argsstring>(gfal_request req, gfal_internal *gfal, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_init</name>
        <param>
          <type>gfal_request</type>
          <declname>req</declname>
        </param>
        <param>
          <type>gfal_internal *</type>
          <declname>gfal</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3479" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3478" bodyend="3684"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1b3865faa40e00e40e8b4c2d698aaf7e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int copy_gfal_mdresults</definition>
        <argsstring>(struct srmv2_mdfilestatus srmv2, gfal_filestatus *gfal)</argsstring>
        <name>copy_gfal_mdresults</name>
        <param>
          <type>struct srmv2_mdfilestatus</type>
          <declname>srmv2</declname>
        </param>
        <param>
          <type>gfal_filestatus *</type>
          <declname>gfal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3769" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3768" bodyend="3796"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1bcdd56bd6e5b5c86b436fab3a02fbd8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_results</definition>
        <argsstring>(gfal_internal req, gfal_filestatus **results)</argsstring>
        <name>gfal_get_results</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>gfal_filestatus **</type>
          <declname>results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3881" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3880" bodyend="3889"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_140c4088ef63981a3878a55a050ae6328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_ids</definition>
        <argsstring>(gfal_internal req, int *srm_reqid, int **srm_fileids, char **srmv2_reqtoken)</argsstring>
        <name>gfal_get_ids</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>srm_reqid</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>srm_fileids</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>srmv2_reqtoken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3893" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3892" bodyend="3895"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_1a60d676ab5378d44d133a772aee07fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_ids_setype</definition>
        <argsstring>(gfal_internal req, enum se_type *type, int *srm_reqid, int **srm_fileids, char **srmv2_reqtoken)</argsstring>
        <name>gfal_get_ids_setype</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>enum se_type *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>srm_reqid</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>srm_fileids</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>srmv2_reqtoken</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3899" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3898" bodyend="3927"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_154d854da5f0c755a6b43e81b723dde98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_ids</definition>
        <argsstring>(gfal_internal req, int nbfileids, const int *srm_fileids, int srm_reqid, const char *srmv2_reqtoken, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_set_ids</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbfileids</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>srm_fileids</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srm_reqid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>srmv2_reqtoken</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3932" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3930" bodyend="3966"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_173cd999ee9b3b89a7902c24d89ed8113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_internal_free</definition>
        <argsstring>(gfal_internal req)</argsstring>
        <name>gfal_internal_free</name>
        <param>
          <type>gfal_internal</type>
          <declname>req</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="3970" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="3969" bodyend="4032"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1gb22308fb1cfbade81dddfcf4bedf86da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_spacemd_free</definition>
        <argsstring>(int nbtokens, struct srm_spacemd *smd)</argsstring>
        <name>gfal_spacemd_free</name>
        <param>
          <type>int</type>
          <declname>nbtokens</declname>
        </param>
        <param>
          <type>struct srm_spacemd *</type>
          <declname>smd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4036" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4035" bodyend="4056"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gfal_version</definition>
        <argsstring>()</argsstring>
        <name>gfal_version</name>
        <briefdescription>
<para>return a string of the current gfal_version define at the compilation time </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4060" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4059" bodyend="4062"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g267920b468d7578c10aa25469f8cadf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_nobdii</definition>
        <argsstring>(int value)</argsstring>
        <name>gfal_set_nobdii</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>define if bdii System is ignored or not </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>0 for False else true </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4066" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4065" bodyend="4068"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g0d2a0557bdb571ccb85c6ab5c05ae56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_is_nobdii</definition>
        <argsstring>()</argsstring>
        <name>gfal_is_nobdii</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4072" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4071" bodyend="4074"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1gcd48b57bf9659be5204319918c6f9d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_generate_lfn</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>gfal_generate_lfn</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4077" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4077" bodyend="4096"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g8311ede197e204e57029165fbc3898d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_generate_guid</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>gfal_generate_guid</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4099" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4099" bodyend="4106"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1gfbe1d2da151f9bd6a0ab1ec1abf0ac81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_get_hostname</definition>
        <argsstring>(const char *path, char *errbuf, int errbufsz)</argsstring>
        <name>gfal_get_hostname</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>extract a hostname from a SURL. We search for &quot;://&quot; to get the start of the hostname. Then we keep going to the next slash, colon or end of the SURL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4112" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4112" bodyend="4139"/>
      </memberdef>
      <memberdef kind="function" id="gfal_8c_14f4c3163c72535da9dd42484905b1c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_errno</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_errno</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="4143" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="4143" bodyend="4145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gfal_8c_1172f3444b61de0c7339ad503b0e5a9dc" prot="public" static="yes" mutable="no">
        <type>struct dir_info *</type>
        <definition>struct dir_info* di_array[GFAL_OPEN_MAX]</definition>
        <argsstring>[GFAL_OPEN_MAX]</argsstring>
        <name>di_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="50" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_1d5779ec27b91e2ae4638ed787d5ae710" prot="public" static="yes" mutable="no">
        <type>struct xfer_info *</type>
        <definition>struct xfer_info* xi_array[GFAL_OPEN_MAX]</definition>
        <argsstring>[GFAL_OPEN_MAX]</argsstring>
        <name>xi_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="51" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_15db987dfbf2b3ad18b5fb67cf1a66f74" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* gfal_userdn</definition>
        <argsstring></argsstring>
        <name>gfal_userdn</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="52" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_1e511415e77b51cd702a20e89ab2ca634" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* gfal_vo</definition>
        <argsstring></argsstring>
        <name>gfal_vo</name>
        <initializer> NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="53" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_140b23765967072cda107a6777770fe0b" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* gfal_fqan[GFAL_FQAN_MAX]</definition>
        <argsstring>[GFAL_FQAN_MAX]</argsstring>
        <name>gfal_fqan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="54" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_1bff3de61a08eaa7ffa4eb45150e44bc9" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int gfal_nb_fqan</definition>
        <argsstring></argsstring>
        <name>gfal_nb_fqan</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="55" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_1e61f17fd8d7ed7d3cd813c3d6a68d960" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int vomsdataparsed</definition>
        <argsstring></argsstring>
        <name>vomsdataparsed</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="56" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_18d2039688b4b5c5523bd647e8b4fdcf6" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int nobdii</definition>
        <argsstring></argsstring>
        <name>nobdii</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="57" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_1da58a317d5fd857368e4881db886d0b5" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int purifydisabled</definition>
        <argsstring></argsstring>
        <name>purifydisabled</name>
        <initializer> -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="58" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="gfal_8c_13a452fbe2d9a0f1433958ebda66d18b7" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char gfalversion[]</definition>
        <argsstring>[]</argsstring>
        <name>gfalversion</name>
        <initializer> VERSION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/gfal.c" line="77" bodyfile="/home/adevress/myworkspace/gfal/src/gfal.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@(#)$RCSfile:<sp/>gfal.c,v<sp/>$<sp/>$Revision:<sp/>1.141<sp/>$<sp/>$Date:<sp/>2009/12/09<sp/>13:18:13<sp/>$<sp/>CERN<sp/>Jean-Philippe<sp/>Baud</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;uuid/uuid.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;voms_apic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lfc_ifce.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gfal_srm_ifce.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gfal_srm_ifce_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common_8h" kindref="compound">gfal_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(OFF_MAX)</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OFF_MAX<sp/>2147483647</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*di_array[GFAL_OPEN_MAX];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi_array[GFAL_OPEN_MAX];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*gfal_userdn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*gfal_vo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*gfal_fqan[GFAL_FQAN_MAX];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_nb_fqan<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vomsdataparsed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nobdii<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>purifydisabled<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>status_type<sp/>{DEFAULT_STATUS<sp/>=<sp/>0,<sp/>MD_STATUS,<sp/>PIN_STATUS};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*alloc_di<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*alloc_xi<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*find_di<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*find_xi<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_di<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dir_info<sp/>*);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>free_xi<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mdtomd32<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>copy_gfal_results<sp/>(gfal_internal,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>status_type);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>check_gfal_internal<sp/>(gfal_internal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_gfal_results<sp/>(gfal_filestatus<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>free_srmv2_mdstatuses<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_mdfilestatus<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>version<sp/>should<sp/>be<sp/>set<sp/>by<sp/>a<sp/>&quot;define&quot;<sp/>at<sp/>the<sp/>makefile<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>gfalversion[]<sp/>=<sp/>VERSION;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">gfal_parse_vomsdata<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vomsdataparsed)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">vomsdata<sp/>*vd;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>len,<sp/>error;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pos,<sp/>*p1,<sp/>*p2;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errmsg[GFAL_ERRMSG_LEN];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((vd<sp/>=<sp/>VOMS_Init<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!VOMS_SetVerificationType<sp/>(VERIFY_NONE,<sp/>vd,<sp/>&amp;error)<sp/>||</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!VOMS_RetrieveFromProxy<sp/>(RECURSE_CHAIN,<sp/>vd,<sp/>&amp;error))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>VERR_NOEXT)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>error<sp/>is<sp/>not<sp/>&quot;VOMS<sp/>extension<sp/>not<sp/>found!&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VOMS_ErrorMessage<sp/>(vd,<sp/>error,<sp/>errmsg,<sp/>GFAL_ERRMSG_LEN);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][VOMS_RetrieveFromProxy][]<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>errmsg);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VOMS_Destroy<sp/>(vd);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vd-&gt;data<sp/>||<sp/>!vd-&gt;data[0])<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_parse_vomsdata][]<sp/>Unable<sp/>to<sp/>get<sp/>VOMS<sp/>info<sp/>from<sp/>the<sp/>proxy<sp/>(Memory<sp/>problem?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_userdn<sp/>=<sp/>strdup<sp/>(vd-&gt;data[0]-&gt;user);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_vo<sp/>=<sp/>gfal_vo<sp/>==<sp/>NULL<sp/>?<sp/>strdup<sp/>(vd-&gt;data[0]-&gt;voname)<sp/>:<sp/>gfal_vo;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>vd-&gt;data[0]-&gt;fqan[i]<sp/>!=<sp/>NULL;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfal_fqan[i]<sp/>=<sp/>strdup<sp/>(vd-&gt;data[0]-&gt;fqan[i]))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>p1<sp/>=<sp/>gfal_fqan[i];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_parse_vomsdata][]<sp/>Invalid<sp/>FQAN:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>gfal_fqan[i]);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>&apos;Role=NULL&apos;<sp/>and<sp/>&apos;Capability=NULL&apos;<sp/>are<sp/>removed<sp/>from<sp/>the<sp/>fqan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p1<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>strchr<sp/>(p1<sp/>+<sp/>1,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p2)<sp/>*p2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strstr<sp/>(p1,<sp/></highlight><highlight class="stringliteral">&quot;=NULL&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>p1)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen<sp/>(p1);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(pos,<sp/>p1,<sp/>len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1)<sp/>*p1<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos)<sp/>*pos<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_fqan[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_nb_fqan<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vomsdataparsed<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VOMS_Destroy<sp/>(vd);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="normal">gfal_get_userdn<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_userdn<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_parse_vomsdata<sp/>(errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_userdn<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_get_userdn][]<sp/>Unable<sp/>to<sp/>get<sp/>the<sp/>user&apos;s<sp/>DN<sp/>from<sp/>the<sp/>proxy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_userdn);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="group__common__group_1gcf4ae9045b7e5a2a697b1bb1f05994a8" kindref="member">gfal_set_vo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vo)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_vo<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errmsg[GFAL_ERRMSG_LEN];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_parse_vomsdata<sp/>(errmsg,<sp/>GFAL_ERRMSG_LEN);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_vo<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strcmp<sp/>(gfal_vo,<sp/>vo)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[WARNING]<sp/>specified<sp/>VO<sp/>and<sp/>proxy<sp/>VO<sp/>are<sp/>different!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfal_vo<sp/>=<sp/>strdup<sp/>(vo))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="180"><highlight class="normal">gfal_get_vo<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_vo<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>(gfal_vo<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;LCG_GFAL_VO&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_parse_vomsdata<sp/>(errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_vo<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_get_vo][EINVAL]<sp/>Unable<sp/>to<sp/>get<sp/>the<sp/>VO<sp/>name<sp/>neither<sp/>from<sp/>environment<sp/>(LCG_GFAL_VO)<sp/>nor<sp/>from<sp/>the<sp/>proxy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_vo);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">gfal_get_fqan<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***fqan,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fqan<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_parse_vomsdata<sp/>(errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>*fqan<sp/>=<sp/>gfal_fqan;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_nb_fqan);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">gfal_is_purifydisabled<sp/>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(purifydisabled<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>purifydisabled<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;LCG_GFAL_FULL_SURLS_IN_FC&quot;</highlight><highlight class="normal">)<sp/>==<sp/>NULL<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(purifydisabled);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*</highlight></codeline>
<codeline lineno="216"><highlight class="normal">alloc_di<sp/>(DIR<sp/>*dir)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>GFAL_OPEN_MAX;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(di_array[i]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((di_array[i]<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dir_info<sp/>*)<sp/>calloc<sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dir_info)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>di_array[i]-&gt;dir<sp/>=<sp/>dir;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(di_array[i]);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EMFILE;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="normal">alloc_xi<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>fd<sp/>&lt;<sp/>GFAL_OPEN_MAX<sp/>&amp;&amp;<sp/>xi_array[fd]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(xi_array[fd]<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xfer_info<sp/>*)<sp/>calloc<sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xfer_info)));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="normal">find_di<sp/>(DIR<sp/>*dir)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>GFAL_OPEN_MAX;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(di_array[i]<sp/>&amp;&amp;<sp/>di_array[i]-&gt;dir<sp/>==<sp/>dir)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(di_array[i]);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*</highlight></codeline>
<codeline lineno="255"><highlight class="normal">find_xi<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>fd<sp/>&lt;<sp/>GFAL_OPEN_MAX<sp/>&amp;&amp;<sp/>xi_array[fd])</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(xi_array[fd]);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EBADF;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">free_di<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dir_info<sp/>*di)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(di);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>di<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">free_xi<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>fd<sp/>&lt;<sp/>GFAL_OPEN_MAX<sp/>&amp;&amp;<sp/>xi_array[fd])<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xi_array[fd]-&gt;gfile)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(xi_array[fd]-&gt;gfile);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(xi_array[fd]);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi_array[fd]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><ref refid="group__posix__group_1g33d6a4a93117a6c07405aa6ac0d42122" kindref="member">gfal_access</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amode)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0,<sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_issurlok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errbuf[GFAL_ERRMSG_LEN];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pfn[1104];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol[64];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**supported_protocols;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_file<sp/>gfile;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_request<sp/>req;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_filestatus<sp/>*filestatuses;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*current_surl;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfile<sp/>=<sp/>gfal_file_new<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;errcode<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;catalog<sp/>==<sp/>GFAL_FILE_CATALOG_LFC<sp/>&amp;&amp;<sp/>gfile-&gt;guid<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lfc_accessl<sp/>(gfile-&gt;lfn,<sp/>gfile-&gt;guid,<sp/>amode,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;nbreplicas<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>gfile-&gt;turl<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOENT;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req<sp/>=<sp/>gfal_request_new<sp/>())<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>supported_protocols<sp/>=<sp/>get_sup_proto<sp/>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;nbfiles<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;defaultsetype<sp/>=<sp/>TYPE_SRMv2;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;no_bdii_check<sp/>=<sp/>gfal_is_nobdii<sp/>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;protocols<sp/>=<sp/>supported_protocols;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!bool_issurlok<sp/>&amp;&amp;<sp/>gfile-&gt;errcode<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_issurlok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;nbreplicas<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_surl<sp/>=<sp/>gfal_file_get_replica<sp/>(gfile);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;surls<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>&amp;current_surl;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/><ref refid="group__srm__group_1g4e6d4aab98935aaf408d8a5cdf9727d4" kindref="member">gfal_init</ref><sp/>(req,<sp/>&amp;gfile-&gt;gobj,<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;gobj-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_checkpermission_input<sp/>checkpermission_input;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,gfile-&gt;gobj-&gt;endpoint,errbuf,GFAL_ERRMSG_LEN,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkpermission_input.nbfiles<sp/>=<sp/>gfile-&gt;gobj-&gt;nbfiles;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkpermission_input.amode<sp/>=<sp/>amode;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkpermission_input.surls<sp/>=<sp/>gfile-&gt;gobj-&gt;surls;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;gobj-&gt;returncode<sp/>=<sp/>srm_check_permission(&amp;context,&amp;checkpermission_input,<sp/>&amp;(gfile-&gt;gobj-&gt;srmv2_statuses));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;gobj-&gt;returncode<sp/>=<sp/>srmv2_access<sp/>(gfile-&gt;gobj-&gt;nbfiles,</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>char<sp/>**)<sp/>gfile-&gt;gobj-&gt;surls,<sp/>gfile-&gt;gobj-&gt;endpoint,<sp/>amode,</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(gfile-&gt;gobj-&gt;srmv2_statuses),<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN,</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;gobj-&gt;timeout);</highlight></codeline>
<codeline lineno="364"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/>gfile-&gt;gobj-&gt;returncode<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_issurlok<sp/>=<sp/>copy_gfal_results<sp/>(gfile-&gt;gobj,<sp/>DEFAULT_STATUS)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>(!(bool_issurlok<sp/>=<sp/>gfal_get_results<sp/>(gfile-&gt;gobj,<sp/>&amp;filestatuses)<sp/>&gt;=<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(bool_issurlok<sp/>=<sp/>filestatuses<sp/>!=<sp/>NULL)))<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(errbuf,<sp/>GFAL_ERRMSG_LEN,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>filestatuses[0].status<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>filestatuses[0].status,<sp/>filestatuses[0].explanation);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>gfile-&gt;errcode<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fix<sp/>it<sp/>:<sp/>need<sp/>to<sp/>be<sp/>replaced<sp/>by<sp/>a<sp/>correct<sp/>call<sp/>to<sp/>get<sp/>if<sp/>(!(bool_issurlok<sp/>=<sp/>gfal_turlsfromsurls<sp/>(gfile-&gt;gobj,<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="388"><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;transition<sp/>code,<sp/>not<sp/>implemented<sp/>fix<sp/>it&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>(!(bool_issurlok<sp/>=<sp/>gfal_get_results<sp/>(gfile-&gt;gobj,<sp/>&amp;filestatuses)<sp/>&gt;=<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(bool_issurlok<sp/>=<sp/>filestatuses<sp/>!=<sp/>NULL)))<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(errbuf,<sp/>GFAL_ERRMSG_LEN,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>filestatuses[0].status<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>filestatuses[0].status,<sp/>filestatuses[0].explanation);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;turl<sp/>=<sp/>strdup<sp/>(filestatuses[0].turl);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;turl<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>parseturl<sp/>(gfile-&gt;turl,<sp/>protocol,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol),</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn),<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_turl_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops<sp/>=<sp/>find_pops<sp/>(protocol);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/>pops<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_turl_error<sp/>(gfile,<sp/>EPROTONOSUPPORT,<sp/>NULL);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rc<sp/>=<sp/>pops-&gt;access<sp/>(pfn,<sp/>amode))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>pops-&gt;maperror<sp/>(pops,<sp/>0);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_issurlok)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_next_replica<sp/>(gfile);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(req);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode<sp/>?<sp/>gfile-&gt;errcode<sp/>:<sp/>ENOENT;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><ref refid="group__posix__group_1gdfeeecb2052d81e65bcc09903655991b" kindref="member">gfal_chmod</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pathbuf[1104];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfc;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>GError*<sp/>err=NULL;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(canonical_url<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>pathbuf,<sp/>1104,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(&amp;err)<sp/>)<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_11441ea4b8176eb0cf3099009b950a3e9" kindref="member">gfal_release_GError</ref>(&amp;err);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>islfc<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfc<sp/>&amp;&amp;<sp/>strncmp<sp/>(pathbuf,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lfc_chmodl<sp/>(pathbuf<sp/>+<sp/>4,<sp/>mode,<sp/>NULL,<sp/>0));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gfal_chmod<sp/>is<sp/>only<sp/>supported<sp/>with<sp/>LFC<sp/>and<sp/>LFNs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><ref refid="group__posix__group_1g83b88bd27def4c4e2fdfea3c5bbf88b4" kindref="member">gfal_close</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>GError*<sp/>err=NULL;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&lt;<sp/>0<sp/>||<sp/>(xi<sp/>=<sp/>find_xi<sp/>(fd))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rc<sp/>=<sp/>xi-&gt;pops-&gt;close<sp/>(fd))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>xi-&gt;pops-&gt;maperror<sp/>(xi-&gt;pops,<sp/>1);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>status<sp/>&quot;done&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xi-&gt;gfile<sp/>&amp;&amp;<sp/>xi-&gt;gfile-&gt;gobj)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_set_xfer_done<sp/>(xi-&gt;gfile-&gt;gobj,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>size<sp/>for<sp/>a<sp/>(new)<sp/>lfn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xi-&gt;size<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>xi-&gt;gfile<sp/>&amp;&amp;<sp/>xi-&gt;gfile-&gt;lfn)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfc;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(&amp;err)<sp/>)<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_11441ea4b8176eb0cf3099009b950a3e9" kindref="member">gfal_release_GError</ref>(err);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>islfc<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfc)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_setsize<sp/>(xi-&gt;gfile-&gt;lfn,<sp/>xi-&gt;size,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>free_xi<sp/>(fd);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><ref refid="group__posix__group_1g1c97c21d23c919b2647f17bbc8b79db2" kindref="member">gfal_closedir</ref><sp/>(DIR<sp/>*dir)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*di;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>di<sp/>=<sp/>find_di<sp/>(dir);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(di<sp/>==<sp/>NULL<sp/>||<sp/>di-&gt;pops<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>di-&gt;pops-&gt;closedir<sp/>(dir);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>di-&gt;pops-&gt;maperror<sp/>(di-&gt;pops,<sp/>0);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(di-&gt;pops-&gt;proto_name,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(di-&gt;pops);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>free_di<sp/>(di);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><ref refid="group__posix__group_1g5fcdc6f3e7911787be049e20b6ab19b8" kindref="member">gfal_creat</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__posix__group_1g6a431a0bdd01baf8cadbdcaa98b1c622" kindref="member">gfal_open</ref><sp/>(filename,<sp/>O_WRONLY|O_CREAT|O_TRUNC,<sp/>mode));</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><ref refid="group__posix__group_1g48783e60cafa1a3bf9aa2170b99f9b08" kindref="member">gfal_creat64</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_open64<sp/>(filename,<sp/>O_WRONLY|O_CREAT|O_TRUNC,<sp/>mode));</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">gfal_errmsg<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*actual_format;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((errbuf<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>level<sp/>&gt;<sp/><ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>())<sp/>||<sp/>format<sp/>==<sp/>NULL<sp/>||<sp/>format[0]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start<sp/>(ap,<sp/>format);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>asprintf<sp/>(&amp;actual_format,<sp/></highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>format);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_format<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errbuf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfprintf<sp/>(stderr,<sp/>actual_format,<sp/>ap);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsnprintf<sp/>(errbuf,<sp/>errbufsz,<sp/>actual_format,<sp/>ap);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(actual_format);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>off_t</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><ref refid="group__posix__group_1g8ba4e1df5f2e6439641c56f245d5ce73" kindref="member">gfal_lseek</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>off_t<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>off_t<sp/>offset_out;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xi<sp/>=<sp/>find_xi<sp/>(fd))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((offset_out<sp/>=<sp/>xi-&gt;pops-&gt;lseek<sp/>(fd,<sp/>offset,<sp/>whence))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>xi-&gt;pops-&gt;maperror<sp/>(xi-&gt;pops,<sp/>1);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(offset_out);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>off64_t</highlight></codeline>
<codeline lineno="587"><highlight class="normal">gfal_lseek64<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>off64_t<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>off64_t<sp/>offset_out;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xi<sp/>=<sp/>find_xi<sp/>(fd))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((offset_out<sp/>=<sp/>xi-&gt;pops-&gt;lseek64<sp/>(fd,<sp/>offset,<sp/>whence))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>xi-&gt;pops-&gt;maperror<sp/>(xi-&gt;pops,<sp/>1);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(offset_out);</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal">gfal_mkdir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[1104],<sp/>pfn[1104];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol[64];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>GError*<sp/>err<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(canonical_url<sp/>(dirname,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>1104,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;sfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfc;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cat_type<sp/>=<sp/>gfal_get_cat_type(&amp;err))<sp/>==NULL){</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_11441ea4b8176eb0cf3099009b950a3e9" kindref="member">gfal_release_GError</ref>(&amp;err);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cat_type);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>islfc<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>LFC<sp/>has<sp/>a<sp/>tree-like<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfc)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lfc_mkdirp<sp/>(path<sp/>+<sp/>4,<sp/>mode,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>So,<sp/>mkdir<sp/>is<sp/>not<sp/>supported<sp/>for<sp/>non-LFC<sp/>file<sp/>catalogs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;srm:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>with<sp/>SRMv2<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc,<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**se_endpoints;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**se_types;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srmv2_endpoint<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_mkdir_input<sp/>mkdir_input;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setypesandendpointsfromsurl<sp/>(path,<sp/>&amp;se_types,<sp/>&amp;se_endpoints,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(se_types[i])<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>strcmp<sp/>(se_types[i],<sp/></highlight><highlight class="stringliteral">&quot;srm_v2&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srmv2_endpoint<sp/>=<sp/>se_endpoints[i];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_endpoints[i]);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_types[i]);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_types);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_endpoints);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>srm<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,srmv2_endpoint,NULL,0,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mkdir_input.dir_name<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>srm<sp/>function<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>srm_mkdir(&amp;context,&amp;mkdir_input);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>srmv2_makedirp<sp/>(path,<sp/>srmv2_endpoint,<sp/>NULL,<sp/>0,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(srmv2_endpoint);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>a<sp/>TURL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseturl<sp/>(path,<sp/>protocol,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol),<sp/>pfn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn),<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pops<sp/>=<sp/>find_pops<sp/>(protocol))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pops-&gt;mkdir<sp/>(pfn,<sp/>mode)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>pops-&gt;maperror<sp/>(pops,<sp/>0);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><ref refid="group__posix__group_1g6a431a0bdd01baf8cadbdcaa98b1c622" kindref="member">gfal_open</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errbuf[GFAL_ERRMSG_LEN];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newfile<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol[64],<sp/>pfn[1104];</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**supported_protocols<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>GFAL_LONG64<sp/>filesize<sp/>=<sp/>GFAL_NEWFILE_SIZE;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_file<sp/>gfile<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_request<sp/>req<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_filestatus<sp/>*filestatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_issurlok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>supported_protocols<sp/>=<sp/>get_sup_proto<sp/>();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/>(O_WRONLY<sp/>|<sp/>O_CREAT))<sp/>==<sp/>(O_WRONLY<sp/>|<sp/>O_CREAT)<sp/>||</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(flags<sp/>&amp;<sp/>(O_RDWR<sp/>|<sp/>O_CREAT))<sp/>==<sp/>(O_RDWR<sp/>|<sp/>O_CREAT))<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>writing<sp/>in<sp/>a<sp/>file,<sp/>so<sp/>a<sp/>new<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_18b05640b4b43a776603bd93703c29d30" kindref="member">gfal_print_verbose</ref>(GFAL_VERBOSE_NORMAL,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_open]<sp/>new<sp/>file<sp/>requested<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newfile<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfile<sp/>=<sp/>gfal_file_new<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>newfile,<sp/>NULL,<sp/>0))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;errcode<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req<sp/>=<sp/>gfal_request_new<sp/>())<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;nbfiles<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;protocols<sp/>=<sp/>supported_protocols;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;no_bdii_check<sp/>=<sp/>gfal_is_nobdii<sp/>();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newfile)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;oflag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;filesizes<sp/>=<sp/>&amp;filesize;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newfile<sp/>&amp;&amp;<sp/>!gfile-&gt;turl<sp/>&amp;&amp;<sp/>gfile-&gt;nbreplicas<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_se,<sp/>*surl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((default_se<sp/>=<sp/>get_default_se(NULL,<sp/>0))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;endpoint<sp/>=<sp/>default_se;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;generatesurls<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__srm__group_1g4e6d4aab98935aaf408d8a5cdf9727d4" kindref="member">gfal_init</ref><sp/>(req,<sp/>&amp;(gfile-&gt;gobj),<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;gobj<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>gfile-&gt;gobj-&gt;surls<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>gfile-&gt;gobj-&gt;surls[0]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surl<sp/>=<sp/>strdup<sp/>(gfile-&gt;gobj-&gt;surls[0]);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surl<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;nbreplicas<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;replicas<sp/>=<sp/>(gfal_replica<sp/>*)<sp/>calloc<sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(gfal_replica));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;replicas<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(gfile-&gt;replicas)<sp/>=<sp/>(gfal_replica)<sp/>calloc<sp/>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>_gfal_replica));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(gfile-&gt;replicas)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;replicas[0]-&gt;surl<sp/>=<sp/>surl;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!bool_issurlok<sp/>&amp;&amp;<sp/>gfile-&gt;errcode<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_issurlok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;nbreplicas<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;gobj<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;surls<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>&amp;(gfile-&gt;replicas[gfile-&gt;current_replica]-&gt;surl);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/><ref refid="group__srm__group_1g4e6d4aab98935aaf408d8a5cdf9727d4" kindref="member">gfal_init</ref><sp/>(req,<sp/>&amp;gfile-&gt;gobj,<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fix<sp/>it<sp/>:<sp/>need<sp/>to<sp/>be<sp/>replaced<sp/>by<sp/>a<sp/>correctcall<sp/>to<sp/>get<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>if<sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>gfal_turlsfromsurls<sp/>(gfile-&gt;gobj,<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="792"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;transition<sp/>code,<sp/>not<sp/>implemented<sp/>fix<sp/>it&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>(!(bool_issurlok<sp/>=<sp/>gfal_get_results<sp/>(gfile-&gt;gobj,<sp/>&amp;filestatuses)<sp/>&gt;=<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(bool_issurlok<sp/>=<sp/>filestatuses<sp/>!=<sp/>NULL)))<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(errbuf,<sp/>GFAL_ERRMSG_LEN,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>filestatuses[0].status<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>filestatuses[0].status,<sp/>filestatuses[0].explanation);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;turl<sp/>=<sp/>strdup<sp/>(filestatuses[0].turl);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;turl<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>parseturl<sp/>(gfile-&gt;turl,<sp/>protocol,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol),</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn),<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_turl_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops<sp/>=<sp/>find_pops<sp/>(protocol);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/>pops<sp/>!=<sp/>NULL))</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_turl_error<sp/>(gfile,<sp/>EPROTONOSUPPORT,<sp/>NULL);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>pops-&gt;open<sp/>(pfn,<sp/>flags,<sp/>mode);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/>fd<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_turl_error<sp/>(gfile,<sp/>pops-&gt;maperror<sp/>(pops,<sp/>1),<sp/>NULL);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_issurlok)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_next_replica<sp/>(gfile);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode<sp/>?<sp/>gfile-&gt;errcode<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xi<sp/>=<sp/>alloc_xi<sp/>(fd))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>xi-&gt;fd<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>xi-&gt;gfile<sp/>=<sp/>gfile;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>xi-&gt;pops<sp/>=<sp/>pops;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newfile)<sp/>xi-&gt;size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xi-&gt;size<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;gobj)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_set_xfer_running<sp/>(gfile-&gt;gobj,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newfile<sp/>&amp;&amp;<sp/>gfile-&gt;nbreplicas<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>(gfile-&gt;lfn<sp/>||<sp/>gfile-&gt;guid)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;replicas<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>gfile-&gt;replicas[0]<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;replicas[0]-&gt;surl<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_register_file<sp/>(gfile-&gt;lfn,<sp/>gfile-&gt;guid,<sp/>gfile-&gt;replicas[0]-&gt;surl,<sp/>mode,<sp/>0,<sp/>1,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req)<sp/>free<sp/>(req);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fd);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__srm__group_1g629a56f0d644547dbc9fdb2e058476e6" kindref="member">gfal_deletesurls</ref><sp/>(gfile-&gt;gobj,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_xi<sp/>(fd);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal">gfal_open64<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/>mode_t<sp/>mode)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__posix__group_1g6a431a0bdd01baf8cadbdcaa98b1c622" kindref="member">gfal_open</ref><sp/>(filename,<sp/>flags<sp/>|<sp/>O_LARGEFILE,<sp/>mode));</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*</highlight></codeline>
<codeline lineno="891"><highlight class="normal">gfal_opendir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname)</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*di;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*dir;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[1104],<sp/>pfn[1104];</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol[64];</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>GError*<sp/>err<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(canonical_url<sp/>(dirname,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>1104,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(islfn<sp/>=<sp/>1))<sp/>||</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dlhandle;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(&amp;err)<sp/>)<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_11441ea4b8176eb0cf3099009b950a3e9" kindref="member">gfal_release_GError</ref>(&amp;err);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cat_type);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfn)<sp/>dir<sp/>=<sp/>(DIR<sp/>*)<sp/>lfc_opendirlg<sp/>(path<sp/>+<sp/>4,<sp/>NULL,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>(DIR<sp/>*)<sp/>lfc_opendirlg<sp/>(NULL,<sp/>path,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((di<sp/>=<sp/>alloc_di<sp/>(dir))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pops<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>proto_ops<sp/>*)<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>proto_ops)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(pops,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>proto_ops));</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dlhandle<sp/>=<sp/>dlopen<sp/>(</highlight><highlight class="stringliteral">&quot;liblfc.so&quot;</highlight><highlight class="normal">,<sp/>RTLD_LAZY))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops-&gt;proto_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops-&gt;maperror<sp/>=<sp/>lfc_maperror;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops-&gt;readdir<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*<sp/>(*)<sp/>(DIR<sp/>*))<sp/>dlsym<sp/>(dlhandle,<sp/></highlight><highlight class="stringliteral">&quot;lfc_readdir&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops-&gt;readdir64<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent64<sp/>*<sp/>(*)<sp/>(DIR<sp/>*))<sp/>dlsym<sp/>(dlhandle,<sp/></highlight><highlight class="stringliteral">&quot;lfc_readdir64&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops-&gt;closedir<sp/>=<sp/>(int<sp/>(*)<sp/>(DIR<sp/>*))<sp/>dlsym<sp/>(dlhandle,<sp/></highlight><highlight class="stringliteral">&quot;lfc_closedir&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>di-&gt;pops<sp/>=<sp/>pops;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;srm:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;sfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseturl<sp/>(path,<sp/>protocol,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol),<sp/>pfn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn),<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pops<sp/>=<sp/>find_pops<sp/>(protocol))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dir<sp/>=<sp/>pops-&gt;opendir<sp/>(pfn))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>pops-&gt;maperror<sp/>(pops,<sp/>0);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((di<sp/>=<sp/>alloc_di<sp/>(dir))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>di-&gt;pops<sp/>=<sp/>pops;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dir);</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t</highlight></codeline>
<codeline lineno="967"><highlight class="normal">gfal_read<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/>size_t<sp/>size)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xi<sp/>=<sp/>find_xi<sp/>(fd))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rc<sp/>=<sp/>xi-&gt;pops-&gt;read<sp/>(fd,<sp/>buf,<sp/>size))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>xi-&gt;pops-&gt;maperror<sp/>(xi-&gt;pops,<sp/>1);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*</highlight></codeline>
<codeline lineno="982"><highlight class="normal">gfal_readdir<sp/>(DIR<sp/>*dir)</highlight></codeline>
<codeline lineno="983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*de;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*di;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>NULL<sp/>||<sp/>(di<sp/>=<sp/>find_di<sp/>(dir))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((de<sp/>=<sp/>di-&gt;pops-&gt;readdir<sp/>(dir))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>di-&gt;pops-&gt;maperror<sp/>(di-&gt;pops,<sp/>0);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(de);</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent64<sp/>*</highlight></codeline>
<codeline lineno="997"><highlight class="normal">gfal_readdir64<sp/>(DIR<sp/>*dir)</highlight></codeline>
<codeline lineno="998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent64<sp/>*de;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dir_info<sp/>*di;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((di<sp/>=<sp/>find_di<sp/>(dir))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((de<sp/>=<sp/>di-&gt;pops-&gt;readdir64<sp/>(dir))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>di-&gt;pops-&gt;maperror<sp/>(di-&gt;pops,<sp/>0);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(de);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal">gfal_rename<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*old_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_name)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path1[1104],<sp/>pfn1[1104];</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path2[1104],<sp/>pfn2[1104];</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol1[64];</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol2[64];</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>GError*<sp/>err=NULL;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(canonical_url<sp/>(old_name,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>path1,<sp/>1104,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canonical_url<sp/>(new_name,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>path2,<sp/>1104,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path1,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>strncmp<sp/>(path2,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfc,isedg;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(&amp;err)<sp/>)<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_11441ea4b8176eb0cf3099009b950a3e9" kindref="member">gfal_release_GError</ref>(&amp;err);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cat_type);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>islfc<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isedg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfc)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lfc_renamel<sp/>(path1<sp/>+<sp/>4,<sp/>path2<sp/>+<sp/>4,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isedg)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rmc<sp/>remvoed<sp/>fix<sp/>it</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*guid;</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>rc;</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"></highlight></codeline>
<codeline lineno="1045"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((guid<sp/>=<sp/>guidfromlfn<sp/>(path1<sp/>+<sp/>4,<sp/>NULL,<sp/>0))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rmc_register_alias<sp/>(guid,<sp/>path2,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(guid);</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"></highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>rmc_unregister_alias<sp/>(guid,<sp/>path1,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(guid);</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(rc);</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;rmc<sp/>removed,<sp/>temporarly<sp/>disabled&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path1,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path1,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path1,<sp/></highlight><highlight class="stringliteral">&quot;srm:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path1,<sp/></highlight><highlight class="stringliteral">&quot;sfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path2,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path2,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path2,<sp/></highlight><highlight class="stringliteral">&quot;srm:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path2,<sp/></highlight><highlight class="stringliteral">&quot;sfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseturl<sp/>(path1,<sp/>protocol1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol1),<sp/>pfn1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn1),<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseturl<sp/>(path2,<sp/>protocol2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol2),<sp/>pfn2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn2),<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(protocol1,<sp/>protocol2))<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pops<sp/>=<sp/>find_pops<sp/>(protocol1))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pops-&gt;rename<sp/>(pfn1,<sp/>pfn2)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>pops-&gt;maperror<sp/>(pops,<sp/>0);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal">gfal_rmdir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[1104],<sp/>pfn[1104];</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol[64];</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>GError*<sp/>err=NULL;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(canonical_url<sp/>(dirname,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>1104,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfc;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(&amp;err)<sp/>)<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_11441ea4b8176eb0cf3099009b950a3e9" kindref="member">gfal_release_GError</ref>(&amp;err);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cat_type);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>islfc<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfc)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lfc_rmdirl<sp/>(path<sp/>+<sp/>4,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;srm:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc,<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**se_endpoints;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**se_types;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srmv2_endpoint<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_rmdir_input<sp/>rmdir_input;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_rmdir_output<sp/>rmdir_output;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setypesandendpointsfromsurl<sp/>(path,<sp/>&amp;se_types,<sp/>&amp;se_endpoints,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(se_types[i])<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>strcmp<sp/>(se_types[i],<sp/></highlight><highlight class="stringliteral">&quot;srm_v2&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srmv2_endpoint<sp/>=<sp/>se_endpoints[i];</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_endpoints[i]);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_types[i]);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_types);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_endpoints);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,srmv2_endpoint,NULL,0,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmdir_input.recursive<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmdir_input.surl<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srm_rmdir(&amp;context,&amp;rmdir_input,&amp;rmdir_output)<sp/>&lt;<sp/>1<sp/>||<sp/>!rmdir_output.statuses)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(srmv2_endpoint);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/><sp/>if<sp/>(srmv2_rmdir<sp/>(path,<sp/>srmv2_endpoint,<sp/>0,<sp/>&amp;filestatuses,<sp/>NULL,<sp/>0,<sp/>0)<sp/>&lt;<sp/>1<sp/>||<sp/>!filestatuses)<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(srmv2_endpoint);</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rmdir_output.statuses[0].surl)<sp/>free<sp/>(rmdir_output.statuses[0].surl);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>rmdir_output.statuses[0].status;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>rmdir_output.statuses[0].status<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(rmdir_output.statuses);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(srmv2_endpoint);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(path,<sp/></highlight><highlight class="stringliteral">&quot;sfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseturl<sp/>(path,<sp/>protocol,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol),<sp/>pfn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn),<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pops<sp/>=<sp/>find_pops<sp/>(protocol))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pops-&gt;rmdir<sp/>(pfn)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>pops-&gt;maperror<sp/>(pops,<sp/>0);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">gfal_setfilchg<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/>size_t<sp/>size)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xi<sp/>=<sp/>find_xi<sp/>(fd))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rc<sp/>=<sp/>xi-&gt;pops-&gt;setfilchg<sp/>(fd,<sp/>buf,<sp/>size))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>xi-&gt;pops-&gt;maperror<sp/>(xi-&gt;pops,<sp/>1);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="1212"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal">gfal_stat_generic<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_link,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*statbuf)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0,<sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errbuf[GFAL_ERRMSG_LEN];</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_file<sp/>gfile;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfile<sp/>=<sp/>gfal_file_new<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>NULL,<sp/>0))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;errcode<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>gfile-&gt;errcode<sp/>!=<sp/>EISDIR)<sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;catalog<sp/>==<sp/>GFAL_FILE_CATALOG_LFC)<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_link)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lfc_statl<sp/>(gfile-&gt;lfn,<sp/>gfile-&gt;guid,<sp/>statbuf,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lfc_lstatl<sp/>(gfile-&gt;lfn,<sp/>statbuf,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;nbreplicas<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_request<sp/>req;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_filestatus<sp/>*filestatuses;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*current_surl;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_issurlok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req<sp/>=<sp/>gfal_request_new<sp/>())<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;nbfiles<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;no_bdii_check<sp/>=<sp/>gfal_is_nobdii<sp/>();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!bool_issurlok<sp/>&amp;&amp;<sp/>gfile-&gt;errcode<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_surl<sp/>=<sp/>gfal_file_get_replica<sp/>(gfile);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;surls<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>&amp;current_surl;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/><ref refid="group__srm__group_1g4e6d4aab98935aaf408d8a5cdf9727d4" kindref="member">gfal_init</ref><sp/>(req,<sp/>&amp;gfile-&gt;gobj,<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gfal_ls<sp/>removed<sp/>:<sp/>fix<sp/>it<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>gfal_ls<sp/>(gfile-&gt;gobj,<sp/>errbuf,<sp/>GFAL_ERRMSG_LEN)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;gfal_ls<sp/>removed,<sp/>function<sp/>disabled<sp/>temporarly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>(!(bool_issurlok<sp/>=<sp/>gfal_get_results<sp/>(gfile-&gt;gobj,<sp/>&amp;filestatuses)<sp/>&gt;=<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(bool_issurlok<sp/>=<sp/>filestatuses<sp/>!=<sp/>NULL)))<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(errbuf,<sp/>GFAL_ERRMSG_LEN,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>errbuf);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>filestatuses[0].status<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>filestatuses[0].status,<sp/>filestatuses[0].explanation);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(statbuf,<sp/>&amp;(filestatuses[0].stat),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat));</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_issurlok)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_next_replica<sp/>(gfile);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode<sp/>?<sp/>gfile-&gt;errcode<sp/>:<sp/>ENOENT;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;turl<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol[64],<sp/>pfn[1104];</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rc<sp/>=<sp/>parseturl<sp/>(gfile-&gt;turl,<sp/>protocol,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol),<sp/>pfn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn),<sp/>NULL,<sp/>0))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pops<sp/>=<sp/>find_pops<sp/>(protocol))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_link)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>pops-&gt;stat64<sp/>(pfn,<sp/>statbuf);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>pops-&gt;lstat64<sp/>(pfn,<sp/>statbuf);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>pops-&gt;maperror<sp/>(pops,<sp/>0);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1318"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="1320"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal">gfal_stat<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*statbuf)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat64<sp/>stat64buf;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_stat_generic<sp/>(filename,<sp/>0,<sp/>&amp;stat64buf)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__USE_FILE_OFFSET64)<sp/>||<sp/>__WORDSIZE<sp/>==<sp/>64</highlight></codeline>
<codeline lineno="1330"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(statbuf,<sp/>&amp;stat64buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat));</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1333"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>mdtomd32<sp/>(&amp;stat64buf,<sp/>statbuf);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1335"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1338"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="1341"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal">gfal_stat64<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*statbuf)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1344"><highlight class="comment">#elif<sp/>defined(__USE_FILE_OFFSET64)</highlight></codeline>
<codeline lineno="1345"><highlight class="comment">gfal_stat64<sp/>(const<sp/>char<sp/>*filename,<sp/>struct<sp/>stat<sp/>*statbuf)</highlight></codeline>
<codeline lineno="1346"><highlight class="comment">#endif</highlight></codeline>
<codeline lineno="1347"><highlight class="comment">#if<sp/>!defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)<sp/>||<sp/>defined(__USE_FILE_OFFSET64)</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_stat_generic<sp/>(filename,<sp/>0,<sp/>statbuf));</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1353"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="1355"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal">gfal_lstat<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*statbuf)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat64<sp/>stat64buf;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_stat_generic<sp/>(filename,<sp/>1,<sp/>&amp;stat64buf)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__USE_FILE_OFFSET64)<sp/>||<sp/>__WORDSIZE<sp/>==<sp/>64</highlight></codeline>
<codeline lineno="1365"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(statbuf,<sp/>&amp;stat64buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat));</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1368"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>mdtomd32<sp/>(&amp;stat64buf,<sp/>statbuf);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1370"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1373"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="1376"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal">gfal_lstat64<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*statbuf)</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1379"><highlight class="comment">#elif<sp/>defined(__USE_FILE_OFFSET64)</highlight></codeline>
<codeline lineno="1380"><highlight class="comment">gfal_stat64<sp/>(const<sp/>char<sp/>*filename,<sp/>struct<sp/>stat<sp/>*statbuf)</highlight></codeline>
<codeline lineno="1381"><highlight class="comment">#endif</highlight></codeline>
<codeline lineno="1382"><highlight class="comment">#if<sp/>!defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)<sp/>||<sp/>defined(__USE_FILE_OFFSET64)</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_stat_generic<sp/>(filename,<sp/>1,<sp/>statbuf));</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1388"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal">gfal_unlink<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_file<sp/>gfile;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfile<sp/>=<sp/>gfal_file_new<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>NULL,<sp/>0))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;errcode<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;nbreplicas<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>gfile-&gt;replicas<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_issurlok<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*current_surl;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_request<sp/>req;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal<sp/>gobj;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_filestatus<sp/>*filestatuses;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req<sp/>=<sp/>gfal_request_new<sp/>())<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;nbfiles<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;no_bdii_check<sp/>=<sp/>gfal_is_nobdii<sp/>();</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gfile-&gt;nbreplicas;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;replicas[i]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_surl<sp/>=<sp/>gfal_file_get_replica<sp/>(gfile);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;surls<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>&amp;current_surl;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bool_issurlok<sp/>=<sp/><ref refid="group__srm__group_1g4e6d4aab98935aaf408d8a5cdf9727d4" kindref="member">gfal_init</ref><sp/>(req,<sp/>&amp;gobj,<sp/>NULL,<sp/>0)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>NULL);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/><ref refid="group__srm__group_1g629a56f0d644547dbc9fdb2e058476e6" kindref="member">gfal_deletesurls</ref><sp/>(gobj,<sp/>NULL,<sp/>0)<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>NULL);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>(!(bool_issurlok<sp/>=<sp/>gfal_get_results<sp/>(gobj,<sp/>&amp;filestatuses)<sp/>&gt;<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(bool_issurlok<sp/>=<sp/>filestatuses<sp/>!=<sp/>NULL)))<sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_unlink][]<sp/>%s:<sp/>Internal<sp/>error&quot;</highlight><highlight class="normal">,<sp/>current_surl);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>NULL);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok<sp/>&amp;&amp;<sp/>!(bool_issurlok<sp/>=<sp/>filestatuses[0].status<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_unlink][]<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>current_surl,<sp/>filestatuses[0].explanation);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>filestatuses[0].status,<sp/>NULL);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;lfn)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/>lfn:%s<sp/>-<sp/>%s<sp/>&gt;<sp/>DELETED&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;lfn,<sp/>current_surl);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;guid)</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/>guid:%s<sp/>-<sp/>%s<sp/>&gt;<sp/>DELETED&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;guid,<sp/>current_surl);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_INFO,<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/>%s<sp/>&gt;<sp/>DELETED&quot;</highlight><highlight class="normal">,<sp/>current_surl);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(gobj);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bool_issurlok)<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;catalog<sp/>==<sp/>GFAL_FILE_CATALOG_LFC)<sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lfc_remove<sp/>(gfile,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;catalog<sp/>==<sp/>GFAL_FILE_CATALOG_EDG)<sp/>{<sp/></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lrc<sp/>removed<sp/>:<sp/>fix<sp/>it</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gfile-&gt;nbreplicas;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gfile-&gt;replicas[i]<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;replicas[i]-&gt;surl<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;replicas[i]-&gt;errcode<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"></highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(lrc_unregister_pfn<sp/>(gfile-&gt;guid,<sp/>gfile-&gt;replicas[i]-&gt;surl,<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_set_replica_error<sp/>(gfile,<sp/>errno,<sp/>NULL);</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_INFO,<sp/>&quot;[INFO]<sp/>%s<sp/>-<sp/>%s<sp/>&gt;<sp/>UNREGISTERED&quot;,</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;guid,<sp/>gfile-&gt;replicas[i]-&gt;surl);</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"></highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gfile-&gt;nberrors<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>**lfns<sp/>=<sp/>rmc_lfnsforguid<sp/>(gfile-&gt;guid,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(lfns<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>lfns[i];<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rmc_unregister_alias<sp/>(gfile-&gt;guid,<sp/>lfns[i],<sp/>NULL,<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;errcode<sp/>=<sp/>errno<sp/>?<sp/>errno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_INFO,<sp/>&quot;[INFO]<sp/>%s<sp/>-<sp/>%s<sp/>&gt;<sp/>UNREGISTERED&quot;,</highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfile-&gt;guid,<sp/>lfns[i]);</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"></highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lfns[i]);</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lfns);</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"></highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>gfile-&gt;errcode;</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(sav_errno<sp/>?<sp/>-1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;lrc<sp/>removed<sp/>:<sp/>not<sp/>avaialable<sp/>temporarly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfile-&gt;turl<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pfn[1104];</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">proto_ops<sp/>*pops<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>protocol[64];</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseturl<sp/>(gfile-&gt;turl,<sp/>protocol,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(protocol),<sp/>pfn,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pfn),<sp/>NULL,<sp/>0)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pops<sp/>=<sp/>find_pops<sp/>(protocol))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pops-&gt;unlink<sp/>(pfn)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>pops-&gt;maperror<sp/>(pops,<sp/>0);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno<sp/>?<sp/>errno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno<sp/>?<sp/>errno<sp/>:<sp/>EINVAL;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sav_errno<sp/>?<sp/>-1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_file_free<sp/>(gfile);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">gfal_write<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/>size_t<sp/>size)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xfer_info<sp/>*xi;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((xi<sp/>=<sp/>find_xi<sp/>(fd))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rc<sp/>=<sp/>xi-&gt;pops-&gt;write<sp/>(fd,<sp/>buf,<sp/>size))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>xi-&gt;pops-&gt;maperror<sp/>(xi-&gt;pops,<sp/>1);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xi-&gt;size<sp/>&gt;=<sp/>0)<sp/>xi-&gt;size<sp/>+=<sp/>rc;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><ref refid="group__srm__group_1g629a56f0d644547dbc9fdb2e058476e6" kindref="member">gfal_deletesurls</ref><sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="1565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_rm_input<sp/>rm_input;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_rm_output<sp/>rm_output;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_rm(&amp;context,&amp;rm_input,&amp;rm_output);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>rm_output.statuses;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_deletesurls<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses)<sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srm_statuses);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/>REMOVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_deletesurls<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="1605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srm_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;sfn_statuses)<sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;sfn_statuses);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;FEATURE<sp/>DISABLED<sp/>in<sp/>1.X,<sp/>need<sp/>fix&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fix<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*ret<sp/>=<sp/>sfn_deletesurls<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;sfn_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>gfal_get_timeout_sendreceive<sp/>());*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>DEFAULT_STATUS));</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><ref refid="group__srm__group_1gff1cd1d3df193f577ebb2fe108aa0b6c" kindref="member">gfal_removedir</ref><sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;nbfiles<sp/>!=<sp/>1<sp/>||<sp/>req-&gt;surls<sp/>==<sp/>NULL<sp/>||<sp/>req-&gt;surls[0]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_removedir][EINVAL]<sp/>you<sp/>have<sp/>to<sp/>specify<sp/>only<sp/>one<sp/>directory<sp/>SURL<sp/>at<sp/>a<sp/>time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_rmdir_input<sp/>rmdir_input;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_rmdir_output<sp/>rmdir_output;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmdir_input.recursive<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmdir_input.surl<sp/>=<sp/>req-&gt;surls[0];</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_rmdir(&amp;context,&amp;rmdir_input,&amp;rmdir_output);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>rmdir_output.statuses;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>moment,<sp/>there<sp/>is<sp/>no<sp/>field<sp/>in<sp/>the<sp/>gfal<sp/>struct<sp/>for<sp/>recursive<sp/>removal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srmv2_rmdir<sp/>(req-&gt;surls[0],<sp/>req-&gt;endpoint,<sp/>0,<sp/>&amp;(req-&gt;srmv2_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SRM<sp/>or<sp/>TYPE_SE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_removedir][EPROTONOSUPPORT]<sp/>only<sp/>SRMv2.2<sp/>supports<sp/>this<sp/>operation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>DEFAULT_STATUS));</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_create_subdirs(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,result<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_mkdir_input<sp/>mkdir_input;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>sub-directories<sp/>of<sp/>SURLs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gchar*<sp/>dir<sp/>=<sp/>g_strconcat((gchar*)req-&gt;surls[i],<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>concat<sp/>the<sp/>two<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_assert(dir);<sp/><sp/></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(dir)<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mkdir_input.dir_name<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>dir;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>srm_mkdir(&amp;context,&amp;mkdir_input);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_free((gpointer)<sp/>dir);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>&lt;<sp/>0)<sp/></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>removed<sp/>function<sp/>in<sp/>2.0</highlight></codeline>
<codeline lineno="1701"><highlight class="comment"><sp/><sp/><sp/><sp/>int</highlight></codeline>
<codeline lineno="1702"><highlight class="comment">gfal_turlsfromsurls<sp/>(gfal_internal<sp/>req,<sp/>char<sp/>*errbuf,<sp/>int<sp/>errbufsz)</highlight></codeline>
<codeline lineno="1703"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1704"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>ret;</highlight></codeline>
<codeline lineno="1705"><highlight class="comment"></highlight></codeline>
<codeline lineno="1706"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="1708"><highlight class="comment"></highlight></codeline>
<codeline lineno="1709"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="1710"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1712"><highlight class="comment"></highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,gfal_verbose);</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"></highlight></codeline>
<codeline lineno="1715"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="1716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="1718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((req-&gt;oflag<sp/>&amp;<sp/>O_ACCMODE)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_preparetoget_input<sp/>preparetoget_input;</highlight></codeline>
<codeline lineno="1728"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_preparetoget_output<sp/>preparetoget_output;</highlight></codeline>
<codeline lineno="1729"><highlight class="comment"></highlight></codeline>
<codeline lineno="1730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.nbfiles<sp/><sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="1731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.surls<sp/><sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="1732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.desiredpintime<sp/><sp/>=<sp/>req-&gt;srmv2_desiredpintime;</highlight></codeline>
<codeline lineno="1733"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.spacetokendesc<sp/>=<sp/>req-&gt;srmv2_spacetokendesc;</highlight></codeline>
<codeline lineno="1734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.protocols<sp/>=<sp/>req-&gt;protocols;</highlight></codeline>
<codeline lineno="1735"><highlight class="comment"></highlight></codeline>
<codeline lineno="1736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_prepare_to_get(&amp;context,&amp;preparetoget_input,&amp;preparetoget_output);</highlight></codeline>
<codeline lineno="1737"><highlight class="comment"></highlight></codeline>
<codeline lineno="1738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>preparetoget_output.filestatuses;</highlight></codeline>
<codeline lineno="1739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>preparetoget_output.token;</highlight></codeline>
<codeline lineno="1740"><highlight class="comment"></highlight></codeline>
<codeline lineno="1741"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//TODO<sp/>ret<sp/>=<sp/>srmv2_turlsfromsurls_get<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="1742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_desiredpintime,<sp/>req-&gt;srmv2_spacetokendesc,<sp/>req-&gt;protocols,</highlight></codeline>
<codeline lineno="1743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_token),<sp/>&amp;(req-&gt;srmv2_pinstatuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight></codeline>
<codeline lineno="1744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else</highlight></codeline>
<codeline lineno="1745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_preparetoput_input<sp/>preparetoput_input;</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_preparetoput_output<sp/>preparetoput_output;</highlight></codeline>
<codeline lineno="1748"><highlight class="comment"></highlight></codeline>
<codeline lineno="1749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoput_input.nbfiles<sp/><sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoput_input.surls<sp/><sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoput_input.desiredpintime<sp/><sp/>=<sp/>req-&gt;srmv2_desiredpintime;</highlight></codeline>
<codeline lineno="1752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoput_input.spacetokendesc<sp/>=<sp/>req-&gt;srmv2_spacetokendesc;</highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoput_input.protocols<sp/>=<sp/>req-&gt;protocols;</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoput_input.filesizes<sp/>=<sp/>req-&gt;filesizes;</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"></highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_create_subdirs(req,errbuf,errbufsz);</highlight></codeline>
<codeline lineno="1757"><highlight class="comment"></highlight></codeline>
<codeline lineno="1758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_prepare_to_put(&amp;context,&amp;preparetoput_input,&amp;preparetoput_output);</highlight></codeline>
<codeline lineno="1759"><highlight class="comment"></highlight></codeline>
<codeline lineno="1760"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>preparetoput_output.token;</highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>preparetoput_output.filestatuses;</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"></highlight></codeline>
<codeline lineno="1763"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/>TODO<sp/>ret<sp/>=<sp/>srmv2_turlsfromsurls_put<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="1764"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;filesizes,<sp/>req-&gt;srmv2_desiredpintime,<sp/>req-&gt;srmv2_spacetokendesc,<sp/>req-&gt;protocols,</highlight></codeline>
<codeline lineno="1765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_token),<sp/>&amp;(req-&gt;srmv2_pinstatuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);//</highlight></codeline>
<codeline lineno="1766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;srm_statuses)<sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srm_statuses);</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="comment">//TODO<sp/>REMOVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_turlsfromsurls<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;filesizes,<sp/>req-&gt;protocols,<sp/>req-&gt;oflag,<sp/>&amp;(req-&gt;srm_reqid),</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srm_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight></codeline>
<codeline lineno="1776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;sfn_statuses)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;sfn_statuses);</highlight></codeline>
<codeline lineno="1778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>sfn_turlsfromsurls<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;protocols,</highlight></codeline>
<codeline lineno="1781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;sfn_statuses),<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="1782"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="comment"></highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>(copy_gfal_results<sp/>(req,<sp/>PIN_STATUS));</highlight></codeline>
<codeline lineno="1786"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1787"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fix<sp/>it<sp/>:<sp/>removed<sp/>function<sp/>in<sp/>2.0</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/><sp/><sp/><sp/>int</highlight></codeline>
<codeline lineno="1792"><highlight class="comment">gfal_ls<sp/>(gfal_internal<sp/>req,<sp/>char<sp/>*errbuf,<sp/>int<sp/>errbufsz)</highlight></codeline>
<codeline lineno="1793"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>ret;</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"></highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"></highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_ls_input<sp/>ls_input;</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>srm_ls_output<sp/>ls_output;</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"></highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,gfal_verbose);</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"></highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;srmv2_mdstatuses)</highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_srmv2_mdstatuses<sp/>(req-&gt;srmv2_mdstatuses,<sp/>req-&gt;results_size);</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_mdstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls_input.numlevels<sp/>=<sp/>req-&gt;srmv2_lslevels;</highlight></codeline>
<codeline lineno="1820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls_input.offset<sp/>=<sp/>&amp;(req-&gt;srmv2_lsoffset);</highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls_input.count<sp/>=<sp/>req-&gt;srmv2_lscount;</highlight></codeline>
<codeline lineno="1822"><highlight class="comment"></highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_ls(&amp;context,&amp;ls_input,&amp;ls_output);</highlight></codeline>
<codeline lineno="1824"><highlight class="comment"></highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_mdstatuses<sp/>=<sp/>ls_output.statuses;</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>ls_output.token;</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"></highlight></codeline>
<codeline lineno="1828"><highlight class="comment"></highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//TODO<sp/><sp/>ret<sp/>=<sp/>srmv2_getfilemd<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;srmv2_lslevels,</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_lsoffset),<sp/>req-&gt;srmv2_lscount,<sp/>&amp;(req-&gt;srmv2_mdstatuses),<sp/>&amp;(req-&gt;srmv2_token),</highlight></codeline>
<codeline lineno="1831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight></codeline>
<codeline lineno="1832"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;srm_mdstatuses)<sp/>{</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srm_mdstatuses);</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_mdstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="comment">//TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_getfilemd<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="1838"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srm_mdstatuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>sfn_getfilemd<sp/>uses<sp/>srmv2_mdstatuses<sp/>field!!<sp/></highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;sfn_statuses)<sp/>{</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;sfn_statuses);</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;srmv2_mdstatuses)<sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_mdstatuses);</highlight></codeline>
<codeline lineno="1847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_mdstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>sfn_getfilemd<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_mdstatuses),<sp/>errbuf,<sp/>errbufsz,<sp/>gfal_get_timeout_sendreceive<sp/>());</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"></highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="1854"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>(copy_gfal_results<sp/>(req,<sp/>MD_STATUS));</highlight></codeline>
<codeline lineno="1855"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>removed<sp/>function<sp/>in<sp/>gfal<sp/>2.0<sp/>fix<sp/>it</highlight></codeline>
<codeline lineno="1858"><highlight class="comment"><sp/><sp/><sp/><sp/>int</highlight></codeline>
<codeline lineno="1859"><highlight class="comment">gfal_ls_end<sp/>(gfal_internal<sp/>req,<sp/>char<sp/>*errbuf,<sp/>int<sp/>errbufsz)</highlight></codeline>
<codeline lineno="1860"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(req<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/>&quot;[GFAL][gfal_ls_end][EINVAL]<sp/>Invalid<sp/>argument&quot;);</highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"></highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>(req-&gt;srmv2_lsoffset<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1867"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><ref refid="group__srm__group_1g3ae5c2126214ee65695904a7f9fddeb0" kindref="member">gfal_get</ref><sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_preparetoget_input<sp/>preparetoget_input;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_preparetoget_output<sp/>preparetoget_output;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.desiredpintime<sp/>=<sp/>req-&gt;srmv2_desiredpintime;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.protocols<sp/>=<sp/>req-&gt;protocols;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.spacetokendesc<sp/>=<sp/>req-&gt;srmv2_spacetokendesc;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_prepare_to_get_async(&amp;context,&amp;preparetoget_input,&amp;preparetoget_output);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>preparetoget_output.token;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>preparetoget_output.filestatuses;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_gete<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="1909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_desiredpintime,<sp/>req-&gt;srmv2_spacetokendesc,<sp/>req-&gt;protocols,</highlight></codeline>
<codeline lineno="1910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_token),<sp/>&amp;(req-&gt;srmv2_pinstatuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses)<sp/>{</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srm_statuses);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/>REMOVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_getxe<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;protocols,</highlight></codeline>
<codeline lineno="1918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srm_reqid),<sp/>&amp;(req-&gt;srm_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_get][EPROTONOSUPPORT]<sp/>SFNs<sp/>aren&apos;t<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>PIN_STATUS));</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><ref refid="group__srm__group_1g1f99a22cf6a648d42530bc83d0ac8861" kindref="member">gfal_getstatus</ref><sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="1931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_preparetoget_input<sp/>preparetoget_input;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_preparetoget_output<sp/>preparetoget_output;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparetoget_output.token<sp/>=<sp/>req-&gt;srmv2_token;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_status_of_get_request_async(&amp;context,&amp;preparetoget_input,&amp;preparetoget_output);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>preparetoget_output.filestatuses;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_getstatuse<sp/>(req-&gt;srmv2_token,<sp/>req-&gt;endpoint,<sp/>&amp;(req-&gt;srmv2_pinstatuses),</highlight></codeline>
<codeline lineno="1958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses)<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srm_statuses);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_getstatusxe<sp/>(req-&gt;srm_reqid,<sp/>req-&gt;endpoint,<sp/>&amp;(req-&gt;srm_statuses),</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_getstatus][EPROTONOSUPPORT]<sp/>SFNs<sp/>aren&apos;t<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>PIN_STATUS));</highlight></codeline>
<codeline lineno="1974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal">gfal_bringonline<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="1978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_bringonline_input<sp/>bringonline_input;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_bringonline_output<sp/>bringonline_output;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.desiredpintime<sp/>=<sp/>req-&gt;srmv2_desiredpintime;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.protocols<sp/>=<sp/><sp/>req-&gt;protocols;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.spacetokendesc<sp/>=<sp/>req-&gt;srmv2_spacetokendesc;</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_bring_online(&amp;context,&amp;bringonline_input,&amp;bringonline_output);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>bringonline_output.token;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>bringonline_output.filestatuses;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_bringonline<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_desiredpintime,<sp/>req-&gt;srmv2_spacetokendesc,<sp/>req-&gt;protocols,</highlight></codeline>
<codeline lineno="2015"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_token),<sp/>&amp;(req-&gt;srmv2_pinstatuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_bringonline][EPROTONOSUPPORT]<sp/>Only<sp/>SRMv2-compliant<sp/>SEs<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>PIN_STATUS));</highlight></codeline>
<codeline lineno="2024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal">gfal_prestage<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_bringonline_input<sp/>bringonline_input;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_bringonline_output<sp/>bringonline_output;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.desiredpintime<sp/>=<sp/>req-&gt;srmv2_desiredpintime;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.protocols<sp/>=<sp/><sp/>req-&gt;protocols;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.spacetokendesc<sp/>=<sp/>req-&gt;srmv2_spacetokendesc;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_bring_online_async(&amp;context,&amp;bringonline_input,&amp;bringonline_output);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>bringonline_output.token;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>bringonline_output.filestatuses;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_prestagee<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,</highlight></codeline>
<codeline lineno="2064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_desiredpintime,<sp/>req-&gt;srmv2_spacetokendesc,<sp/>req-&gt;protocols,</highlight></codeline>
<codeline lineno="2065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_token),<sp/>&amp;(req-&gt;srmv2_pinstatuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_prestage][EPROTONOSUPPORT]<sp/>Only<sp/>SRMv2-compliant<sp/>SEs<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>PIN_STATUS));</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal">gfal_prestagestatus<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_bringonline_input<sp/>bringonline_input;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_bringonline_output<sp/>bringonline_output;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bringonline_output.token<sp/>=<sp/>req-&gt;srmv2_token;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_status_of_bring_online_async(&amp;context,&amp;bringonline_input,&amp;bringonline_output);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>bringonline_output.filestatuses;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_prestagestatuse<sp/>(req-&gt;srmv2_token,<sp/>req-&gt;endpoint,<sp/>&amp;(req-&gt;srmv2_pinstatuses),</highlight></codeline>
<codeline lineno="2105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_prestagestatus][EPROTONOSUPPORT]<sp/>Only<sp/>SRMv2-compliant<sp/>SEs<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>PIN_STATUS));</highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal">gfal_pin<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_extendfilelifetime_input<sp/>extendfilelifetime_input;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_extendfilelifetime_output<sp/>extendfilelifetime_output;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extendfilelifetime_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extendfilelifetime_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extendfilelifetime_input.reqtoken<sp/>=<sp/>req-&gt;srmv2_token;</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extendfilelifetime_input.pintime<sp/>=<sp/>req-&gt;srmv2_desiredpintime;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_extend_file_lifetime(&amp;context,&amp;extendfilelifetime_input,&amp;extendfilelifetime_output);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>extendfilelifetime_output.filestatuses;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_pin<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;srmv2_token,</highlight></codeline>
<codeline lineno="2147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_desiredpintime,<sp/>&amp;(req-&gt;srmv2_pinstatuses),</highlight></codeline>
<codeline lineno="2148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_pin][EPROTONOSUPPORT]<sp/>Only<sp/>SRMv2-compliant<sp/>SEs<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>PIN_STATUS));</highlight></codeline>
<codeline lineno="2157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal">gfal_release<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_releasefiles_input<sp/>releasefiles_input;</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasefiles_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasefiles_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasefiles_input.reqtoken<sp/>=<sp/>req-&gt;srmv2_token;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_release_files(&amp;context,&amp;releasefiles_input,&amp;(req-&gt;srmv2_statuses));<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>be<sp/>as<sp/>the<sp/>template<sp/>context,input,output<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_release<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;srmv2_token,</highlight></codeline>
<codeline lineno="2186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_release][EINVAL]<sp/>no<sp/>SRMv1<sp/>file<sp/>ids&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/></highlight><highlight class="comment">/*TODO<sp/>REMOVE<sp/>ALL<sp/>IF<sp/>SRMV1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(srm_set_xfer_done<sp/>(req-&gt;endpoint,<sp/>req-&gt;srm_reqid,<sp/>req-&gt;srm_statuses[i].fileid,</highlight></codeline>
<codeline lineno="2197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].status<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="2202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;sfn_statuses)</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;sfn_statuses);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((req-&gt;sfn_statuses<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sfn_filestatus<sp/>*)<sp/>calloc<sp/>(req-&gt;nbfiles,<sp/>sizeof<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sfn_filestatus)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>DEFAULT_STATUS));</highlight></codeline>
<codeline lineno="2227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal">gfal_set_xfer_done<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;oflag<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_releasefiles_input<sp/>releasefiles_input;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasefiles_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasefiles_input.reqtoken<sp/>=<sp/>req-&gt;srmv2_token;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>releasefiles_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_release_files(&amp;context,&amp;releasefiles_input,&amp;(req-&gt;srmv2_statuses));</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/><sp/>ret<sp/>=<sp/>srmv2_set_xfer_done_get<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;srmv2_token,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_putdone_input<sp/>putdone_input;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putdone_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putdone_input.reqtoken<sp/>=<sp/>req-&gt;srmv2_token;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>putdone_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_put_done(&amp;context,&amp;putdone_input,&amp;(req-&gt;srmv2_statuses));</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/><sp/>ret<sp/>=<sp/>srmv2_set_xfer_done_put<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;srmv2_token,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_set_xfer_done][EINVAL]<sp/>no<sp/>SRMv1<sp/>file<sp/>ids&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(srm_set_xfer_done<sp/>(req-&gt;endpoint,<sp/>req-&gt;srm_reqid,<sp/>req-&gt;srm_statuses[i].fileid,</highlight></codeline>
<codeline lineno="2281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].status<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="2286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;sfn_statuses)</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;sfn_statuses);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((req-&gt;sfn_statuses<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sfn_filestatus<sp/>*)<sp/>calloc<sp/>(req-&gt;nbfiles,<sp/>sizeof<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sfn_filestatus)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>DEFAULT_STATUS));</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal">gfal_set_xfer_running<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="comment">//srmv2_set_xfer_running<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req-&gt;srmv2_statuses<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_filestatus<sp/>*)<sp/>calloc<sp/>(req-&gt;nbfiles,<sp/>sizeof<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_filestatus)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>(-1);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(req-&gt;srmv2_statuses<sp/>+<sp/>i,<sp/>0,<sp/>sizeof<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_filestatus));</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses[i].status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight><highlight class="comment">//srmv2_set_xfer_running<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srmv2_set_xfer_running<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;srmv2_token,</highlight></codeline>
<codeline lineno="2349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_release][EINVAL]<sp/>no<sp/>SRMv1<sp/>file<sp/>ids&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(srm_set_xfer_running<sp/>(req-&gt;endpoint,<sp/>req-&gt;srm_reqid,<sp/>req-&gt;srm_statuses[i].fileid,</highlight></codeline>
<codeline lineno="2360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].status<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>req-&gt;setype<sp/>==<sp/>TYPE_SE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;sfn_statuses)</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;sfn_statuses);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((req-&gt;sfn_statuses<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sfn_filestatus<sp/>*)<sp/>calloc<sp/>(req-&gt;nbfiles,<sp/>sizeof<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sfn_filestatus)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].surl<sp/>=<sp/>strdup<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses[i].status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>DEFAULT_STATUS));</highlight></codeline>
<codeline lineno="2391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal">gfal_abortrequest<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>1,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_mdstatuses)</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_mdstatuses);</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_mdstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;results)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_gfal_results<sp/>(req-&gt;results,<sp/>req-&gt;results_size);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results_size<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_abort_request(&amp;context,req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/><sp/><sp/>ret<sp/>=<sp/>srmv2_abortrequest<sp/>(req-&gt;endpoint,<sp/>req-&gt;srmv2_token,<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_abortrequest][EPROTONOSUPPORT]<sp/>Only<sp/>SRMv2-compliant<sp/>SEs<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal">gfal_abortfiles<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check_gfal_internal<sp/>(req,<sp/>0,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_context<sp/>context;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_abort_files_input<sp/>abortfiles_input;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srm_context_init(&amp;context,req-&gt;endpoint,errbuf,errbufsz,<ref refid="gfal__common__errverbose_8c_1135b3fdd775aa7215e2ab4de1eea495f" kindref="member">gfal_get_verbose</ref>());</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortfiles_input.nbfiles<sp/>=<sp/>req-&gt;nbfiles;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortfiles_input.surls<sp/>=<sp/>req-&gt;surls;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abortfiles_input.reqtoken<sp/>=<sp/>req-&gt;srmv2_token;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>srm_abort_files(&amp;context,&amp;abortfiles_input,&amp;(req-&gt;srmv2_statuses));</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*TODO<sp/>ret<sp/>=<sp/>srmv2_abortfiles<sp/>(req-&gt;nbfiles,<sp/>(const<sp/>char<sp/>**)<sp/>req-&gt;surls,<sp/>req-&gt;endpoint,<sp/>req-&gt;srmv2_token,</highlight></codeline>
<codeline lineno="2468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(req-&gt;srmv2_statuses),<sp/>errbuf,<sp/>errbufsz,<sp/>req-&gt;timeout);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_abortfiles][EPROTONOSUPPORT]<sp/>Only<sp/>SRMv2-compliant<sp/>SEs<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EPROTONOSUPPORT;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>req-&gt;returncode<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(copy_gfal_results<sp/>(req,<sp/>DEFAULT_STATUS));</highlight></codeline>
<codeline lineno="2477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal">mdtomd32<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*statb64,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*statbuf)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statb64-&gt;st_size<sp/>&gt;<sp/>OFF_MAX<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(off_t)<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)</highlight></codeline>
<codeline lineno="2484"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="2486"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EOVERFLOW;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2488"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(statbuf,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat));</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;st_mode<sp/>=<sp/>statb64-&gt;st_mode;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;st_nlink<sp/>=<sp/>statb64-&gt;st_nlink;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;st_uid<sp/>=<sp/>statb64-&gt;st_uid;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;st_gid<sp/>=<sp/>statb64-&gt;st_gid;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>statbuf-&gt;st_size<sp/>=<sp/>(off_t)<sp/>statb64-&gt;st_size;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(0);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENDPOINT_DEFAULT_PREFIX<sp/>&quot;httpg://&quot;</highlight></codeline>
<codeline lineno="2499"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDPOINT_DEFAULT_PREFIX_LEN<sp/>strlen(&quot;httpg://&quot;)</highlight></codeline>
<codeline lineno="2500"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="2502"><highlight class="normal">endpointfromsurl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*surl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_prefixing_on)</highlight></codeline>
<codeline lineno="2503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p,<sp/>*endpoint<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpoint_offset=0;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(surl,<sp/></highlight><highlight class="stringliteral">&quot;srm://&quot;</highlight><highlight class="normal">,<sp/>6)<sp/>&amp;&amp;<sp/>strncmp<sp/>(surl,<sp/></highlight><highlight class="stringliteral">&quot;sfn://&quot;</highlight><highlight class="normal">,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][endpointfromsurl][EINVAL]<sp/>%s:<sp/>Invalid<sp/>SURL<sp/>(must<sp/>start<sp/>with<sp/>either<sp/>&apos;srm://&apos;<sp/>or<sp/>&apos;sfn://&apos;)&quot;</highlight><highlight class="normal">,<sp/>surl);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>strstr<sp/>(surl<sp/>+<sp/>6,<sp/></highlight><highlight class="stringliteral">&quot;?SFN=&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>strchr<sp/>(surl<sp/>+<sp/>6,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][endpointfromsurl][EINVAL]<sp/>%s:<sp/>Invalid<sp/>SURL&quot;</highlight><highlight class="normal">,<sp/>surl);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>p<sp/>-<sp/>surl<sp/>-<sp/>6;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((endpoint<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>calloc<sp/>(len<sp/>+<sp/>1<sp/>+<sp/>strlen<sp/>(ENDPOINT_DEFAULT_PREFIX),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">//hack<sp/>to<sp/>ensure<sp/>proper<sp/>endpoint<sp/>prefixing<sp/>(httpg://)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_prefixing_on<sp/>&amp;&amp;<sp/>len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy<sp/>(endpoint,<sp/>ENDPOINT_DEFAULT_PREFIX);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint_offset<sp/>=<sp/>ENDPOINT_DEFAULT_PREFIX_LEN;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy<sp/>(endpoint<sp/>+<sp/>endpoint_offset,<sp/>surl<sp/>+<sp/>6,<sp/>len);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/>endpoint[len<sp/>+<sp/>endpoint_offset]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(endpoint);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal">canonical_url<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*url,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*defproto,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newurl,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newurlsz,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)<sp/>{</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pwd,<sp/>*lfc_home,<sp/>*p_url,<sp/>*p_newurl;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>GError*<sp/>err=NULL;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(url<sp/>==<sp/>NULL<sp/>||<sp/>newurl<sp/>==<sp/>NULL<sp/>||<sp/>newurlsz<sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][canonical_url][EFAULT]<sp/>bad<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EFAULT;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen<sp/>(url)<sp/>&gt;<sp/>newurlsz<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][canonical_url][ENAMETOOLONG]<sp/>%s:<sp/>URL<sp/>too<sp/>long&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENAMETOOLONG;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(&amp;err)<sp/>)<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__errverbose_8c_11441ea4b8176eb0cf3099009b950a3e9" kindref="member">gfal_release_GError</ref>(&amp;err);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cat_type);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/>islfc<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>pwd<sp/>=<sp/>lfc_home<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>protocol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p_url<sp/>=<sp/>strstr<sp/>(url,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>&apos;defproto&apos;<sp/>as<sp/>default<sp/>URL<sp/>protocol<sp/>if<sp/>defined<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defproto<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][canonical_url][EINVAL]<sp/>%s:<sp/>No<sp/>protocol<sp/>specified&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen<sp/>(url)<sp/>+<sp/>strlen<sp/>(defproto)<sp/>+<sp/>1<sp/>&gt;<sp/>newurlsz<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][canonical_url][ENAMETOOLONG]<sp/>%s:<sp/>URL<sp/>too<sp/>long&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENAMETOOLONG;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf<sp/>(newurl,<sp/></highlight><highlight class="stringliteral">&quot;%s:&quot;</highlight><highlight class="normal">,<sp/>defproto);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen<sp/>(defproto)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_newurl<sp/>=<sp/>newurl<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_url<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>url;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>include<sp/>&apos;:&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(p_url<sp/>-<sp/>url)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>include<sp/>&apos;\0&apos;<sp/>at<sp/>the<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(newurl,<sp/>len<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_newurl<sp/>=<sp/>newurl<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p_url;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(newurl,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p_url<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfc<sp/>&amp;&amp;<sp/>lfc_home<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>(lfc_home<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;LFC_HOME&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][canonical_url][EINVAL]<sp/>%s:<sp/>Relative<sp/>path,<sp/>but<sp/>LFC_HOME<sp/>not<sp/>defined&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(p_newurl,<sp/>newurlsz<sp/>-<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>lfc_home,<sp/>p_url);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(p_url<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>++p_url;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(p_newurl,<sp/>newurlsz<sp/>-<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>p_url);</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(newurl,<sp/></highlight><highlight class="stringliteral">&quot;file:&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p_url<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pwd<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>(pwd<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;PWD&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][canonical_url][EINVAL]<sp/>%s:<sp/>Can&apos;t<sp/>determine<sp/>current<sp/>directory&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(p_newurl,<sp/>newurlsz<sp/>-<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s&quot;</highlight><highlight class="normal">,<sp/>pwd,<sp/>p_url);</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(p_url<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>++p_url;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(p_newurl,<sp/>newurlsz<sp/>-<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>p_url);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(p_newurl,<sp/>newurlsz<sp/>-<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>p_url);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal">parseturl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*turl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*protocol,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocolsz,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pfn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pfnsz,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!turl)<sp/>{</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][parseturl][EFAULT]:<sp/>Invalid<sp/>TURL<sp/>(NULL)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EFAULT;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(turl<sp/>&amp;&amp;<sp/>strlen<sp/>(turl)<sp/>&gt;<sp/>pfnsz<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][parseturl][ENAMETOOLONG]<sp/>%s:<sp/>TURL<sp/>too<sp/>long&quot;</highlight><highlight class="normal">,<sp/>turl);</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENAMETOOLONG;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(pfn,<sp/>turl);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>protocol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>strstr<sp/>(pfn,<sp/></highlight><highlight class="stringliteral">&quot;:/&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][parseturl][EINVAL]<sp/>%s:<sp/>Invalid<sp/>TURL&quot;</highlight><highlight class="normal">,<sp/>turl);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>=<sp/>p<sp/>-<sp/>pfn)<sp/>&gt;<sp/>(protocolsz<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][parseturl][ENAMETOOLONG]<sp/>%s:<sp/>TURL<sp/>protocol<sp/>too<sp/>long&quot;</highlight><highlight class="normal">,<sp/>turl);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENAMETOOLONG;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(protocol,<sp/>pfn,<sp/>len);</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(protocol<sp/>+<sp/>len)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(protocol,<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(pfn,<sp/>p,<sp/>strlen<sp/>(p)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(protocol,<sp/></highlight><highlight class="stringliteral">&quot;rfio&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>||<sp/>(*(p<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*(p<sp/>+<sp/>2)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][parseturl][EINVAL]<sp/>%s:<sp/>Invalid<sp/>TURL&quot;</highlight><highlight class="normal">,<sp/>turl);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>hostname<sp/>;<sp/>*(p<sp/>+<sp/>1)<sp/>=<sp/>&apos;/&apos;<sp/>due<sp/>to<sp/>the<sp/>previous<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(pfn,<sp/>p<sp/>+<sp/>1,<sp/>strlen<sp/>(p<sp/>+<sp/>1)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr<sp/>(p,<sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">)<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>strchr<sp/>(p,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>Castor2-like<sp/>RFIO<sp/>TURL<sp/>(eg.<sp/>with<sp/>&quot;?svcClass=...&quot;),<sp/>pfn<sp/>is<sp/>the<sp/>TURL,<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>other<sp/>case,<sp/>we<sp/>want<sp/>hostname:/filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(pfn,<sp/>p,<sp/>strlen<sp/>(p)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>strchr<sp/>(pfn,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][parseturl][EINVAL]<sp/>%s:<sp/>Invalid<sp/>TURL&quot;</highlight><highlight class="normal">,<sp/>turl);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p<sp/>is<sp/>pointing<sp/>on<sp/>the<sp/>slash<sp/>just<sp/>after<sp/>the<sp/>hostname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(p<sp/>+<sp/>1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(p<sp/>+<sp/>1,<sp/>p,<sp/>strlen<sp/>(p)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>other<sp/>cases<sp/>(Castor2-like<sp/>RFIO<sp/>TURL),<sp/>the<sp/>entire<sp/>turl<sp/>is<sp/>returned<sp/>as<sp/>pfn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal">setypesandendpoints<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*endpoint,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***se_types,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***se_endpoints,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p1,<sp/>*p2;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>endpoint_tmp[256];</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(se_types<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen<sp/>(endpoint)<sp/>+<sp/>2<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(endpoint_tmp))<sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][setypesandendpoints][ENAMETOOLONG]<sp/>%s:<sp/>Endpoint<sp/>too<sp/>long&quot;</highlight><highlight class="normal">,<sp/>endpoint);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENAMETOOLONG;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p1<sp/>=<sp/>strchr<sp/>(endpoint,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>==<sp/>NULL<sp/>||<sp/>(p2<sp/>=<sp/>strchr<sp/>(endpoint,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(endpoint_tmp,<sp/>endpoint,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(endpoint_tmp));</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>p1<sp/>-<sp/>endpoint;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(endpoint_tmp,<sp/>endpoint,<sp/>len);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(endpoint_tmp<sp/>+<sp/>len,<sp/></highlight><highlight class="stringliteral">&quot;:*&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(endpoint_tmp<sp/>+<sp/>len,<sp/>p1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(endpoint_tmp)<sp/>-<sp/>len);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint_tmp[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(endpoint_tmp)<sp/>-<sp/>1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(get_se_types_and_endpoints<sp/>(endpoint_tmp,<sp/>se_types,<sp/>se_endpoints,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal">setypesandendpointsfromsurl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*surl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***se_types,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***se_endpoints,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*endpoint_tmp;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((endpoint_tmp<sp/>=<sp/>endpointfromsurl<sp/>(surl,<sp/>errbuf,<sp/>errbufsz,<sp/>0))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>setypesandendpoints<sp/>(endpoint_tmp,<sp/>se_types,<sp/>se_endpoints,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(endpoint_tmp);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal">get_cat_type<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**cat_type)<sp/>{</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_env;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_cat<sp/>=<sp/>GFAL_DEFAULT_CATALOG_TYPE;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((cat_env<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;LCG_CATALOG_TYPE&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>catalogs<sp/>if<sp/>no<sp/>environment<sp/>variable<sp/>specified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cat_env<sp/>=<sp/>default_cat;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*cat_type<sp/>=<sp/>strdup(cat_env))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="2762"><highlight class="normal">get_catalog_endpoint<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==NULL)<sp/>{</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>lrc<sp/>support<sp/>removed<sp/>:<sp/>fix<sp/>it<sp/><sp/><sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(lrc_get_catalog_endpoint<sp/>(errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2771"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>*/</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lfc_get_catalog_endpoint<sp/>(errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][get_catalog_endpoint][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="2783"><highlight class="normal">gfal_guidforpfn<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actual_pfn[GFAL_PATH_MAXLEN];</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(purify_surl<sp/>(pfn,<sp/>actual_pfn,<sp/>GFAL_PATH_MAXLEN)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>lrc<sp/>support<sp/>removed<sp/>:<sp/>fix<sp/>it<sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(lrc_guidforpfn<sp/>(actual_pfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2796"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>*/</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__lfc__low__group_1g344113bab975bfeedfa4be33b2054745" kindref="member">lfc_guidforpfn</ref><sp/>(actual_pfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_guidforpfn][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal">gfal_guidsforpfns<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbfiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pfns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***guids,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**statuses,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actual_pfn[GFAL_PATH_MAXLEN];</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lrc<sp/>support<sp/>removed<sp/>:<sp/>fix<sp/>it</highlight></codeline>
<codeline lineno="2816"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i;</highlight></codeline>
<codeline lineno="2818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>errmsg[GFAL_ERRMSG_LEN];</highlight></codeline>
<codeline lineno="2819"><highlight class="comment"></highlight></codeline>
<codeline lineno="2820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2821"><highlight class="comment"></highlight></codeline>
<codeline lineno="2822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((*guids<sp/>=<sp/>(char<sp/>**)<sp/>calloc<sp/>(nbfiles<sp/>+<sp/>1,<sp/>sizeof<sp/>(char<sp/>*)))<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="2823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*statuses<sp/>=<sp/>(int<sp/>*)<sp/>calloc<sp/>(nbfiles,<sp/>sizeof<sp/>(int)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="2825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2826"><highlight class="comment"></highlight></codeline>
<codeline lineno="2827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(purify_surl<sp/>(pfns[i],<sp/>actual_pfn,<sp/>GFAL_PATH_MAXLEN)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*statuses)[i]<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="2831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*guids)[i]<sp/>=<sp/>lrc_guidforpfn<sp/>(pfns[i],<sp/>errmsg,<sp/>GFAL_ERRMSG_LEN);</highlight></codeline>
<codeline lineno="2833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*statuses)[i]<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(0);</highlight></codeline>
<codeline lineno="2837"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__lfc__low__group_1gf922973a476763abd5185fc13d2af9eb" kindref="member">lfc_guidsforpfns</ref><sp/>(nbfiles,<sp/>pfns,<sp/>amode,<sp/>guids,<sp/>statuses,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_guidsforpfns][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal">guid_exists<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>lrc<sp/>support<sp/>removed<sp/>:<sp/>fix<sp/>it<sp/><sp/><sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(lrc_guid_exists<sp/>(guid,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2858"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>*/</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__lfc__low__group_1g89af6526e8342c74f90fa2ee10cdc5fa" kindref="member">lfc_guid_exists</ref><sp/>(guid,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][guid_exists][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal">setfilesize<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pfn,<sp/>GFAL_LONG64<sp/>filesize,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>lrc<sp/>removed<sp/>:<sp/>fix<sp/>it<sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(lrc_setfilesize<sp/>(pfn,<sp/>filesize,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2879"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>case,<sp/>we<sp/>suppose<sp/>pfn<sp/>is<sp/>actually<sp/>a<sp/>LFN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lfc_setsize<sp/>(pfn,<sp/>filesize,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][setfilesize][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**</highlight></codeline>
<codeline lineno="2892"><highlight class="normal">gfal_get_replicas<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type<sp/>=<sp/>NULL,<sp/>*actual_lfn<sp/>=<sp/>NULL,<sp/>*actual_guid<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**results<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfn<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>guid<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_lfn<sp/>=<sp/>strdup<sp/>(strncmp<sp/>(lfn,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>?<sp/>lfn<sp/>+<sp/>4<sp/>:<sp/>lfn);</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guid<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_guid<sp/>=<sp/>strdup<sp/>(strncmp<sp/>(guid,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0<sp/>?<sp/>guid<sp/>+<sp/>5<sp/>:<sp/>guid);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>lfc_get_replicas<sp/>(actual_lfn,<sp/>actual_guid,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;edg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lrc<sp/>and<sp/>rmc<sp/>support<sp/>removed<sp/>:<sp/>fix<sp/>it</highlight></codeline>
<codeline lineno="2916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(actual_guid<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((actual_guid<sp/>=<sp/>rmc_guidfromlfn<sp/>(actual_lfn,<sp/>errbuf,<sp/>errbufsz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="2920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>lrc_surlsfromguid<sp/>(actual_guid,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;lrc<sp/>and<sp/>rmc<sp/>support<sp/>removed,<sp/>impossible<sp/>to<sp/>use<sp/>like<sp/>this&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_get_replicas][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cat_type)<sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_lfn)<sp/>free<sp/>(actual_lfn);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_guid)<sp/>free<sp/>(actual_guid);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(results);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal">gfal_unregister_pfns<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbguids,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**guids,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pfns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**results,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="2940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;edg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lrc<sp/>&amp;<sp/>rmc<sp/>support<sp/>removed<sp/>:<sp/>fix<sp/>it</highlight></codeline>
<codeline lineno="2949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="2950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>**remaining_pfns,<sp/>**lfns;</highlight></codeline>
<codeline lineno="2951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>surl_cat[GFAL_PATH_MAXLEN];</highlight></codeline>
<codeline lineno="2952"><highlight class="comment"></highlight></codeline>
<codeline lineno="2953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="2954"><highlight class="comment"></highlight></codeline>
<codeline lineno="2955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((*results<sp/>=<sp/>(int<sp/>*)<sp/>calloc<sp/>(nbguids,<sp/>sizeof<sp/>(int)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="2957"><highlight class="comment"></highlight></codeline>
<codeline lineno="2958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbguids;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2959"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(purify_surl<sp/>(pfns[i],<sp/>surl_cat,<sp/>GFAL_PATH_MAXLEN)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2960"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*results)[i]<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="2961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="2962"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2963"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lrc_unregister_pfn<sp/>(guids[i],<sp/>surl_cat,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rc<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOENT)<sp/>{</highlight></codeline>
<codeline lineno="2965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="2966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;[GFAL][gfal_unregister_pfns][]<sp/>Failed<sp/>with<sp/>removing<sp/>SRM<sp/>version<sp/>specific<sp/>information,<sp/>trying<sp/>with<sp/>full<sp/>SURL...\n&quot;);</highlight></codeline>
<codeline lineno="2967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lrc_unregister_pfn<sp/>(guids[i],<sp/>pfns[i],<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2968"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rc<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*results)[i]<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="2971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="2972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*results)[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_WARN,<sp/>&quot;[guid:%s]<sp/>%s<sp/>UNREGISTERED&quot;,<sp/>guids[i],<sp/>pfns[i]);</highlight></codeline>
<codeline lineno="2974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2975"><highlight class="comment"></highlight></codeline>
<codeline lineno="2976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_pfns<sp/>=<sp/>lrc_surlsfromguid<sp/>(guids[i],<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(remaining_pfns<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>still<sp/>valid<sp/>replicas<sp/></highlight></codeline>
<codeline lineno="2979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>remaining_pfns[j];<sp/>++j)<sp/>free<sp/>(remaining_pfns[j]);</highlight></codeline>
<codeline lineno="2980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(remaining_pfns);</highlight></codeline>
<codeline lineno="2981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="2982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2983"><highlight class="comment"></highlight></codeline>
<codeline lineno="2984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>There<sp/>are<sp/>no<sp/>more<sp/>replicas<sp/></highlight></codeline>
<codeline lineno="2985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfns<sp/>=<sp/>rmc_lfnsforguid<sp/>(guids[i],<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(lfns<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>We<sp/>remove<sp/>all<sp/>aliases<sp/></highlight></codeline>
<codeline lineno="2988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>lfns[j];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2989"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_WARN,<sp/>&quot;[guid:%s]<sp/>%s<sp/>UNREGISTERED&quot;,<sp/>guids[i],<sp/>lfns[j]);</highlight></codeline>
<codeline lineno="2990"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmc_unregister_alias<sp/>(guids[i],<sp/>lfns[j],<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="2991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lfns[j]);</highlight></codeline>
<codeline lineno="2992"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2993"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lfns);</highlight></codeline>
<codeline lineno="2994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(0);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;<sp/>lrc<sp/>and<sp/>rmc<sp/>support<sp/>removed,<sp/>impossible<sp/>to<sp/>use&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__lfc__low__group_1g9ea58977487f9be50e91ba9857bc9510" kindref="member">lfc_unregister_pfns</ref><sp/>(nbguids,<sp/>guids,<sp/>pfns,<sp/>results,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_unregister_pfns][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3010"><highlight class="normal">guidfromlfn<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/><sp/>remove<sp/>rmc<sp/>dependencies<sp/>:<sp/>fix<sp/>it<sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3017"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3018"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(rmc_guidfromlfn<sp/>(lfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="3019"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lfc_guidfromlfn<sp/>(lfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][guidfromlfn][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**</highlight></codeline>
<codeline lineno="3032"><highlight class="normal">gfal_get_aliases<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type<sp/>=<sp/>NULL,<sp/>*actual_lfn<sp/>=<sp/>NULL,<sp/>*actual_guid<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**results<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfn<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>guid<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfn<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_lfn<sp/>=<sp/>strdup<sp/>(strncmp<sp/>(lfn,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>?<sp/>lfn<sp/>+<sp/>4<sp/>:<sp/>lfn);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guid<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_guid<sp/>=<sp/>strdup<sp/>(strncmp<sp/>(guid,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0<sp/>?<sp/>guid<sp/>+<sp/>5<sp/>:<sp/>guid);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_get_aliases][]<sp/>Unable<sp/>to<sp/>determine<sp/>the<sp/>catalog<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>lfc_get_aliases<sp/>(actual_lfn,<sp/>actual_guid,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;edg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fix<sp/>it,<sp/>rmlc<sp/>removed<sp/></highlight></codeline>
<codeline lineno="3057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(actual_guid<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((actual_guid<sp/>=<sp/>rmc_guidfromlfn<sp/>(actual_lfn,<sp/>errbuf,<sp/>errbufsz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="3060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="3061"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>=<sp/>rmc_lfnsforguid<sp/>(actual_guid,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="3062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="3063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;<sp/>rmc<sp/>support<sp/>removed,<sp/>temporarly<sp/>disable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_get_aliases][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cat_type)<sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_lfn)<sp/>free<sp/>(actual_lfn);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual_guid)<sp/>free<sp/>(actual_guid);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(results);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal">gfal_register_file<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*surl,<sp/>mode_t<sp/>mode,</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GFAL_LONG64<sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_createonly,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3082"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>actual_surl[GFAL_PATH_MAXLEN];</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>islfc,<sp/>isedg,<sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surl<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/>islfc<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/>isedg<sp/>=<sp/>strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;edg&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfn<sp/>&amp;&amp;<sp/>!lfn[0])<sp/>lfn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guid<sp/>&amp;&amp;<sp/>!guid[0])<sp/>guid<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(guid)<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uuid_t<sp/>uuid;</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(guid,<sp/></highlight><highlight class="stringliteral">&quot;guid:&quot;</highlight><highlight class="normal">,<sp/>5)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guid<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uuid_parse<sp/>(guid,<sp/>uuid)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_register_file][EINVAL]<sp/>guid:%s:<sp/>Invalid<sp/>GUID&quot;</highlight><highlight class="normal">,<sp/>guid);</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;<sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>guid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfn<sp/>&amp;&amp;<sp/>strncmp<sp/>(lfn,<sp/></highlight><highlight class="stringliteral">&quot;lfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfn<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(purify_surl<sp/>(surl,<sp/>actual_surl,<sp/>GFAL_PATH_MAXLEN)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>0664;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islfc)<sp/>{</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lfc_register_file<sp/>(lfn,<sp/>guid,<sp/>actual_surl,<sp/>mode,<sp/>size,<sp/>bool_createonly,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isedg)<sp/>{</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_error(</highlight><highlight class="stringliteral">&quot;lrc<sp/>&amp;<sp/>rmc<sp/><sp/>support<sp/>removed,<sp/>impossible<sp/>to<sp/>use<sp/>temporarly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rmc<sp/>&amp;<sp/>lrc<sp/>removed<sp/>:<sp/>fix<sp/>it</highlight></codeline>
<codeline lineno="3128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*actual_lfn<sp/>=<sp/>NULL,<sp/>*actual_guid<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*generated_lfn<sp/>=<sp/>NULL,<sp/>*generated_guid<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3130"><highlight class="comment"></highlight></codeline>
<codeline lineno="3131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(lfn)<sp/>{</highlight></codeline>
<codeline lineno="3132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_guid<sp/>=<sp/>rmc_guidfromlfn<sp/>(lfn,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(guid<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>actual_guid<sp/>==<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(guid<sp/>=<sp/>generated_guid<sp/>=<sp/>gfal_generate_guid<sp/>(errbuf,<sp/>errbufsz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="3136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(actual_guid<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>(bool_createonly<sp/>||</highlight></codeline>
<codeline lineno="3137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(guid<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strncmp<sp/>(guid,<sp/>actual_guid,<sp/>GFAL_GUID_LEN)<sp/>!=0)))<sp/>{</highlight></codeline>
<codeline lineno="3138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;[GFAL][gfal_register_file][EEXIST]<sp/>lfn:%s:<sp/>file<sp/>already<sp/>exists&quot;,<sp/>lfn);</highlight></codeline>
<codeline lineno="3140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(actual_guid);</highlight></codeline>
<codeline lineno="3141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EEXIST;</highlight></codeline>
<codeline lineno="3142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="3143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(guid<sp/>==<sp/>NULL)<sp/><sp/><sp/>//<sp/>guid<sp/>==<sp/>NULL<sp/>and<sp/>actual_guid<sp/>!=<sp/>NULL</highlight></codeline>
<codeline lineno="3145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guid<sp/>=<sp/>actual_guid;</highlight></codeline>
<codeline lineno="3146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>case<sp/>guid<sp/>!=<sp/>NULL<sp/>and<sp/>actual_guid<sp/>==<sp/>NULL<sp/>below</highlight></codeline>
<codeline lineno="3147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(guid<sp/>&amp;&amp;<sp/>actual_guid<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>generated_guid<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>**lfns<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3150"><highlight class="comment"></highlight></codeline>
<codeline lineno="3151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfns<sp/>=<sp/>rmc_lfnsforguid<sp/>(guid,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="3152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(lfn<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>lfns<sp/>==<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lfn<sp/>=<sp/>generated_lfn<sp/>=<sp/>gfal_generate_lfn<sp/>(errbuf,<sp/>errbufsz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="3155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(lfns<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i,<sp/>bool_ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3157"><highlight class="comment"></highlight></codeline>
<codeline lineno="3158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_lfn<sp/>=<sp/>lfns[0];</highlight></codeline>
<codeline lineno="3159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>lfns[i];<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_ok<sp/>=<sp/>lfn<sp/>&amp;&amp;<sp/>strcmp<sp/>(lfn,<sp/>lfns[i])<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="3161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lfns[i]);</highlight></codeline>
<codeline lineno="3162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(lfns);</highlight></codeline>
<codeline lineno="3164"><highlight class="comment"></highlight></codeline>
<codeline lineno="3165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(bool_createonly<sp/>||<sp/>(lfn<sp/>&amp;&amp;<sp/>!bool_ok))<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;[GFAL][gfal_register_file][EEXIST]<sp/>guid:%s:<sp/>file<sp/>already<sp/>exists&quot;,<sp/>guid);</highlight></codeline>
<codeline lineno="3168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(actual_guid);</highlight></codeline>
<codeline lineno="3169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EEXIST;</highlight></codeline>
<codeline lineno="3170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="3171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3174"><highlight class="comment"></highlight></codeline>
<codeline lineno="3175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!actual_guid<sp/>&amp;&amp;<sp/>!actual_lfn<sp/>&amp;&amp;<sp/>lfn)<sp/>{</highlight></codeline>
<codeline lineno="3177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_WARN,<sp/>&quot;Registering<sp/>LFN:<sp/>lfn:%s<sp/>(guid:%s)&quot;,<sp/>lfn,<sp/>guid);</highlight></codeline>
<codeline lineno="3178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((rc<sp/>=<sp/>rmc_register_alias<sp/>(guid,<sp/>lfn,<sp/>errbuf,<sp/>errbufsz))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="3180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3181"><highlight class="comment"></highlight></codeline>
<codeline lineno="3182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(generated_lfn)<sp/>free<sp/>(generated_lfn);</highlight></codeline>
<codeline lineno="3183"><highlight class="comment"></highlight></codeline>
<codeline lineno="3184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(NULL,<sp/>0,<sp/>GFAL_ERRLEVEL_WARN,<sp/>&quot;Registering<sp/>SURL:<sp/>%s<sp/>(guid:%s)&quot;,<sp/>actual_surl,<sp/>guid);</highlight></codeline>
<codeline lineno="3186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>lrc<sp/>support<sp/>removed<sp/>:<sp/>fix<sp/>it<sp/>rc<sp/>=<sp/>lrc_register_pfn<sp/>(guid,<sp/>actual_surl,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="3187"><highlight class="comment"></highlight></codeline>
<codeline lineno="3188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rc<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>size<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>lrc_setfilesize<sp/>(actual_surl,<sp/>size,<sp/>errbuf,<sp/>errbufsz);</highlight></codeline>
<codeline lineno="3190"><highlight class="comment"></highlight></codeline>
<codeline lineno="3191"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="3192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3193"><highlight class="comment"></highlight></codeline>
<codeline lineno="3194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(actual_guid)<sp/>free<sp/>(actual_guid);</highlight></codeline>
<codeline lineno="3195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(generated_guid)<sp/>free<sp/>(generated_guid);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_register_file][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sav_errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>sav_errno;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rc);</highlight></codeline>
<codeline lineno="3204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal">register_alias<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==NULL)<sp/>{</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmc<sp/>removed<sp/>fix<sp/>it<sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="comment"></highlight></codeline>
<codeline lineno="3215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(rmc_register_alias<sp/>(guid,<sp/>lfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="3217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="3218"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lfc_register_alias<sp/>(guid,<sp/>lfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][register_alias][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal">unregister_alias<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cat_type;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>cat_type<sp/>=<sp/>gfal_get_cat_type(NULL)<sp/>)<sp/>==NULL)<sp/>{</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>fix<sp/>it,<sp/>rmc<sp/>removed<sp/><sp/><sp/>if<sp/>(strcmp<sp/>(cat_type,<sp/>&quot;edg&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(rmc_unregister_alias<sp/>(guid,<sp/>lfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="3239"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(cat_type,<sp/></highlight><highlight class="stringliteral">&quot;lfc&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lfc_unregister_alias<sp/>(guid,<sp/>lfn,<sp/>errbuf,<sp/>errbufsz));</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(cat_type);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][unregister_alias][EINVAL]<sp/>The<sp/>catalog<sp/>type<sp/>is<sp/>neither<sp/>&apos;edg&apos;<sp/>nor<sp/>&apos;lfc&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal">getdomainnm<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>namelen)</highlight></codeline>
<codeline lineno="3252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fd;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[300];</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p,<sp/>*q;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>fopen<sp/>(</highlight><highlight class="stringliteral">&quot;/etc/resolv.conf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets<sp/>(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(line),<sp/>fd)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(line,<sp/></highlight><highlight class="stringliteral">&quot;domain&quot;</highlight><highlight class="normal">,<sp/>6)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncmp<sp/>(line,<sp/></highlight><highlight class="stringliteral">&quot;search&quot;</highlight><highlight class="normal">,<sp/>6)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>line<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>||<sp/>*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose<sp/>(fd);</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>p<sp/>+<sp/>strlen<sp/>(p)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*q<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*q<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*q<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*q<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q++;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*q)</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen<sp/>(p)<sp/>&gt;<sp/>namelen)<sp/>{</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy<sp/>(name,<sp/>p);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose<sp/>(fd);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3289"><highlight class="normal">get_default_se(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vo;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_se;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>se_env[15<sp/>+<sp/>GFAL_VO_MAXLEN];</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((vo<sp/>=<sp/>gfal_get_vo<sp/>(errbuf,<sp/>errbufsz))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(vo)<sp/>&gt;=<sp/>GFAL_VO_MAXLEN)<sp/>{</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][get_default_se][EINVAL]<sp/>%s:<sp/>VO<sp/>name<sp/>too<sp/>long&quot;</highlight><highlight class="normal">,<sp/>vo);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(se_env,<sp/>15<sp/>+<sp/>GFAL_VO_MAXLEN,<sp/></highlight><highlight class="stringliteral">&quot;VO_%s_DEFAULT_SE&quot;</highlight><highlight class="normal">,<sp/>vo);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>3;<sp/>i<sp/>&lt;<sp/>3<sp/>+<sp/>strlen(vo);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(se_env[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>||<sp/>se_env[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>se_env[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>se_env[i]<sp/>=<sp/>toupper(se_env[i]);</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/>default_se<sp/>=<sp/>getenv(se_env);</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_se;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal">purify_surl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*surl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*surl_cat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>surl_cat_sz)<sp/>{</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p,*q,*r;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[1104];</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(surl<sp/>==<sp/>NULL<sp/>||<sp/>surl_cat<sp/>==<sp/>NULL<sp/>||<sp/>surl_cat_sz<sp/>&lt;<sp/>strlen<sp/>(surl))<sp/>{</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal_is_purifydisabled<sp/>()<sp/>||<sp/>strncmp<sp/>(surl,<sp/></highlight><highlight class="stringliteral">&quot;srm://&quot;</highlight><highlight class="normal">,<sp/>6))<sp/>{</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>SRM<sp/>SURL<sp/>need<sp/>to<sp/>be<sp/>purify<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(surl_cat,<sp/>surl,<sp/>surl_cat_sz);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy<sp/>(tmp,<sp/>surl,<sp/>1104);</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>index<sp/>(tmp+6,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>is<sp/>port<sp/>number<sp/>specified<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((q<sp/>=<sp/>index<sp/>(tmp+6,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r<sp/>=<sp/>strstr<sp/>(tmp+6,<sp/></highlight><highlight class="stringliteral">&quot;?SFN=&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>full<sp/>SURL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>full<sp/>SURL<sp/>and<sp/>no<sp/>port<sp/>number<sp/>:<sp/>nothing<sp/>to<sp/>remove<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(surl_cat,<sp/>tmp,<sp/>surl_cat_sz);</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>port<sp/>number<sp/>must<sp/>be<sp/>removed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(surl_cat,<sp/>surl_cat_sz,<sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>tmp,<sp/>q);</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>full<sp/>SURL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>port<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q<sp/>&lt;<sp/>r)</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*q<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(surl_cat,<sp/>surl_cat_sz,<sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>tmp,<sp/>r+5);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal">generate_surls<sp/>(gfal_internal<sp/>gfal,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/>uuid_t<sp/>uuid;</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>guid[GFAL_GUID_LEN];</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sa_path,<sp/>*sa_root;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vo,<sp/>*ce_ap,<sp/>*p,<sp/>*q;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dir_path[1104];</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>simple_ep[256];</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfal-&gt;surls<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)<sp/>calloc<sp/>(gfal-&gt;nbfiles,<sp/>sizeof<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((vo<sp/>=<sp/>gfal_get_vo<sp/>(errbuf,<sp/>errbufsz))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>create<sp/>dir<sp/>path<sp/>which<sp/>is<sp/>either<sp/>sa_path,<sp/>sa_root<sp/>or<sp/>combination<sp/>of<sp/>ce_ap<sp/>&amp;<sp/>sa_root</highlight></codeline>
<codeline lineno="3388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>First<sp/>we<sp/>need<sp/>the<sp/>hostname<sp/>(only)<sp/>of<sp/>the<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>strchr<sp/>(gfal-&gt;endpoint,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>At<sp/>that<sp/>point<sp/>we<sp/>need<sp/>to<sp/>determine<sp/>if<sp/>it<sp/>protocol<sp/>or<sp/>port<sp/>number...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(p<sp/>+<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>endpoint<sp/>begins<sp/>with<sp/>eg.<sp/>http://...,<sp/>so<sp/>it<sp/>must<sp/>be<sp/>removed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>strchr<sp/>(p<sp/>+<sp/>3,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>port<sp/>number<sp/>is<sp/>specified,<sp/>but<sp/>not<sp/>wanted<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(simple_ep,<sp/>p<sp/>+<sp/>3,<sp/>q<sp/>-<sp/>p<sp/>-<sp/>3);</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_ep[q<sp/>-<sp/>p<sp/>-<sp/>3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>port<sp/>number,<sp/>only<sp/>protocol<sp/>must<sp/>be<sp/>removed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(simple_ep,<sp/>p<sp/>+<sp/>3,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(simple_ep));</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>protocol,<sp/>only<sp/>port<sp/>number<sp/>must<sp/>be<sp/>removed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(simple_ep,<sp/>gfal-&gt;endpoint,<sp/>p<sp/>-<sp/>gfal-&gt;endpoint);</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_ep[p<sp/>-<sp/>gfal-&gt;endpoint]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>must<sp/>be<sp/>removed<sp/>(neither<sp/>protocol,<sp/>nor<sp/>port<sp/>number)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy<sp/>(simple_ep,<sp/>gfal-&gt;endpoint,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(simple_ep));</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_storage_path<sp/>(simple_ep,<sp/>gfal-&gt;srmv2_spacetokendesc,<sp/>&amp;sa_path,<sp/>&amp;sa_root,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa_path<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal-&gt;setype<sp/>==<sp/>TYPE_SE)<sp/>{</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(dir_path,<sp/>1103,<sp/></highlight><highlight class="stringliteral">&quot;sfn://%s%s%s/&quot;</highlight><highlight class="normal">,<sp/>simple_ep,<sp/>*sa_path==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>sa_path);</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(dir_path,<sp/>1103,<sp/></highlight><highlight class="stringliteral">&quot;srm://%s%s%s/&quot;</highlight><highlight class="normal">,<sp/>simple_ep,<sp/>*sa_path==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>sa_path);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>sa_root<sp/>!=<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal-&gt;setype<sp/>==<sp/>TYPE_SE)<sp/>{</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_ce_ap<sp/>(simple_ep,<sp/>&amp;ce_ap,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(dir_path,<sp/>1103,<sp/></highlight><highlight class="stringliteral">&quot;sfn://%s%s%s%s%s/&quot;</highlight><highlight class="normal">,<sp/>simple_ep,</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ce_ap==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>ce_ap,</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sa_root==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>sa_root);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(ce_ap);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(dir_path,<sp/>1103,<sp/></highlight><highlight class="stringliteral">&quot;srm://%s%s%s/&quot;</highlight><highlight class="normal">,<sp/>simple_ep,<sp/>*sa_root==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">,<sp/>sa_root);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa_path)<sp/>free<sp/>(sa_path);</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa_root)<sp/>free<sp/>(sa_root);</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal-&gt;relative_path<sp/>&amp;&amp;<sp/>gfal-&gt;nbfiles<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asprintf<sp/>(gfal-&gt;surls,<sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>dir_path,<sp/>gfal-&gt;relative_path);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal-&gt;relative_path<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>current_time;</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*tm;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>timestr[11];</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[25];</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>(&amp;current_time);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>localtime<sp/>(&amp;current_time);</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strftime<sp/>(timestr,<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;%F&quot;</highlight><highlight class="normal">,<sp/>tm);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf<sp/>(tmp,<sp/>24,<sp/></highlight><highlight class="stringliteral">&quot;generated/%s&quot;</highlight><highlight class="normal">,<sp/>timestr);</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncat<sp/>(dir_path,<sp/>tmp,<sp/>1103);</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>gfal-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uuid_generate<sp/>(uuid);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uuid_unparse<sp/>(uuid,<sp/>guid);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asprintf<sp/>(gfal-&gt;surls<sp/>+<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;%s/file%s&quot;</highlight><highlight class="normal">,<sp/>dir_path,<sp/>guid);</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>gfal-&gt;relative_path<sp/>&amp;&amp;<sp/>gfal-&gt;nbfiles<sp/>&gt;<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][generate_surls][EINVAL]<sp/>&apos;relative_path&apos;<sp/>is<sp/>not<sp/>compatible<sp/>with<sp/>multiple<sp/>files&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_request</highlight></codeline>
<codeline lineno="3464"><highlight class="normal">gfal_request_new<sp/>()</highlight></codeline>
<codeline lineno="3465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal_request<sp/>req;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req<sp/>=<sp/>(gfal_request)<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>gfal_request_)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(req,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>gfal_request_));</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(req);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><ref refid="group__srm__group_1g4e6d4aab98935aaf408d8a5cdf9727d4" kindref="member">gfal_init</ref><sp/>(gfal_request<sp/>req,<sp/>gfal_internal<sp/>*gfal,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**se_endpoints;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**se_types;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srmv1_endpoint<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srmv2_endpoint<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isclassicse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endpoint_offset=0;</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req<sp/>==<sp/>NULL<sp/>||<sp/>req-&gt;nbfiles<sp/>&lt;<sp/>0<sp/>||<sp/>(req-&gt;endpoint<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>req-&gt;surls<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>Endpoint<sp/>or<sp/>SURLs<sp/>must<sp/>be<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;oflag<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>req-&gt;filesizes<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>File<sp/>sizes<sp/>must<sp/>be<sp/>specified<sp/>for<sp/>put<sp/>requests&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_lslevels<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>srmv2_lslevels<sp/>must<sp/>be<sp/>0<sp/>or<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal<sp/>=<sp/>(gfal_internal)<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>gfal_internal_)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(*gfal,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>gfal_internal_));</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(*gfal,<sp/>req,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>gfal_request_));</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>default<sp/>SRM<sp/>timeout<sp/>if<sp/>not<sp/>specified<sp/>in<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*gfal)-&gt;timeout)</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;timeout<sp/>=<sp/><ref refid="group__common__group_1g31f524748949fca765e6fb8aa20ef41c" kindref="member">gfal_get_timeout_srm</ref><sp/>();</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;no_bdii_check)<sp/>{</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;surls<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>((*gfal)-&gt;setype<sp/>!=<sp/>TYPE_NONE<sp/>||</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*gfal)-&gt;setype<sp/>=<sp/>(*gfal)-&gt;defaultsetype)<sp/>!=<sp/>TYPE_NONE))<sp/>{</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_SE)<sp/>{</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>Disabling<sp/>BDII<sp/>checks<sp/>is<sp/>not<sp/>compatible<sp/>with<sp/>Classic<sp/>SEs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>!=<sp/>TYPE_SE<sp/>&amp;&amp;<sp/>(*gfal)-&gt;endpoint<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>((*gfal)-&gt;free_endpoint<sp/>=<sp/>1)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*gfal)-&gt;endpoint<sp/>=<sp/>endpointfromsurl<sp/>((*gfal)-&gt;surls[0],<sp/>errbuf,<sp/>errbufsz,<sp/>1))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>the<sp/>endpoint<sp/>is<sp/>full<sp/>or<sp/>not<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strncmp<sp/>((*gfal)-&gt;endpoint,<sp/>ENDPOINT_DEFAULT_PREFIX,<sp/>ENDPOINT_DEFAULT_PREFIX_LEN)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint_offset<sp/>=<sp/>ENDPOINT_DEFAULT_PREFIX_LEN;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint_offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>strchr<sp/>((*gfal)-&gt;endpoint<sp/>+<sp/>endpoint_offset,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>strchr<sp/>((*gfal)-&gt;endpoint<sp/>+<sp/>endpoint_offset,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*gfal)-&gt;setype<sp/>==<sp/>TYPE_SRMv2<sp/>&amp;&amp;<sp/>s<sp/>==<sp/>NULL)<sp/>||<sp/>p<sp/>==<sp/>NULL<sp/>||<sp/>(s<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>s<sp/>&lt;<sp/>p))<sp/>{</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>When<sp/>BDII<sp/>checks<sp/>are<sp/>disabled,<sp/>you<sp/>must<sp/>provide<sp/>full<sp/>endpoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>When<sp/>BDII<sp/>checks<sp/>are<sp/>disabled,<sp/>you<sp/>must<sp/>provide<sp/>SURLs<sp/>and<sp/>endpoint<sp/>types&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;endpoint<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(*gfal)-&gt;surls<sp/>!=<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;surls[0]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*gfal)-&gt;endpoint<sp/>=<sp/>endpointfromsurl<sp/>((*gfal)-&gt;surls[0],<sp/>errbuf,<sp/>errbufsz,<sp/>0))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;free_endpoint<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>You<sp/>have<sp/>to<sp/>specify<sp/>either<sp/>an<sp/>endpoint<sp/>or<sp/>at<sp/>least<sp/>one<sp/>SURL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strchr<sp/>((*gfal)-&gt;endpoint,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>No<sp/>domain<sp/>name<sp/>specified<sp/>for<sp/>storage<sp/>element<sp/>endpoint&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setypesandendpoints<sp/>((*gfal)-&gt;endpoint,<sp/>&amp;se_types,<sp/>&amp;se_endpoints,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(se_types[i])<sp/>{</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv1_endpoint<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>strcmp<sp/>(se_types[i],<sp/></highlight><highlight class="stringliteral">&quot;srm_v1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srmv1_endpoint<sp/>=<sp/>se_endpoints[i];</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>strcmp<sp/>(se_types[i],<sp/></highlight><highlight class="stringliteral">&quot;srm_v2&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srmv2_endpoint<sp/>=<sp/>se_endpoints[i];</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_endpoints[i]);</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strcmp<sp/>(se_types[i],<sp/></highlight><highlight class="stringliteral">&quot;disk&quot;</highlight><highlight class="normal">))<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isclassicse<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(se_types[i]);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(se_types);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(se_endpoints);</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;surls<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strncmp<sp/>((*gfal)-&gt;surls[0],<sp/></highlight><highlight class="stringliteral">&quot;sfn:&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(isclassicse<sp/>||<sp/>srmv1_endpoint<sp/>||<sp/>srmv2_endpoint))<sp/>{</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>surls<sp/>start<sp/>with<sp/>sfn:,<sp/>we<sp/>force<sp/>the<sp/>SE<sp/>type<sp/>to<sp/>classic<sp/>SE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_SE;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv1_endpoint)<sp/>free<sp/>(srmv1_endpoint);</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint)<sp/>free<sp/>(srmv2_endpoint);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>srmv2<sp/>is<sp/>the<sp/>default<sp/>if<sp/>nothing<sp/>specified<sp/>by<sp/>user!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_NONE)<sp/>{</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*gfal)-&gt;defaultsetype<sp/>==<sp/>TYPE_NONE<sp/>||<sp/>(*gfal)-&gt;defaultsetype<sp/>==<sp/>TYPE_SRMv2<sp/>||</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*gfal)-&gt;defaultsetype<sp/>==<sp/>TYPE_SRM<sp/>&amp;&amp;<sp/>!srmv1_endpoint)))<sp/>{</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_SRMv2;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*gfal)-&gt;srmv2_spacetokendesc<sp/>&amp;&amp;<sp/>!(*gfal)-&gt;srmv2_desiredpintime<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(*gfal)-&gt;srmv2_lslevels<sp/>&amp;&amp;<sp/>!(*gfal)-&gt;srmv2_lsoffset<sp/>&amp;&amp;<sp/>!(*gfal)-&gt;srmv2_lscount)<sp/>{</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv1_endpoint<sp/>&amp;&amp;<sp/>(*gfal)-&gt;defaultsetype<sp/>!=<sp/>TYPE_SE)</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_SRM;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint<sp/>||<sp/>srmv1_endpoint<sp/>||<sp/>isclassicse)</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_SE;</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_SRMv2<sp/>&amp;&amp;<sp/>!srmv2_endpoint)<sp/>{</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_NONE;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;srmv2_spacetokendesc<sp/>||<sp/>(*gfal)-&gt;srmv2_desiredpintime<sp/>||</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;srmv2_lslevels<sp/>||<sp/>(*gfal)-&gt;srmv2_lsoffset<sp/>||<sp/>(*gfal)-&gt;srmv2_lscount)<sp/>{</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_NONE;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_SRM<sp/>&amp;&amp;<sp/>!srmv1_endpoint)</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_NONE;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_SE<sp/>&amp;&amp;<sp/>!srmv2_endpoint<sp/>&amp;&amp;<sp/>!srmv1_endpoint<sp/>&amp;&amp;<sp/>!isclassicse)</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;setype<sp/>=<sp/>TYPE_NONE;</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_SRMv2)<sp/>{</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;free_endpoint)<sp/>free<sp/>((*gfal)-&gt;endpoint);</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;endpoint<sp/>=<sp/>srmv2_endpoint;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;free_endpoint<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv1_endpoint)<sp/>free<sp/>(srmv1_endpoint);</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;free_endpoint)<sp/>free<sp/>((*gfal)-&gt;endpoint);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;endpoint<sp/>=<sp/>srmv1_endpoint;</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*gfal)-&gt;free_endpoint<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint)<sp/>free<sp/>(srmv2_endpoint);</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;setype<sp/>==<sp/>TYPE_NONE)<sp/>{</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>Desired<sp/>SE<sp/>type<sp/>doesn&apos;t<sp/>match<sp/>request<sp/>parameters<sp/>or<sp/>SE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv1_endpoint)<sp/>free<sp/>(srmv1_endpoint);</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_endpoint)<sp/>free<sp/>(srmv2_endpoint);</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;generatesurls)<sp/>{</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*gfal)-&gt;surls<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(generate_surls<sp/>(*gfal,<sp/>errbuf,<sp/>errbufsz)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_init][EINVAL]<sp/>Invalid<sp/>request:<sp/>No<sp/>SURLs<sp/>must<sp/>be<sp/>specified<sp/>with<sp/>&apos;generatesurls&apos;<sp/>activated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_internal_free<sp/>(*gfal);</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*gfal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal">check_gfal_internal<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allow_null_surls,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req<sp/>==<sp/>NULL<sp/>||<sp/>req-&gt;setype<sp/>==<sp/>TYPE_NONE<sp/>||<sp/>(!allow_null_surls<sp/>&amp;&amp;<sp/>req-&gt;surls<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(req-&gt;setype<sp/>!=<sp/>TYPE_SE<sp/>&amp;&amp;<sp/>req-&gt;endpoint<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][check_gfal_internal][EINVAL]<sp/>Invalid<sp/>gfal_internal<sp/>argument&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal">free_gfal_results<sp/>(gfal_filestatus<sp/>*gfal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].surl)<sp/>{</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(gfal[i].surl);</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].surl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].turl)<sp/>{</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(gfal[i].turl);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].turl<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].explanation)<sp/>{</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(gfal[i].explanation);</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].explanation<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].checksumtype)<sp/>{</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(gfal[i].checksumtype);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].checksumtype<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].checksum)<sp/>{</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(gfal[i].checksum);</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].checksum<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].subpaths)<sp/>{</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_gfal_results<sp/>(gfal[i].subpaths,<sp/>gfal[i].nbsubpaths);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].subpaths<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].nbspacetokens<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>gfal[i].spacetokens)<sp/>{</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>gfal[i].nbspacetokens;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal[i].spacetokens[j])<sp/>{</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(gfal[i].spacetokens[j]);</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].spacetokens[j]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(gfal[i].spacetokens);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal[i].spacetokens<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(gfal);</highlight></codeline>
<codeline lineno="3750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal">free_srmv2_mdstatuses<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_mdfilestatus<sp/>*md,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="3754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md[i].subpaths)<sp/>{</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_srmv2_mdstatuses<sp/>(md[i].subpaths,<sp/>md[i].nbsubpaths);</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>md[i].subpaths<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(md);</highlight></codeline>
<codeline lineno="3765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal">copy_gfal_mdresults<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srmv2_mdfilestatus<sp/>srmv2,<sp/>gfal_filestatus<sp/>*gfal)</highlight></codeline>
<codeline lineno="3769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>srmv2.nbsubpaths;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;surl<sp/>=<sp/>srmv2.surl;</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;stat<sp/>=<sp/>srmv2.stat;</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;status<sp/>=<sp/>srmv2.status;</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;explanation<sp/>=<sp/>srmv2.explanation;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;nbsubpaths<sp/>=<sp/>srmv2.nbsubpaths;</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;locality<sp/>=<sp/>srmv2.locality;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;checksumtype<sp/>=<sp/>srmv2.checksumtype;</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;checksum<sp/>=<sp/>srmv2.checksum;</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;nbspacetokens<sp/>=<sp/>srmv2.nbspacetokens;</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/>gfal-&gt;spacetokens<sp/>=<sp/>srmv2.spacetokens;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gfal-&gt;nbsubpaths<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gfal-&gt;subpaths<sp/>=<sp/>(gfal_filestatus<sp/>*)<sp/>calloc<sp/>(gfal-&gt;nbsubpaths,<sp/>sizeof<sp/>(gfal_filestatus)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_gfal_mdresults<sp/>(srmv2.subpaths[i],<sp/>gfal-&gt;subpaths<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal">copy_gfal_results<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>status_type<sp/>stype)</highlight></codeline>
<codeline lineno="3800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;returncode<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(req-&gt;returncode);</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;results<sp/>&amp;&amp;<sp/>req-&gt;results_size<sp/>!=<sp/>req-&gt;returncode)<sp/>{</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_gfal_results<sp/>(req-&gt;results,<sp/>req-&gt;results_size);</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!req-&gt;results<sp/>&amp;&amp;<sp/>req-&gt;returncode<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results_size<sp/>=<sp/>req-&gt;returncode;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((req-&gt;results<sp/>=<sp/>(gfal_filestatus<sp/>*)<sp/>calloc<sp/>(req-&gt;results_size,<sp/>sizeof<sp/>(gfal_filestatus)))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;results_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;results[i].surl)</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;results[i].surl);</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;results[i].turl)</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;results[i].turl);</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;results[i].explanation)</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;results[i].explanation);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;results[i].checksumtype)</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;results[i].checksumtype);</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;results[i].checksum)</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;results[i].checksum);</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(req-&gt;results[i].subpaths)<sp/>{</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_gfal_results<sp/>(req-&gt;results[i].subpaths,<sp/>req-&gt;results[i].nbsubpaths);</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].subpaths<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(req-&gt;results<sp/>+<sp/>i,<sp/>0,<sp/>sizeof<sp/>(gfal_filestatus));</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRMv2)<sp/>{</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stype<sp/>==<sp/>DEFAULT_STATUS)<sp/>{</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].surl<sp/>=<sp/>req-&gt;srmv2_statuses[i].surl;</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].turl<sp/>=<sp/>req-&gt;srmv2_statuses[i].turl;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].status<sp/>=<sp/>req-&gt;srmv2_statuses[i].status;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].explanation<sp/>=<sp/>req-&gt;srmv2_statuses[i].explanation;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stype<sp/>==<sp/>MD_STATUS)<sp/>{</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_gfal_mdresults<sp/>(req-&gt;srmv2_mdstatuses[i],<sp/>req-&gt;results<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>stype<sp/>==<sp/>PIN_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].surl<sp/>=<sp/>req-&gt;srmv2_pinstatuses[i].surl;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].turl<sp/>=<sp/>req-&gt;srmv2_pinstatuses[i].turl;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].status<sp/>=<sp/>req-&gt;srmv2_pinstatuses[i].status;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].explanation<sp/>=<sp/>req-&gt;srmv2_pinstatuses[i].explanation;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].pinlifetime<sp/>=<sp/>req-&gt;srmv2_pinstatuses[i].pinlifetime;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SRM)<sp/>{</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stype<sp/>==<sp/>MD_STATUS)<sp/>{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].surl<sp/>=<sp/>req-&gt;srm_mdstatuses[i].surl;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].stat<sp/>=<sp/>req-&gt;srm_mdstatuses[i].stat;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].status<sp/>=<sp/>req-&gt;srm_mdstatuses[i].status;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>stype<sp/>==<sp/>DEFAULT_STATUS<sp/>or<sp/>PIN_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].surl<sp/>=<sp/>req-&gt;srm_statuses[i].surl;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].turl<sp/>=<sp/>req-&gt;srm_statuses[i].turl;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].status<sp/>=<sp/>req-&gt;srm_statuses[i].status;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;setype<sp/>==<sp/>TYPE_SE)<sp/>{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stype<sp/>==<sp/>MD_STATUS)<sp/>{</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sfn_getfilemd<sp/>uses<sp/>srmv2_mdstatuses<sp/>field!!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_gfal_mdresults<sp/>(req-&gt;srmv2_mdstatuses[i],<sp/>req-&gt;results<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].surl<sp/>=<sp/>req-&gt;sfn_statuses[i].surl;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].turl<sp/>=<sp/>req-&gt;sfn_statuses[i].turl;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results[i].status<sp/>=<sp/>req-&gt;sfn_statuses[i].status;</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal">gfal_get_results<sp/>(gfal_internal<sp/>req,<sp/>gfal_filestatus<sp/>**results)</highlight></codeline>
<codeline lineno="3881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req<sp/>==<sp/>NULL<sp/>||<sp/>req-&gt;results<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*results<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/>*results<sp/>=<sp/>req-&gt;results;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(req-&gt;results_size);</highlight></codeline>
<codeline lineno="3889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal">gfal_get_ids<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*srm_reqid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**srm_fileids,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**srmv2_reqtoken)</highlight></codeline>
<codeline lineno="3893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gfal_get_ids_setype<sp/>(req,<sp/>NULL,<sp/>srm_reqid,<sp/>srm_fileids,<sp/>srmv2_reqtoken));</highlight></codeline>
<codeline lineno="3895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal">gfal_get_ids_setype<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>se_type<sp/>*type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*srm_reqid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**srm_fileids,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**srmv2_reqtoken)</highlight></codeline>
<codeline lineno="3899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srm_reqid)<sp/>*srm_reqid<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srm_fileids)<sp/>*srm_fileids<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_reqtoken)<sp/>*srmv2_reqtoken<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"></highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req<sp/>==<sp/>NULL<sp/>||<sp/>req-&gt;results_size<sp/>&lt;<sp/>1<sp/>||<sp/>req-&gt;setype<sp/>==<sp/>TYPE_NONE)</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/>NULL)<sp/>*type<sp/>=<sp/>req-&gt;setype;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>SRMv1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srm_reqid)<sp/>*srm_reqid<sp/>=<sp/>req-&gt;srm_reqid;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srm_fileids)<sp/><sp/>{</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*srm_fileids<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>calloc<sp/>(req-&gt;results_size,<sp/>sizeof<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;results_size;<sp/>++i)</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*srm_fileids)[i]<sp/>=<sp/>req-&gt;srm_statuses[i].fileid;</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_token<sp/>&amp;&amp;<sp/>srmv2_reqtoken)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>SRMv2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*srmv2_reqtoken<sp/>=<sp/>strdup<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(req-&gt;results_size);</highlight></codeline>
<codeline lineno="3927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"></highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal">gfal_set_ids<sp/>(gfal_internal<sp/>req,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbfileids,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*srm_fileids,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srm_reqid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*srmv2_reqtoken,</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)</highlight></codeline>
<codeline lineno="3932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req<sp/>==<sp/>NULL<sp/>||<sp/>req-&gt;nbfiles<sp/>&lt;<sp/>0<sp/>||<sp/>(srm_fileids<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>srmv2_reqtoken<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_set_ids][EINVAL]<sp/>Invalid<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbfileids<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>srm_fileids)<sp/>{</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbfileids<sp/>!=<sp/>req-&gt;nbfiles)<sp/>{</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_set_ids][EINVAL]<sp/>mismatch<sp/>between<sp/>number<sp/>of<sp/>fileids<sp/>and<sp/>number<sp/>of<sp/>files&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!req-&gt;srm_statuses)<sp/>{</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">srm_filestatus<sp/>*)<sp/>calloc<sp/>(req-&gt;nbfiles,<sp/>sizeof<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srm_filestatus));</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!req-&gt;srm_statuses)</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_reqid<sp/>=<sp/>srm_reqid;</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses[i].fileid<sp/>=<sp/>srm_fileids[i];</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srmv2_reqtoken)<sp/>{</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>strdup<sp/>(srmv2_reqtoken);</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!req-&gt;srmv2_token)</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(-1);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="3966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal">gfal_internal_free<sp/>(gfal_internal<sp/>req)</highlight></codeline>
<codeline lineno="3970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;free_endpoint<sp/>&amp;&amp;<sp/>req-&gt;endpoint)<sp/>{</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;endpoint);</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;endpoint<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;sfn_statuses)<sp/>{</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;sfn_statuses);</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;sfn_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_statuses)<sp/>{</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srm_statuses);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srm_mdstatuses)<sp/>{</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srm_mdstatuses);</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srm_mdstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_token)<sp/>{</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_token);</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_token<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_statuses)<sp/>{</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_statuses);</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_statuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_pinstatuses)<sp/>{</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;srmv2_pinstatuses);</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_pinstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"></highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;srmv2_mdstatuses)<sp/>{</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_srmv2_mdstatuses<sp/>(req-&gt;srmv2_mdstatuses,<sp/>req-&gt;results_size);</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;srmv2_mdstatuses<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;results)<sp/>{</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_gfal_results<sp/>(req-&gt;results,<sp/>req-&gt;results_size);</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;results<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;generatesurls<sp/>&amp;&amp;<sp/>req-&gt;surls)<sp/>{</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>req-&gt;nbfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(req-&gt;surls[i])<sp/>{</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;surls[i]);</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;surls[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(req-&gt;surls);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req-&gt;surls<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"></highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(req);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal">gfal_spacemd_free<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbtokens,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>srm_spacemd<sp/>*smd)</highlight></codeline>
<codeline lineno="4036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smd<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbtokens;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smd[i].spacetoken)<sp/>{</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(smd[i].spacetoken);</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smd[i].spacetoken<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smd[i].owner)<sp/>{</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(smd[i].owner);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smd[i].owner<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(smd);</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/>smd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><ref refid="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" kindref="member">gfal_version</ref><sp/>()</highlight></codeline>
<codeline lineno="4060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gfalversion;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><ref refid="group__common__group_1g267920b468d7578c10aa25469f8cadf7" kindref="member">gfal_set_nobdii</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="4066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/>nobdii<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4071"><highlight class="normal">gfal_is_nobdii<sp/>()</highlight></codeline>
<codeline lineno="4072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nobdii);</highlight></codeline>
<codeline lineno="4074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4077"><highlight class="normal">gfal_generate_lfn<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)<sp/>{</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str_uuid[GFAL_GUID_LEN];</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/>uuid_t<sp/>uuid;</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>current_time;</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*tm;</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>timestr[11];</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn<sp/>=<sp/>NULL,<sp/>*vo<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>(&amp;current_time);</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>localtime<sp/>(&amp;current_time);</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/>strftime<sp/>(timestr,<sp/>11,<sp/></highlight><highlight class="stringliteral">&quot;%F&quot;</highlight><highlight class="normal">,<sp/>tm);</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/>uuid_generate<sp/>(uuid);</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/>uuid_unparse<sp/>(uuid,<sp/>str_uuid);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((vo<sp/>=<sp/>gfal_get_vo<sp/>(errbuf,<sp/>errbufsz))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/>asprintf<sp/>(&amp;lfn,<sp/></highlight><highlight class="stringliteral">&quot;/grid/%s/generated/%s/file-%s&quot;</highlight><highlight class="normal">,<sp/>vo,<sp/>timestr,<sp/>str_uuid);</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lfn);</highlight></codeline>
<codeline lineno="4096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4099"><highlight class="normal">gfal_generate_guid<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)<sp/>{</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str_uuid[GFAL_GUID_LEN];</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>uuid_t<sp/>uuid;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>uuid_generate<sp/>(uuid);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/>uuid_unparse<sp/>(uuid,<sp/>str_uuid);</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(strdup<sp/>(str_uuid));</highlight></codeline>
<codeline lineno="4106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><ref refid="group__internal__group_1gfbe1d2da151f9bd6a0ab1ec1abf0ac81" kindref="member">gfal_get_hostname</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz)<sp/>{</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*start;</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp;</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sav_path[GFAL_PATH_MAXLEN];</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(sav_path,<sp/>path);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"></highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>strchr<sp/>(sav_path,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>start<sp/>==<sp/>NULL<sp/>||<sp/>*(start+1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>||<sp/>*(start+2)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_errmsg<sp/>(errbuf,<sp/>errbufsz,<sp/>GFAL_ERRLEVEL_ERROR,<sp/></highlight><highlight class="stringliteral">&quot;[GFAL][gfal_get_hostname][EINVAL]<sp/>%s:<sp/>Invalid<sp/>syntax&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>start<sp/>to<sp/>beginning<sp/>of<sp/>hostname<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cp<sp/>=<sp/>start;<sp/>*cp<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*cp<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*cp<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;<sp/>cp++)<sp/>;</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>*cp;</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>strdup<sp/>(start))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOMEM;</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/>*cp<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>to<sp/>allow<sp/>users<sp/>to<sp/>access<sp/>errno<sp/>value<sp/>with<sp/>python<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal">gfal_get_errno<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(errno);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/gfal.c"/>
  </compounddef>
</doxygen>
