<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal__posix__api_8h" kind="file">
    <compoundname>gfal_posix_api.h</compoundname>
    <includes refid="gfal__common_8h" local="yes">../common/gfal_common.h</includes>
    <includes refid="gfal__constants_8h" local="yes">../common/gfal_constants.h</includes>
    <includes refid="gfal__types_8h" local="yes">gfal_types.h</includes>
    <includes local="no">glib.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">dlfcn.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">dirent.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includedby refid="gfal__posix_8c" local="yes">/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c</includedby>
    <incdepgraph>
      <node id="1426">
        <label>sys/stat.h</label>
      </node>
      <node id="1436">
        <label>stdarg.h</label>
      </node>
      <node id="1451">
        <label>../gfal_common.h</label>
      </node>
      <node id="1456">
        <label>lber.h</label>
      </node>
      <node id="1445">
        <label>gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1449">
        <label>voms/gfal_voms_if.h</label>
        <link refid="gfal__voms__if_8h-source"/>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
      </node>
      <node id="1453">
        <label>stdlib.h</label>
      </node>
      <node id="1442">
        <label>gfal_common_errverbose.h</label>
        <link refid="gfal__common__errverbose_8h"/>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
      </node>
      <node id="1432">
        <label>errno.h</label>
      </node>
      <node id="1460">
        <label>fcntl.h</label>
      </node>
      <node id="1457">
        <label>ldap.h</label>
      </node>
      <node id="1441">
        <label>gfal_common_storage.h</label>
        <link refid="gfal__common__storage_8h-source"/>
        <childnode refid="1422" relation="include">
        </childnode>
      </node>
      <node id="1427">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="1452">
        <label>mds/gfal_common_mds.h</label>
        <link refid="gfal__common__mds_8h-source"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
      </node>
      <node id="1437">
        <label>uuid/uuid.h</label>
      </node>
      <node id="1444">
        <label>gfal_common_srm.h</label>
        <link refid="gfal__common__srm_8h"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1445" relation="include">
        </childnode>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
      </node>
      <node id="1421">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h</label>
        <link refid="gfal_posix_api.h"/>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
        <childnode refid="1426" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
      </node>
      <node id="1448">
        <label>gfal_file.h</label>
        <link refid="gfal__file_8h-source"/>
      </node>
      <node id="1424">
        <label>sys/types.h</label>
      </node>
      <node id="1433">
        <label>string.h</label>
      </node>
      <node id="1435">
        <label>lfc_api.h</label>
      </node>
      <node id="1434">
        <label>lfc/lfc_ifce.h</label>
        <link refid="lfc__ifce_8h-source"/>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1435" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1428">
        <label>unistd.h</label>
      </node>
      <node id="1439">
        <label>lfc_ifce_ng.h</label>
        <link refid="lfc__ifce__ng_8h"/>
        <childnode refid="1438" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
      </node>
      <node id="1429">
        <label>glib.h</label>
      </node>
      <node id="1458">
        <label>ServiceDiscovery.h</label>
      </node>
      <node id="1447">
        <label>time.h</label>
      </node>
      <node id="1422">
        <label>../common/gfal_common.h</label>
        <link refid="gfal__common_8h"/>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1431" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1442" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
      </node>
      <node id="1455">
        <label>sys/time.h</label>
      </node>
      <node id="1454">
        <label>ctype.h</label>
      </node>
      <node id="1459">
        <label>gfal_srm_ifce.h</label>
      </node>
      <node id="1431">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
      </node>
      <node id="1430">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="1450">
        <label>voms_apic.h</label>
      </node>
      <node id="1446">
        <label>regex.h</label>
      </node>
      <node id="1443">
        <label>stdio.h</label>
      </node>
      <node id="1423">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
        <childnode refid="1426" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
      </node>
      <node id="1438">
        <label>lfc/gfal_common_lfc.h</label>
        <link refid="gfal__common__lfc_8h"/>
        <childnode refid="1431" relation="include">
        </childnode>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1435" relation="include">
        </childnode>
      </node>
      <node id="1440">
        <label>dlfcn.h</label>
      </node>
      <node id="1425">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1462">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c</label>
        <link refid="gfal__posix_8c"/>
      </node>
      <node id="1461">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h</label>
        <link refid="gfal_posix_api.h"/>
        <childnode refid="1462" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__posix__group_1g33d6a4a93117a6c07405aa6ac0d42122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_access</definition>
        <argsstring>(const char *, int)</argsstring>
        <name>gfal_access</name>
        <param>
          <type>const char *</type>
          <defname>path</defname>
        </param>
        <param>
          <type>int</type>
          <defname>amode</defname>
        </param>
        <briefdescription>
<para>test access to the given file </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>can be in supported protocols lfn, srm, file, tftp </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately <linebreak/>
<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>ENOENT: The named file/directory does not exist.</para></listitem><listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="53" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="32" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gdfeeecb2052d81e65bcc09903655991b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_chmod</definition>
        <argsstring>(const char *, mode_t)</argsstring>
        <name>gfal_chmod</name>
        <param>
          <type>const char *</type>
          <defname>path</defname>
        </param>
        <param>
          <type>mode_t</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
<para>set rights of the file/dir </para>        </briefdescription>
        <detaileddescription>
<para>changes access mode of the file/directory path according to the bit pattern in mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the file name (this can only be a TURL in the current implementation). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the bit pattern is built by an OR of the constants defined in &lt;sys/stat.h&gt;. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately <linebreak/>
<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>ENOENT: The named file/directory does not exist.</para></listitem><listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="71" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="194" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g83b88bd27def4c4e2fdfea3c5bbf88b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_close</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_close</name>
        <param>
          <type>int</type>
          <defname>fd</defname>
        </param>
        <briefdescription>
<para>close the current file descriptor </para>        </briefdescription>
        <detaileddescription>
<para>close the file whose descriptor fd is the one returned by gfal_open. <simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately.<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>EBADF: fd is not a valid file descriptor</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="83" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="221" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g1c97c21d23c919b2647f17bbc8b79db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_closedir</definition>
        <argsstring>(DIR *)</argsstring>
        <name>gfal_closedir</name>
        <param>
          <type>DIR *</type>
          <defname>dir</defname>
        </param>
        <briefdescription>
<para>gfal_closedir - close a directory </para>        </briefdescription>
        <detaileddescription>
<para>gfal_closedir closes the directory opened by gfal_opendir and associated with the DIR structure pointed by dirp <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns 0 if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately.</para></simplesect>
<itemizedlist>
<listitem><para>ERRORS : -EBADF :File descriptor in DIR structure is invalid.<itemizedlist>
<listitem><para>ECOMM : Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT : Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="96" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="261" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g5fcdc6f3e7911787be049e20b6ab19b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_creat</definition>
        <argsstring>(const char *, mode_t)</argsstring>
        <name>gfal_creat</name>
        <param>
          <type>const char *</type>
          <defname>filename</defname>
        </param>
        <param>
          <type>mode_t</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
<para>creates a new file or truncates an existing one </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the file name: either a logical file name, a guid, an SURL or a TURL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>is used only if the file is created </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns a write-only file descriptor if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>ENOENT: The named file/directory does not exist.</para></listitem><listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>EBUSY: Device or resource busy. Happens if you try to open in write mode a CASTOR file that is in an active migration stream</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="113" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g48783e60cafa1a3bf9aa2170b99f9b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_creat64</definition>
        <argsstring>(const char *, mode_t)</argsstring>
        <name>gfal_creat64</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>mode_t</type>
        </param>
        <briefdescription>
<para>same as create for large file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="117" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g8ba4e1df5f2e6439641c56f245d5ce73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>off_t</type>
        <definition>off_t gfal_lseek</definition>
        <argsstring>(int, off_t, int)</argsstring>
        <name>gfal_lseek</name>
        <param>
          <type>int</type>
          <defname>fd</defname>
        </param>
        <param>
          <type>off_t</type>
          <defname>offset</defname>
        </param>
        <param>
          <type>int</type>
          <defname>whence</defname>
        </param>
        <briefdescription>
<para>gfal_lseek - position a file </para>        </briefdescription>
        <detaileddescription>
<para>gfal_lseek positions/repositions to offset the file associated with the descriptor fd generated by a previous gfal_open. whence indicates how to interpret the offset value:</para><para><itemizedlist>
<listitem><para>SEEK_SET The offset is set from beginning of file.</para></listitem><listitem><para>SEEK_CUR The offset is added to current position.</para></listitem><listitem><para>SEEK_END The offset is added to current file size.</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>This routine returns the actual offset from the beginning of the file if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately.<itemizedlist>
<listitem><para>ERRORS :<itemizedlist>
<listitem><para>EBADF fd is not a valid file descriptor.</para></listitem><listitem><para>EINVAL incorrect value for whence.</para></listitem><listitem><para>EFBIG Resulting offset is too big to fit in off_t.</para></listitem><listitem><para>ECOMM Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT Access method not supported.</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
gfal_lseek64 performs the same function on large files using off64_t rather than off_t. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="145" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="295" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g6f6affcf386900efc5443a9c97556a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_mkdir</definition>
        <argsstring>(const char *, mode_t)</argsstring>
        <name>gfal_mkdir</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>mode_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="147" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="323" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g6a431a0bdd01baf8cadbdcaa98b1c622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_open</definition>
        <argsstring>(const char *, int, mode_t)</argsstring>
        <name>gfal_open</name>
        <param>
          <type>const char *</type>
          <defname>filename</defname>
        </param>
        <param>
          <type>int</type>
          <defname>flags</defname>
        </param>
        <param>
          <type>mode_t</type>
          <defname>mode</defname>
        </param>
        <briefdescription>
<para>opens a file according to the value of flags </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies the file name: either a logical file name, a guid, an SURL or a TURL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>value is built by OR’ing the bits defined in &lt;fcntl.h&gt; but one and only one of the first three flags below must be used<itemizedlist>
<listitem><para>O_RDONLY open for reading only<itemizedlist>
<listitem><para>O_WRONLY open for writing only</para></listitem></itemizedlist>
</para></listitem><listitem><para>O_RDWR open for reading and writing<itemizedlist>
<listitem><para>O_CREAT If the file exists already and O_EXCL is also set, gfal_open will fail.</para></listitem><listitem><para>O_LARGEFILE allows files whose sizes cannot be represented in 31 bits to be opened </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>usef only if file is created </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This routine returns the file descriptor if the operation was successful or -1 if the operation failed. In the latter case, errno is set appropriately<itemizedlist>
<listitem><para>ERRNO list : <linebreak/>
<itemizedlist>
<listitem><para>EACCES: Search permission is denied on a component of the path prefix or specified access to the file itself is denied.</para></listitem><listitem><para>EFAULT: path is a NULL pointer.</para></listitem><listitem><para>ENOTDIR: A component of path prefix is not a directory.</para></listitem><listitem><para>EINVAL: path has an invalid syntax or amode is invalid.</para></listitem><listitem><para>ECOMM: Communication error.</para></listitem><listitem><para>EPROTONOSUPPORT: Access method not supported. </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="167" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="414" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gbed417acea7f862ea1977417ed842ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_open64</definition>
        <argsstring>(const char *, int, mode_t)</argsstring>
        <name>gfal_open64</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>mode_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="169" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="607" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g004ad5efbd544da820823e597e57be92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DIR *</type>
        <definition>DIR* gfal_opendir</definition>
        <argsstring>(const char *)</argsstring>
        <name>gfal_opendir</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="171" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="613" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gaa6bfe36f33b86e489b798aed96912de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_read</definition>
        <argsstring>(int, void *, size_t)</argsstring>
        <name>gfal_read</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="173" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="689" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g2a8ed205f7748d7817a18521268a1f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>dirent *</type>
        <definition>struct dirent* gfal_readdir</definition>
        <argsstring>(DIR *)</argsstring>
        <name>gfal_readdir</name>
        <param>
          <type>DIR *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="175" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="704" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g34dc6129530d6bf9e5836ef22c0d2792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_rename</definition>
        <argsstring>(const char *, const char *)</argsstring>
        <name>gfal_rename</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="177" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="734" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gcc4b6347640a722674c2d6df437490df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_rmdir</definition>
        <argsstring>(const char *)</argsstring>
        <name>gfal_rmdir</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="179" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="819" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g45a23756f2c79a7e07488bb3fb2fc35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_setfilchg</definition>
        <argsstring>(int, const void *, size_t)</argsstring>
        <name>gfal_setfilchg</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="181" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common.c" bodystart="217" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gdeb4c6cc47f507da3e3b498374e308fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_unlink</definition>
        <argsstring>(const char *)</argsstring>
        <name>gfal_unlink</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="183" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1098" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g00c2d64894ae81c05846b06c84727ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_write</definition>
        <argsstring>(int, const void *, size_t)</argsstring>
        <name>gfal_write</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="185" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1255" bodyend="1269"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g39c7d0b6d366fdb0f218439ed3c3bb37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>off64_t</type>
        <definition>off64_t gfal_lseek64</definition>
        <argsstring>(int, off64_t, int)</argsstring>
        <name>gfal_lseek64</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>off64_t</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="196" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="309" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g347f867802a33bc04fdfb769da857103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lstat</definition>
        <argsstring>(const char *, struct stat *)</argsstring>
        <name>gfal_lstat</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>struct stat *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="199" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1064" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g739ca4985a67e0fc4fc253f42df2638c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lstat64</definition>
        <argsstring>(const char *, struct stat64 *)</argsstring>
        <name>gfal_lstat64</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>struct stat64 *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="202" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1085" bodyend="1094"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1g1d8c86d522d5dd26ee7ddcd9c6925964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_stat</definition>
        <argsstring>(const char *, struct stat *)</argsstring>
        <name>gfal_stat</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>struct stat *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="205" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1029" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="group__posix__group_1gb40e2d23618763284ab4a1fb1a06a880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_stat64</definition>
        <argsstring>(const char *, struct stat64 *)</argsstring>
        <name>gfal_stat64</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>struct stat64 *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="208" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1050" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gfal_version</definition>
        <argsstring>()</argsstring>
        <name>gfal_version</name>
        <briefdescription>
<para>return a string of the current gfal_version define at the compilation time </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="217" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1409" bodyend="1411"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g331e181c2fadd801321ad43033835052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_verbose</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_verbose</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>set the verbose global level </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>: { GFAL_VERBOSE_QUIET , GFAL_VERBOSE_NORMAL  , GFAL_VERBOSE_VERBOSE  , GFAL_VERBOSE_DEBUG  } </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="222" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_errverbose.c" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1gcf4ae9045b7e5a2a697b1bb1f05994a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_set_vo</definition>
        <argsstring>(const char *vo)</argsstring>
        <name>gfal_set_vo</name>
        <param>
          <type>const char *</type>
          <declname>vo</declname>
        </param>
        <briefdescription>
<para>set the vo used by gfal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="226" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common.c" bodystart="140" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g267920b468d7578c10aa25469f8cadf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_nobdii</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_nobdii</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
<para>define if bdii System is ignored or not </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>0 for False else true </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="231" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1413" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g62f544258aa58af5122f40f0eb1a7c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_connect</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_connect</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>change the default timeout </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="235" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="34" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g63ec5d282f39173b678ecad2d60a4a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_connect</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_connect</name>
        <briefdescription>
<para>get the current timeout default value : 60 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="240" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1gedd91bb343f17bc2c0ba9db1203f1819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_sendreceive</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_sendreceive</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the value for the send/receive timeout </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="244" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g198564ca7617a8f3dec7c6b925b2c760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_sendreceive</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_sendreceive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the value for the send/receive timeout default value : 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="249" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g7fc461515a2cdf649fd516319cb54ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_bdii</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_bdii</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the timeout for the bdii queries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="253" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g676f0d746479f2c9893609854099d614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_bdii</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_bdii</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the current the timeout for the bdii queries defautl value : 60 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="258" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1gc0dac1437f150d4b5b8779f456050bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gfal_set_timeout_srm</definition>
        <argsstring>(int)</argsstring>
        <name>gfal_set_timeout_srm</name>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the timeout for the SRM queries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="262" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g31f524748949fca765e6fb8aa20ef41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_timeout_srm</definition>
        <argsstring>()</argsstring>
        <name>gfal_get_timeout_srm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the timeout for the SRM queries default value : 3600 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="267" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_timeouts.c" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g11dd2ec58a632427ae12b710006c15a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gfal_get_checksum_algname</definition>
        <argsstring>(enum gfal_cksm_type)</argsstring>
        <name>gfal_get_checksum_algname</name>
        <param>
          <type>enum</type>
          <declname>gfal_cksm_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="270" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_checksum.c" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="group__common__group_1g0ac1b12c9af897b63173fd73043e1669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum gfal_cksm_type</type>
        <definition>enum gfal_cksm_type gfal_parse_checksum_algname</definition>
        <argsstring>(const char *)</argsstring>
        <name>gfal_parse_checksum_algname</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="272" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_checksum.c" bodystart="45" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__internal__group_1g0d2a0557bdb571ccb85c6ab5c05ae56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_is_nobdii</definition>
        <argsstring>()</argsstring>
        <name>gfal_is_nobdii</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h" line="274" bodyfile="/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c" bodystart="1417" bodyend="1419"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&quot;../common/gfal_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common/gfal_constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__posix__group_1g33d6a4a93117a6c07405aa6ac0d42122" kindref="member">gfal_access</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__posix__group_1gdfeeecb2052d81e65bcc09903655991b" kindref="member">gfal_chmod</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__posix__group_1g83b88bd27def4c4e2fdfea3c5bbf88b4" kindref="member">gfal_close</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__posix__group_1g1c97c21d23c919b2647f17bbc8b79db2" kindref="member">gfal_closedir</ref><sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__posix__group_1g5fcdc6f3e7911787be049e20b6ab19b8" kindref="member">gfal_creat</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__posix__group_1g48783e60cafa1a3bf9aa2170b99f9b08" kindref="member">gfal_creat64</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">off_t<sp/><ref refid="group__posix__group_1g8ba4e1df5f2e6439641c56f245d5ce73" kindref="member">gfal_lseek</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>off_t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_mkdir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="167"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__posix__group_1g6a431a0bdd01baf8cadbdcaa98b1c622" kindref="member">gfal_open</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>mode_t);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_open64<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>mode_t);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">DIR<sp/>*gfal_opendir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">ssize_t<sp/>gfal_read<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>size_t);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*gfal_readdir<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_rename<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_rmdir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">ssize_t<sp/>gfal_setfilchg<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>size_t);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_unlink<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">ssize_t<sp/>gfal_write<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>size_t);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(linux)<sp/>||<sp/>defined(sun)</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*gfal_readdir<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(linux)<sp/>||<sp/>defined(_LARGEFILE64_SOURCE)</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">off64_t<sp/>gfal_lseek64<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>off64_t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lstat<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lstat64<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_stat<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat<sp/>*);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_stat64<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(linux)<sp/>||<sp/>defined(sun)</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent64<sp/>*gfal_readdir64<sp/>(DIR<sp/>*);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" kindref="member">gfal_version</ref><sp/>();</highlight></codeline>
<codeline lineno="222"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g331e181c2fadd801321ad43033835052" kindref="member">gfal_set_verbose</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1gcf4ae9045b7e5a2a697b1bb1f05994a8" kindref="member">gfal_set_vo</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vo);</highlight></codeline>
<codeline lineno="231"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g267920b468d7578c10aa25469f8cadf7" kindref="member">gfal_set_nobdii</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g62f544258aa58af5122f40f0eb1a7c92" kindref="member">gfal_set_timeout_connect</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g63ec5d282f39173b678ecad2d60a4a6f" kindref="member">gfal_get_timeout_connect</ref><sp/>();</highlight></codeline>
<codeline lineno="244"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1gedd91bb343f17bc2c0ba9db1203f1819" kindref="member">gfal_set_timeout_sendreceive</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g198564ca7617a8f3dec7c6b925b2c760" kindref="member">gfal_get_timeout_sendreceive</ref><sp/>();</highlight></codeline>
<codeline lineno="253"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g7fc461515a2cdf649fd516319cb54ea9" kindref="member">gfal_set_timeout_bdii</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g676f0d746479f2c9893609854099d614" kindref="member">gfal_get_timeout_bdii</ref><sp/>();</highlight></codeline>
<codeline lineno="262"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1gc0dac1437f150d4b5b8779f456050bec" kindref="member">gfal_set_timeout_srm</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="267"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__common__group_1g31f524748949fca765e6fb8aa20ef41c" kindref="member">gfal_get_timeout_srm</ref><sp/>();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*gfal_get_checksum_algname<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_cksm_type);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_cksm_type<sp/>gfal_parse_checksum_algname<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_is_nobdii<sp/>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/posix/gfal_posix_api.h"/>
  </compounddef>
</doxygen>
