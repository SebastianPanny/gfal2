<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal__dcap__plugin__bindings_8h" kind="file">
    <compoundname>gfal_dcap_plugin_bindings.h</compoundname>
    <includes local="no">regex.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">glib.h</includes>
    <includes refid="gfal__common__internal_8h" local="yes">../gfal_common_internal.h</includes>
    <includes refid="gfal__common__errverbose_8h" local="yes">../gfal_common_errverbose.h</includes>
    <includes refid="gfal__common__plugin_8h" local="yes">../gfal_common_plugin.h</includes>
    <includes refid="gfal__common__filedescriptor_8h" local="yes">../gfal_common_filedescriptor.h</includes>
    <includes refid="gfal__types_8h" local="yes">../gfal_types.h</includes>
    <includedby refid="gfal__dcap__plugin__bindings_8c" local="yes">/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c</includedby>
    <includedby refid="gfal__dcap__plugin__main_8c" local="yes">/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_main.c</includedby>
    <incdepgraph>
      <node id="59">
        <label>sys/stat.h</label>
      </node>
      <node id="62">
        <label>gfal_common_plugin_interface.h</label>
        <link refid="gfal__common__plugin__interface_8h-source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>stdarg.h</label>
      </node>
      <node id="60">
        <label>attr/xattr.h</label>
      </node>
      <node id="53">
        <label>../gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>stdlib.h</label>
      </node>
      <node id="63">
        <label>../gfal_common_errverbose.h</label>
        <link refid="gfal__common__errverbose_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>gfal_prototypes.h</label>
        <link refid="gfal__prototypes_8h-source"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>errno.h</label>
      </node>
      <node id="49">
        <label>/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h</label>
        <link refid="gfal_dcap_plugin_bindings.h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>../gfal_common_plugin.h</label>
        <link refid="gfal__common__plugin_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>pthread.h</label>
      </node>
      <node id="57">
        <label>sys/types.h</label>
      </node>
      <node id="66">
        <label>string.h</label>
      </node>
      <node id="71">
        <label>../gfal_common_filedescriptor.h</label>
        <link refid="gfal__common__filedescriptor_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>unistd.h</label>
      </node>
      <node id="52">
        <label>glib.h</label>
      </node>
      <node id="51">
        <label>time.h</label>
      </node>
      <node id="69">
        <label>gfal_common_parameter.h</label>
        <link refid="gfal__common__parameter_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h"/>
      </node>
      <node id="50">
        <label>regex.h</label>
      </node>
      <node id="65">
        <label>stdio.h</label>
      </node>
      <node id="55">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="74">
        <label>/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_main.c</label>
        <link refid="gfal__dcap__plugin__main_8c"/>
      </node>
      <node id="73">
        <label>/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h</label>
        <link refid="gfal_dcap_plugin_bindings.h"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_1aa3aeba8d12df0e1bccf4c9d55e861d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gfal_file_handle</type>
        <definition>gfal_file_handle gfal_dcap_openG</definition>
        <argsstring>(plugin_handle handle, const char *path, int flag, mode_t mode, GError **err)</argsstring>
        <name>gfal_dcap_openG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="36" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="49" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_17b02aa108cf1bdf9a513296aafe8e3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_dcap_readG</definition>
        <argsstring>(plugin_handle handle, gfal_file_handle fd, void *buff, size_t s_buff, GError **err)</argsstring>
        <name>gfal_dcap_readG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gfal_file_handle</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>map to the libdcap read call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="38" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_1f3aaa22187350f38d20b3942855cc25f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_dcap_preadG</definition>
        <argsstring>(plugin_handle handle, gfal_file_handle fd, void *buff, size_t s_buff, off_t offset, GError **err)</argsstring>
        <name>gfal_dcap_preadG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gfal_file_handle</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>map to the libdcap pread call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="40" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_184333bd96611b21fa9902eb531ef6750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t gfal_dcap_pwriteG</definition>
        <argsstring>(plugin_handle handle, gfal_file_handle fd, const void *buff, size_t s_buff, off_t offset, GError **err)</argsstring>
        <name>gfal_dcap_pwriteG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gfal_file_handle</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>map to the libdcap pwrite call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="42" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_1ed23542fec7eaa9fff4a7493f8f20c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_dcap_lseekG</definition>
        <argsstring>(plugin_handle handle, gfal_file_handle fd, off_t offset, int whence, GError **err)</argsstring>
        <name>gfal_dcap_lseekG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gfal_file_handle</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="44" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="103" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_1d2beb991ac311ca0ebd8699d25767310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_dcap_writeG</definition>
        <argsstring>(plugin_handle handle, gfal_file_handle fd, void *buff, size_t s_buff, GError **err)</argsstring>
        <name>gfal_dcap_writeG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gfal_file_handle</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="46" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="113" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_15f4c48b5bf4af90b3f54393696363156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_dcap_closeG</definition>
        <argsstring>(plugin_handle handle, gfal_file_handle fd, GError **err)</argsstring>
        <name>gfal_dcap_closeG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>gfal_file_handle</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="48" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_11432f90cc46fd3e6f104d2b8012fda70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_dcap_statG</definition>
        <argsstring>(plugin_handle handle, const char *name, struct stat *buff, GError **err)</argsstring>
        <name>gfal_dcap_statG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="50" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_136d8e8e38035f7e294c2f8d53cfae849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_dcap_lstatG</definition>
        <argsstring>(plugin_handle handle, const char *name, struct stat *buff, GError **err)</argsstring>
        <name>gfal_dcap_lstatG</name>
        <param>
          <type>plugin_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>struct stat *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="52" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="146" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="gfal__dcap__plugin__bindings_8h_1dc5bce296fc1e2af5b7ce0584c49bad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* gfal_dcap_getName</definition>
        <argsstring>()</argsstring>
        <name>gfal_dcap_getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h" line="54" bodyfile="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.c" bodystart="156" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&lt;regex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_common_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_common_errverbose.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_common_plugin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_common_filedescriptor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">gfal_file_handle<sp/>gfal_dcap_openG(plugin_handle<sp/>handle<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag,<sp/>mode_t<sp/>mode,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_dcap_readG(plugin_handle<sp/>handle<sp/>,<sp/>gfal_file_handle<sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/>size_t<sp/>s_buff,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">ssize_t<sp/>gfal_dcap_preadG(plugin_handle<sp/>handle<sp/>,<sp/>gfal_file_handle<sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/>size_t<sp/>s_buff,<sp/>off_t<sp/>offset,<sp/><sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">ssize_t<sp/>gfal_dcap_pwriteG(plugin_handle<sp/>handle<sp/>,<sp/>gfal_file_handle<sp/>fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/>size_t<sp/>s_buff,<sp/>off_t<sp/>offset,<sp/><sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_dcap_lseekG(plugin_handle<sp/>handle<sp/>,<sp/>gfal_file_handle<sp/>fd,<sp/>off_t<sp/>offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whence,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_dcap_writeG(plugin_handle<sp/>handle<sp/>,<sp/>gfal_file_handle<sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/>size_t<sp/>s_buff,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_dcap_closeG(plugin_handle<sp/>handle,<sp/>gfal_file_handle<sp/>fd,<sp/>GError<sp/>**<sp/>err);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_dcap_statG(plugin_handle<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>buff,<sp/>GError<sp/>**<sp/>err);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_dcap_lstatG(plugin_handle<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>buff,<sp/>GError<sp/>**<sp/>err);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>gfal_dcap_getName();</highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/common/dcap/gfal_dcap_plugin_bindings.h"/>
  </compounddef>
</doxygen>
