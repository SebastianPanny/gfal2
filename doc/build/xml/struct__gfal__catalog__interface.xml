<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="struct__gfal__catalog__interface" kind="struct" prot="public">
    <compoundname>_gfal_catalog_interface</compoundname>
    <includes refid="gfal__common__catalog_8h" local="no">gfal_common_catalog.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct__gfal__catalog__interface_121ece9deeb92b4182cf5fe09e174d6c5" prot="public" static="no" mutable="no">
        <type>catalog_handle</type>
        <definition>catalog_handle _gfal_catalog_interface::handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="80" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1a76db9e70bcd22d79d2a40a12049cea9" prot="public" static="no" mutable="no">
        <type>const char *(*</type>
        <definition>const char*(* _gfal_catalog_interface::getName)()</definition>
        <argsstring>)()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="82"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_15eb6aff7c054d09bcd584dfdc8a3d88e" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* _gfal_catalog_interface::catalog_delete)(catalog_handle)</definition>
        <argsstring>)(catalog_handle)</argsstring>
        <name>catalog_delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Called before the destruction of the catalog interface </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="86"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_13e21f3370e47099122b156472e25f6a7" prot="public" static="no" mutable="no">
        <type>gboolean(*</type>
        <definition>gboolean(* _gfal_catalog_interface::check_catalog_url)(catalog_handle, const char *url, catalog_mode mode, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *url, catalog_mode mode, GError **err)</argsstring>
        <name>check_catalog_url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check the url syntax and the operation, return TRUE if the operation is compatible with the plugin, else FALSE. THIS function MUST be implemented in EACH plugin. <simplesect kind="warning"><para>This function is a key function of GFAL 2.0, It MUST be as fast as possible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="92"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1c4ca96a6e83a9d3e906563771bf648f1" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::accessG)(catalog_handle, const char *path, int mode, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *path, int mode, GError **err)</argsstring>
        <name>accessG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>access function for the access for the normal associated url </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="96"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1a2d423528930c419615115f14911238e" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::chmodG)(catalog_handle, const char *, mode_t, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *, mode_t, GError **err)</argsstring>
        <name>chmodG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function pointer for the access using the guid url </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="100"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_13ff4627bf8b55f2a650e03e2be21637a" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::renameG)(catalog_handle, const char *, const char *, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *, const char *, GError **err)</argsstring>
        <name>renameG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="101"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_11cff8d0398d6f5fbbd74d4bbfb88a84b" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::symlinkG)(catalog_handle, const char *, const char *, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *, const char *, GError **err)</argsstring>
        <name>symlinkG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="102"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1c93cfe7bbdd166977a30c0821188256d" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::statG)(catalog_handle, const char *, struct stat *buf, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *, struct stat *buf, GError **err)</argsstring>
        <name>statG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="103"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_129c3519fdaa2768abc5b0ca8d5b1b278" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::lstatG)(catalog_handle, const char *, struct stat *buf, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *, struct stat *buf, GError **err)</argsstring>
        <name>lstatG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="104"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_17ff4623ecf8fd8c5cd5055c20506b5c5" prot="public" static="no" mutable="no">
        <type>ssize_t(*</type>
        <definition>ssize_t(* _gfal_catalog_interface::readlinkG)(catalog_handle, const char *, char *buff, size_t buffsiz, GError **)</definition>
        <argsstring>)(catalog_handle, const char *, char *buff, size_t buffsiz, GError **)</argsstring>
        <name>readlinkG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="105"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_174779ad5f9b964d6de25aa8968654b6f" prot="public" static="no" mutable="no">
        <type>gfal_file_handle(*</type>
        <definition>gfal_file_handle(* _gfal_catalog_interface::opendirG)(catalog_handle, const char *, GError **)</definition>
        <argsstring>)(catalog_handle, const char *, GError **)</argsstring>
        <name>opendirG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="108"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1110fb04c3d951be3d863f8976076f6a0" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::closedirG)(catalog_handle, gfal_file_handle, GError **)</definition>
        <argsstring>)(catalog_handle, gfal_file_handle, GError **)</argsstring>
        <name>closedirG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="109"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1d8223fb7b6916160c58777204cf44166" prot="public" static="no" mutable="no">
        <type>dirent *(*</type>
        <definition>struct dirent*(* _gfal_catalog_interface::readdirG)(catalog_handle, gfal_file_handle, GError **)</definition>
        <argsstring>)(catalog_handle, gfal_file_handle, GError **)</argsstring>
        <name>readdirG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="110"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1929e31cec058fd3af2b35925d138fce4" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::mkdirpG)(catalog_handle, const char *, mode_t, gboolean pflag, GError **)</definition>
        <argsstring>)(catalog_handle, const char *, mode_t, gboolean pflag, GError **)</argsstring>
        <name>mkdirpG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="111"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1bcfed6ce5edc988e207fdedce2249ca4" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::rmdirG)(catalog_handle, const char *, GError **)</definition>
        <argsstring>)(catalog_handle, const char *, GError **)</argsstring>
        <name>rmdirG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="112"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1f13314d48d829c5a00688e53798740d6" prot="public" static="no" mutable="no">
        <type>gfal_file_handle(*</type>
        <definition>gfal_file_handle(* _gfal_catalog_interface::openG)(catalog_handle, const char *path, int flag, mode_t mode, GError **)</definition>
        <argsstring>)(catalog_handle, const char *path, int flag, mode_t mode, GError **)</argsstring>
        <name>openG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="115"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_106de34e63362030b21d7c543e2098a6e" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::readG)(catalog_handle, gfal_file_handle fd, void *buff, size_t count, GError **)</definition>
        <argsstring>)(catalog_handle, gfal_file_handle fd, void *buff, size_t count, GError **)</argsstring>
        <name>readG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="116"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_16b6ac4cdc442e6682aa75a65e2f01094" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::writeG)(catalog_handle, gfal_file_handle fd, void *buff, size_t count, GError **)</definition>
        <argsstring>)(catalog_handle, gfal_file_handle fd, void *buff, size_t count, GError **)</argsstring>
        <name>writeG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="117"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_101f3c7263f9650b83328df65821a7fe8" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::closeG)(catalog_handle, gfal_file_handle fd, GError **)</definition>
        <argsstring>)(catalog_handle, gfal_file_handle fd, GError **)</argsstring>
        <name>closeG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="118"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_17f66631bd2d7919666ea9383e55c5837" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::lseekG)(catalog_handle, gfal_file_handle fd, off_t offset, int whence, GError **err)</definition>
        <argsstring>)(catalog_handle, gfal_file_handle fd, off_t offset, int whence, GError **err)</argsstring>
        <name>lseekG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="119"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_11fc0c9cbd8821484dc6d2532ebdc2b28" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::unlinkG)(catalog_handle, const char *path, GError **)</definition>
        <argsstring>)(catalog_handle, const char *path, GError **)</argsstring>
        <name>unlinkG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="122"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_18d6974ac822e7360db9ec11f88aa787d" prot="public" static="no" mutable="no">
        <type>ssize_t(*</type>
        <definition>ssize_t(* _gfal_catalog_interface::getxattrG)(catalog_handle, const char *, const char *, void *buff, size_t s_buff, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *, const char *, void *buff, size_t s_buff, GError **err)</argsstring>
        <name>getxattrG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="125"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_133b6ee495d6dbdf44097eab70094953f" prot="public" static="no" mutable="no">
        <type>ssize_t(*</type>
        <definition>ssize_t(* _gfal_catalog_interface::listxattrG)(catalog_handle, const char *, char *list, size_t s_list, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *, char *list, size_t s_list, GError **err)</argsstring>
        <name>listxattrG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="126"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_18a79a58a74fb3f7e4da85247d60d0323" prot="public" static="no" mutable="no">
        <type>char **(*</type>
        <definition>char**(* _gfal_catalog_interface::getSURLG)(catalog_handle, const char *, GError **)</definition>
        <argsstring>)(catalog_handle, const char *, GError **)</argsstring>
        <name>getSURLG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="128"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_1f2664982e4ee83af2145ea7e190f1169" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::getTURLG)(catalog_handle, const char *surl, char *buff_turl, int size_turl, char **reqtoken, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *surl, char *buff_turl, int size_turl, char **reqtoken, GError **err)</argsstring>
        <name>getTURLG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="129"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_119227139e261ebb890bff5d22c20322a" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* _gfal_catalog_interface::putTURLG)(catalog_handle, const char *surl, char *buff_turl, int size_turl, char **reqtoken, GError **err)</definition>
        <argsstring>)(catalog_handle, const char *surl, char *buff_turl, int size_turl, char **reqtoken, GError **err)</argsstring>
        <name>putTURLG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="130"/>
      </memberdef>
      <memberdef kind="variable" id="struct__gfal__catalog__interface_103064e4d29e97a4017d6a0797bfc6c77" prot="public" static="no" mutable="no">
        <type>char *(*</type>
        <definition>char*(* _gfal_catalog_interface::resolve_guid)(catalog_handle handle, const char *guid, GError **err)</definition>
        <argsstring>)(catalog_handle handle, const char *guid, GError **err)</argsstring>
        <name>resolve_guid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a valid url if is able to resolve the guid or return NULL pointer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface to implement in each gfal_plugin_* the needed calls are : getName, catalog_delete, check_catalog_url </para>    </detaileddescription>
    <location file="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" line="78" bodyfile="/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" bodystart="78" bodyend="136"/>
    <listofallmembers>
      <member refid="struct__gfal__catalog__interface_1c4ca96a6e83a9d3e906563771bf648f1" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>accessG</name></member>
      <member refid="struct__gfal__catalog__interface_15eb6aff7c054d09bcd584dfdc8a3d88e" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>catalog_delete</name></member>
      <member refid="struct__gfal__catalog__interface_13e21f3370e47099122b156472e25f6a7" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>check_catalog_url</name></member>
      <member refid="struct__gfal__catalog__interface_1a2d423528930c419615115f14911238e" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>chmodG</name></member>
      <member refid="struct__gfal__catalog__interface_1110fb04c3d951be3d863f8976076f6a0" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>closedirG</name></member>
      <member refid="struct__gfal__catalog__interface_101f3c7263f9650b83328df65821a7fe8" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>closeG</name></member>
      <member refid="struct__gfal__catalog__interface_1a76db9e70bcd22d79d2a40a12049cea9" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>getName</name></member>
      <member refid="struct__gfal__catalog__interface_18a79a58a74fb3f7e4da85247d60d0323" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>getSURLG</name></member>
      <member refid="struct__gfal__catalog__interface_1f2664982e4ee83af2145ea7e190f1169" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>getTURLG</name></member>
      <member refid="struct__gfal__catalog__interface_18d6974ac822e7360db9ec11f88aa787d" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>getxattrG</name></member>
      <member refid="struct__gfal__catalog__interface_121ece9deeb92b4182cf5fe09e174d6c5" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>handle</name></member>
      <member refid="struct__gfal__catalog__interface_133b6ee495d6dbdf44097eab70094953f" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>listxattrG</name></member>
      <member refid="struct__gfal__catalog__interface_17f66631bd2d7919666ea9383e55c5837" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>lseekG</name></member>
      <member refid="struct__gfal__catalog__interface_129c3519fdaa2768abc5b0ca8d5b1b278" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>lstatG</name></member>
      <member refid="struct__gfal__catalog__interface_1929e31cec058fd3af2b35925d138fce4" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>mkdirpG</name></member>
      <member refid="struct__gfal__catalog__interface_174779ad5f9b964d6de25aa8968654b6f" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>opendirG</name></member>
      <member refid="struct__gfal__catalog__interface_1f13314d48d829c5a00688e53798740d6" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>openG</name></member>
      <member refid="struct__gfal__catalog__interface_119227139e261ebb890bff5d22c20322a" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>putTURLG</name></member>
      <member refid="struct__gfal__catalog__interface_1d8223fb7b6916160c58777204cf44166" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>readdirG</name></member>
      <member refid="struct__gfal__catalog__interface_106de34e63362030b21d7c543e2098a6e" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>readG</name></member>
      <member refid="struct__gfal__catalog__interface_17ff4623ecf8fd8c5cd5055c20506b5c5" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>readlinkG</name></member>
      <member refid="struct__gfal__catalog__interface_13ff4627bf8b55f2a650e03e2be21637a" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>renameG</name></member>
      <member refid="struct__gfal__catalog__interface_103064e4d29e97a4017d6a0797bfc6c77" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>resolve_guid</name></member>
      <member refid="struct__gfal__catalog__interface_1bcfed6ce5edc988e207fdedce2249ca4" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>rmdirG</name></member>
      <member refid="struct__gfal__catalog__interface_1c93cfe7bbdd166977a30c0821188256d" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>statG</name></member>
      <member refid="struct__gfal__catalog__interface_11cff8d0398d6f5fbbd74d4bbfb88a84b" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>symlinkG</name></member>
      <member refid="struct__gfal__catalog__interface_11fc0c9cbd8821484dc6d2532ebdc2b28" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>unlinkG</name></member>
      <member refid="struct__gfal__catalog__interface_16b6ac4cdc442e6682aa75a65e2f01094" prot="public" virt="non-virtual"><scope>_gfal_catalog_interface</scope><name>writeG</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
