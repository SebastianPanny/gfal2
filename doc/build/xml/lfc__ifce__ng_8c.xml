<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="lfc__ifce__ng_8c" kind="file">
    <compoundname>lfc_ifce_ng.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">dlfcn.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="gfal__constants_8h" local="yes">../gfal_constants.h</includes>
    <includes refid="gfal__types_8h" local="yes">gfal_types.h</includes>
    <includes refid="gfal__common__mds_8h" local="yes">../mds/gfal_common_mds.h</includes>
    <includes refid="gfal__common__interface_8h" local="yes">gfal_common_interface.h</includes>
    <includes refid="lfc__ifce__ng_8h" local="yes">lfc_ifce_ng.h</includes>
    <includes refid="gfal__common__errverbose_8h" local="yes">gfal_common_errverbose.h</includes>
    <incdepgraph>
      <node id="984">
        <label>sys/stat.h</label>
      </node>
      <node id="988">
        <label>stdarg.h</label>
      </node>
      <node id="978">
        <label>stdlib.h</label>
      </node>
      <node id="995">
        <label>gfal_common_errverbose.h</label>
        <link refid="gfal__common__errverbose_8h"/>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
      </node>
      <node id="986">
        <label>gfal_prototypes.h</label>
        <link refid="gfal__prototypes_8h-source"/>
        <childnode refid="982" relation="include">
        </childnode>
      </node>
      <node id="973">
        <label>errno.h</label>
      </node>
      <node id="985">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="990">
        <label>../mds/gfal_common_mds.h</label>
        <link refid="gfal__common__mds_8h-source"/>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
      </node>
      <node id="989">
        <label>uuid/uuid.h</label>
      </node>
      <node id="976">
        <label>sys/types.h</label>
      </node>
      <node id="992">
        <label>gfal_common_interface.h</label>
        <link refid="gfal__common__interface_8h"/>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
      </node>
      <node id="975">
        <label>string.h</label>
      </node>
      <node id="994">
        <label>lfc_api.h</label>
      </node>
      <node id="981">
        <label>unistd.h</label>
      </node>
      <node id="972">
        <label>/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c</label>
        <link refid="lfc_ifce_ng.c"/>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
      </node>
      <node id="993">
        <label>lfc_ifce_ng.h</label>
        <link refid="lfc__ifce__ng_8h"/>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
      </node>
      <node id="982">
        <label>glib.h</label>
      </node>
      <node id="991">
        <label>ServiceDiscovery.h</label>
      </node>
      <node id="987">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
      </node>
      <node id="979">
        <label>../gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="974">
        <label>stdio.h</label>
      </node>
      <node id="980">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
      </node>
      <node id="983">
        <label>dirent.h</label>
      </node>
      <node id="977">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="lfc__ifce__ng_8c_153abf256730d533302d1910e5fb61efe" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="27" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lfc__ifce__ng_8c_174cbac9029a516b4ae28199debf71835" prot="public" static="no">
        <name>GFAL_LFN_MAX_LEN</name>
        <initializer>2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="28" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lfc__ifce__ng_8c_17e367164af6045af1f60565f1c0c37eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gfal_lfc_startSession</definition>
        <argsstring>(struct lfc_ops *ops, GError **err)</argsstring>
        <name>gfal_lfc_startSession</name>
        <param>
          <type>struct lfc_ops *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="44" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_14911a4424f9aba0f2ca908701afb043a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gfal_lfc_startTransaction</definition>
        <argsstring>(struct lfc_ops *ops, GError **err)</argsstring>
        <name>gfal_lfc_startTransaction</name>
        <param>
          <type>struct lfc_ops *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="54" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_18b9c0cae84c858d9904a3069a2a938d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gfal_lfc_endTransaction</definition>
        <argsstring>(struct lfc_ops *ops, GError **err)</argsstring>
        <name>gfal_lfc_endTransaction</name>
        <param>
          <type>struct lfc_ops *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="64" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_1d93410b11a513fa363099e6efc0987e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gfal_lfc_abortTransaction</definition>
        <argsstring>(struct lfc_ops *ops, GError **err)</argsstring>
        <name>gfal_lfc_abortTransaction</name>
        <param>
          <type>struct lfc_ops *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="75" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_19a5b8e8e30853b920e3bbe41062e1d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_get_lfchost_envar</definition>
        <argsstring>(GError **err)</argsstring>
        <name>gfal_get_lfchost_envar</name>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="85" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="85" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_1b2b09ed24820a7815bfa4f2057d4831b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gfal_define_lfc_env_var</definition>
        <argsstring>(char *lfc_host, GError **err)</argsstring>
        <name>gfal_define_lfc_env_var</name>
        <param>
          <type>char *</type>
          <declname>lfc_host</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="112" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="112" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_1c4daecd5aa0938a99eb86c367a0050f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_convert_guid_to_lfn</definition>
        <argsstring>(catalog_handle handle, char *guid, GError **err)</argsstring>
        <name>gfal_convert_guid_to_lfn</name>
        <param>
          <type>catalog_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert a guid to a lfn link with a call to the lfclib <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gfal</parametername>
</parameternamelist>
<parameterdescription>
<para>handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>of the guid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>: Error report system </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: string of the lfn if success or NULL char* if error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="139" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="139" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_15d13dc09e91f66d74de768c2e4bf4872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gfal_setup_lfchost</definition>
        <argsstring>(gfal_handle handle, GError **err)</argsstring>
        <name>gfal_setup_lfchost</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setup the lfc_host correctly for the lfc calls <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>GError report system if </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string of the endpoint, need to be free or NULL if error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="164" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="164" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_17c91643749a2c5d7e8043c0e42d00fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lfc_ops *</type>
        <definition>struct lfc_ops* gfal_load_lfc</definition>
        <argsstring>(const char *name, GError **err)</argsstring>
        <name>gfal_load_lfc</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load the shared library and link the symbol for the LFC usage <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>: name of the library </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>error report </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="202" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="202" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_179cceda78f871c9bd8568a636dd31206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lfc_convert_statg</definition>
        <argsstring>(struct stat *output, struct lfc_filestatg *input, GError **err)</argsstring>
        <name>gfal_lfc_convert_statg</name>
        <param>
          <type>struct stat *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct lfc_filestatg *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="246" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="246" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_116e8d4c4177c6e1d39c1850f06042f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lfc_convert_lstat</definition>
        <argsstring>(struct stat *output, struct lfc_filestat *input, GError **err)</argsstring>
        <name>gfal_lfc_convert_lstat</name>
        <param>
          <type>struct stat *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>struct lfc_filestat *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="263" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="263" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_199f899901f228d37f290f23a19398012" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int gfal_lfc_mkdir</definition>
        <argsstring>(struct lfc_ops *ops, const char *path, mode_t mode, GError **err)</argsstring>
        <name>gfal_lfc_mkdir</name>
        <param>
          <type>struct lfc_ops *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>basic wrapper mkdir to the lfc api </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="281" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="281" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_10d7c361d951ac79fee504d5125485033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lfc_mkdir_rec</definition>
        <argsstring>(struct lfc_ops *ops, char *browser_path, const char *full_path, mode_t mode, GError **err)</argsstring>
        <name>gfal_lfc_mkdir_rec</name>
        <param>
          <type>struct lfc_ops *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>browser_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>full_path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Begin a recursive call on mkdir to create a full tree path <simplesect kind="warning"><para>not safe, please ensure that string begin by &quot;/&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="300" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="300" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="lfc__ifce__ng_8c_19fa43925882e2e196e0020b529827d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_lfc_ifce_mkdirpG</definition>
        <argsstring>(struct lfc_ops *ops, const char *path, mode_t mode, gboolean pflag, GError **err)</argsstring>
        <name>gfal_lfc_ifce_mkdirpG</name>
        <param>
          <type>struct lfc_ops *</type>
          <declname>ops</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>gboolean</type>
          <declname>pflag</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implementation of mkdir -p call on the lfc </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" line="326" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c" bodystart="326" bodyend="350"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>main internal file of the lfc catalog module </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Adrien Devresse </para></simplesect>
<simplesect kind="version"><para>0.0.1 </para></simplesect>
<simplesect kind="date"><para>02/05/2011 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GFAL_LFN_MAX_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2048</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../gfal_constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../mds/gfal_common_mds.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__interface_8h" kindref="compound">gfal_common_interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lfc__ifce__ng_8h" kindref="compound">lfc_ifce_ng.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__errverbose_8h" kindref="compound">gfal_common_errverbose.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lfc_startSession(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops*<sp/>ops,<sp/>GError<sp/>**<sp/>err){<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ops-&gt;startsess<sp/>(ops-&gt;lfc_endpoint,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" kindref="member">gfal_version</ref><sp/>())<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>*ops-&gt;serrno<sp/>&lt;<sp/>1000<sp/>?<sp/>*ops-&gt;serrno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,sav_errno,</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Error<sp/>while<sp/>start<sp/>session<sp/>with<sp/>lfc,<sp/>lfc_endpoint:<sp/>%s,<sp/>Error<sp/>:<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__func__,<sp/>ops-&gt;lfc_endpoint,<sp/>ops-&gt;sstrerror(*ops-&gt;serrno));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lfc_startTransaction(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops*<sp/>ops,<sp/>GError<sp/>**<sp/>err){<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ops-&gt;starttrans(ops-&gt;lfc_endpoint,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="group__common__group_1ga5a8df616e6a5e6fc1d94e2374c7ccf2" kindref="member">gfal_version</ref><sp/>())<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>*ops-&gt;serrno<sp/>&lt;<sp/>1000<sp/>?<sp/>*ops-&gt;serrno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,sav_errno,</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Error<sp/>while<sp/>start<sp/>transaction<sp/>with<sp/>lfc,<sp/>lfc_endpoint:<sp/>%s,<sp/>Error<sp/>:<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__func__,<sp/>ops-&gt;lfc_endpoint,<sp/>ops-&gt;sstrerror(*ops-&gt;serrno));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lfc_endTransaction(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops*<sp/>ops,<sp/>GError<sp/>**<sp/>err){<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ops-&gt;endtrans()<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>*ops-&gt;serrno<sp/>&lt;<sp/>1000<sp/>?<sp/>*ops-&gt;serrno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,sav_errno,</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Error<sp/>while<sp/>start<sp/>transaction<sp/>with<sp/>lfc,<sp/>Error<sp/>:<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__func__,<sp/>ops-&gt;sstrerror(*ops-&gt;serrno));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lfc_abortTransaction(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops*<sp/>ops,<sp/>GError<sp/>**<sp/>err){<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ops-&gt;aborttrans()<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>*ops-&gt;serrno<sp/>&lt;<sp/>1000<sp/>?<sp/>*ops-&gt;serrno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,sav_errno,</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Error<sp/>while<sp/>abort<sp/>transaction<sp/>with<sp/>lfc,<sp/><sp/>Error<sp/>:<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__func__,<sp/><sp/>ops-&gt;sstrerror(*ops-&gt;serrno));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>gfal_get_lfchost_envar(GError**<sp/>err){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfc_host=NULL,<sp/>*lfc_port=NULL;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfc_endpoint=NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port=0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(lfc_host<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;LFC_HOST&quot;</highlight><highlight class="normal">))<sp/>!=NULL){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnlen<sp/>(lfc_host,GFAL_MAX_LFCHOST_LEN)<sp/>+<sp/>6<sp/>&gt;=<sp/>GFAL_MAX_LFCHOST_LEN)<sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,<sp/>0,<sp/>ENAMETOOLONG,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_get_lfchost_envar]<sp/>Host<sp/>name<sp/>from<sp/>LFC_HOST<sp/>env<sp/>var<sp/>too<sp/>long&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_port<sp/>=<sp/>getenv<sp/>(</highlight><highlight class="stringliteral">&quot;LFC_PORT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lfc_port<sp/><sp/>&amp;&amp;<sp/>(strnlen<sp/>(lfc_port,6)<sp/>&gt;<sp/>5<sp/><sp/>||<sp/>(port<sp/>=<sp/>atoi(lfc_port))<sp/>==<sp/>0)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,<sp/>0,<sp/>EINVAL<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_get_lfchost_envar]<sp/><sp/>Invalid<sp/>LFC<sp/>port<sp/>number<sp/>in<sp/>the<sp/>LFC_PORT<sp/>env<sp/>var&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfc_port)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_endpoint<sp/>=<sp/>g_strdup_printf(</highlight><highlight class="stringliteral">&quot;%s:%d&quot;</highlight><highlight class="normal">,<sp/>lfc_host,<sp/>port);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_endpoint<sp/>=<sp/>g_strdup_printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>lfc_host);<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//g_printerr(&quot;my<sp/>host<sp/>:<sp/>%s&quot;,<sp/>lfc_endpoint);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lfc_endpoint;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_define_lfc_env_var(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lfc_host,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lfc_endpoint=NULL,<sp/>*lfc_port<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(lfc_host,<sp/></highlight><highlight class="stringliteral">&quot;lfc://&quot;</highlight><highlight class="normal">,<sp/>6)<sp/>==<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>the<sp/>url<sp/>begining<sp/>with<sp/>lfc://</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_endpoint<sp/>=strndupa<sp/>(<sp/>lfc_host<sp/>+<sp/>6,<sp/>GFAL_HOSTNAME_MAXLEN);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>a<sp/>plain<sp/>hostname<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_endpoint<sp/>=strndupa<sp/>(lfc_host,<sp/>GFAL_HOSTNAME_MAXLEN);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lfc_port<sp/>=<sp/>strchr<sp/>(lfc_endpoint,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">))<sp/>!=<sp/>NULL){<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>LFC_PORT<sp/>var<sp/>and<sp/>clear<sp/>port<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnlen<sp/>(lfc_port+1,6)<sp/>&gt;<sp/>5<sp/><sp/>&amp;&amp;<sp/>atoi(lfc_port)<sp/>==0)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,<sp/>EINVAL,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_define_lfc_env_var]<sp/>%s:<sp/>Invalid<sp/>LFC<sp/>port<sp/>number&quot;</highlight><highlight class="normal">,<sp/>lfc_port+1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(lfc_endpoint);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setenv(</highlight><highlight class="stringliteral">&quot;LFC_PORT&quot;</highlight><highlight class="normal">,<sp/>lfc_port+1,1);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*lfc_port<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setenv(</highlight><highlight class="stringliteral">&quot;LFC_HOST&quot;</highlight><highlight class="normal">,<sp/>lfc_host,<sp/>1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lfc__ifce__ng_8c_1c4daecd5aa0938a99eb86c367a0050f1" kindref="member">gfal_convert_guid_to_lfn</ref>(catalog_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>guid,<sp/>GError<sp/>**<sp/>err){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GError*<sp/>tmp_err=NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lfn=NULL;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_ops*<sp/>ops<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_ops*)<sp/>handle;<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_linkinfo*<sp/>links<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ops-&gt;getlinks(NULL,<sp/>guid,<sp/>&amp;size,<sp/>&amp;links)<sp/>&lt;0){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>*ops-&gt;serrno<sp/>&lt;<sp/>1000<sp/>?<sp/>*ops-&gt;serrno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,sav_errno,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_convert_guid_to_lfn]<sp/>Error<sp/>while<sp/>getlinks()<sp/>with<sp/>lfclib,<sp/>lfc_endpoint:<sp/>%s,<sp/>guid<sp/>:<sp/>%s,<sp/>Error<sp/>:<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>ops-&gt;lfc_endpoint,guid,<sp/>ops-&gt;sstrerror(*ops-&gt;serrno));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!links<sp/>||<sp/>strnlen(links[0].path,<sp/>GFAL_LFN_MAX_LEN)<sp/>&gt;=<sp/>GFAL_LFN_MAX_LEN){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,EINVAL,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_convert_guid_to_lfn]<sp/>Error<sp/>no<sp/>links<sp/>associated<sp/>with<sp/>this<sp/>guid<sp/>or<sp/>corrupted<sp/>one<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>guid);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfn<sp/>=<sp/><sp/>strdup(links[0].path);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(links);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lfn;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lfc__ifce__ng_8c_15d13dc09e91f66d74de768c2e4bf4872" kindref="member">gfal_setup_lfchost</ref>(gfal_handle<sp/>handle,<sp/>GError<sp/>**<sp/>err){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(handle<sp/>&amp;&amp;<sp/>err,<sp/>NULL,<sp/>err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_setup_lfchost]<sp/>Invalid<sp/>parameters<sp/>handle<sp/>&amp;<sp/>err&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lfc_host<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GError*<sp/>tmp_err<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(lfc_host<sp/>=<sp/>gfal_get_lfchost_envar(&amp;tmp_err))<sp/>==<sp/>NULL<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>env<sp/>var<sp/>not<sp/>specified<sp/>got<sp/>one<sp/>from<sp/>bdii,<sp/>and<sp/>setup<sp/>the<sp/>env<sp/>var</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp_err){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_propagate_prefixed_error(err,<sp/>tmp_err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_get_lfchost]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(lfc_host<sp/>=<sp/>gfal_get_lfchost_bdii(handle,<sp/>&amp;tmp_err))<sp/>==NULL<sp/>){<sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>bdii<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_propagate_prefixed_error(err,<sp/>tmp_err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_get_lfchost]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_define_lfc_env_var(lfc_host,<sp/>&amp;tmp_err);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>the<sp/>env<sp/>var<sp/>if<sp/>sucess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp_err){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_propagate_prefixed_error(err,<sp/>tmp_err,</highlight><highlight class="stringliteral">&quot;[gfal_get_lfchost]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(lfc_host);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strnlen<sp/>(lfc_host,GFAL_MAX_LFCHOST_LEN)<sp/>+<sp/>6<sp/>&gt;=<sp/>GFAL_MAX_LFCHOST_LEN)<sp/>{<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,<sp/>0,<sp/>ENAMETOOLONG,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_get_lfchost]<sp/>lfc<sp/>host<sp/>name<sp/>:<sp/><sp/>%s,<sp/>Host<sp/>name<sp/>too<sp/>long&quot;</highlight><highlight class="normal">,<sp/>lfc_host);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(lfc_host);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//g_printerr(&quot;<sp/>my<sp/>host<sp/>:<sp/>%s&quot;,<sp/>lfc_host);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lfc_host;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_ops*<sp/><ref refid="lfc__ifce__ng_8c_17c91643749a2c5d7e8043c0e42d00fd6" kindref="member">gfal_load_lfc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_ops*<sp/>lfc_sym=NULL;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GError*<sp/>tmp_err=NULL;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dlhandle=NULL;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dlhandle<sp/>=<sp/>dlopen<sp/>(NULL,<sp/>RTLD_LAZY))<sp/>==<sp/>NULL)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>dlopen<sp/>on<sp/>the<sp/>dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,<sp/>0,<sp/>EPROTONOSUPPORT,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_load_lfc]<sp/>Error<sp/>in<sp/>lfc<sp/>module<sp/>shared<sp/>library<sp/>was<sp/>not<sp/>open<sp/>properly<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,dlerror<sp/>()<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_sym<sp/>=<sp/>calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_sym-&gt;addreplica<sp/>=<sp/>(int<sp/>(*)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_fileid<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*))<sp/>dlsym<sp/>(dlhandle,<sp/></highlight><highlight class="stringliteral">&quot;lfc_addreplica&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lfc_sym-&gt;addreplica<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dlhandle<sp/>=<sp/>dlopen<sp/>(name,<sp/>RTLD_LAZY))<sp/>==<sp/>NULL)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>dlopen<sp/>on<sp/>a<sp/>fixed<sp/>name<sp/>shared<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,<sp/>0,<sp/>EPROTONOSUPPORT,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_load_lfc]<sp/>Error<sp/>in<sp/>lfc<sp/>module<sp/>shared<sp/>library<sp/>was<sp/>not<sp/>open<sp/>properly<sp/>:<sp/>%s&quot;</highlight><highlight class="normal">,dlerror<sp/>()<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_sym-&gt;addreplica<sp/>=<sp/>(int<sp/>(*)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_fileid<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*))<sp/>dlsym<sp/>(dlhandle,<sp/></highlight><highlight class="stringliteral">&quot;lfc_addreplica&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>f_list[]<sp/>=<sp/>{<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;(lfc_sym-&gt;serrno),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;sstrerror),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;creatg),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;delreplica),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;aborttrans),<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;endtrans),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;getpath),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;getlinks),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;getreplica),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;lstat),<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;mkdirg),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;seterrbuf),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;setfsizeg),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;setfsize),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;starttrans),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;statg),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;statr),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;symlink),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;unlink),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;access),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;chmod),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;rename),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;opendirg),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;rmdir),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;startsess),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;endsess),<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;closedir),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)<sp/>&amp;(lfc_sym-&gt;readdir)<sp/>};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sym_list[]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;serrno&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sstrerror&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_creatg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_delreplica&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_aborttrans&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lfc_endtrans&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_getpath&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_getlinks&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_getreplica&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_lstat&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lfc_mkdirg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_seterrbuf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_setfsizeg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_setfsize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_starttrans&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lfc_statg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_statr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_symlink&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_unlink&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_access&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_chmod&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lfc_rename&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_opendirg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_rmdir&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_startsess&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_endsess&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_closedir&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lfc_readdir&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="gfal__common__all_8c_10323a4ab58106e316851c1ae06148e28" kindref="member">resolve_dlsym_listG</ref>(dlhandle,<sp/>f_list,<sp/>sym_list,<sp/>28,<sp/>&amp;tmp_err);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_propagate_prefixed_error(err,<sp/>tmp_err,</highlight><highlight class="stringliteral">&quot;[gfal_load_lfc]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(lfc_sym);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lfc_sym;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/***</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/><sp/>convert<sp/>a<sp/>internal<sp/>lfc<sp/>statg<sp/>to<sp/>a<sp/>POSIX<sp/>lfc<sp/>stat</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/><sp/>struct<sp/>must<sp/>be<sp/>already<sp/>allocated</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lfc_convert_statg(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>output,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_filestatg*<sp/>input,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(output<sp/>&amp;&amp;<sp/>input,<sp/>-1,<sp/>err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_lfc_convert_statg]<sp/>Invalid<sp/>args<sp/>statg/stat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_mode<sp/>=<sp/>input-&gt;filemode;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_nlink<sp/>=<sp/>input-&gt;nlink;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_uid<sp/>=<sp/>input-&gt;uid;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_gid<sp/>=<sp/>input-&gt;gid;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_size<sp/>=<sp/>input-&gt;filesize;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_atime<sp/>=<sp/>input-&gt;atime;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_ctime<sp/>=<sp/>input-&gt;ctime;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_mtime<sp/>=<sp/>input-&gt;mtime;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/***</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/><sp/>convert<sp/>a<sp/>internal<sp/>lfc<sp/>lstat<sp/>to<sp/>a<sp/>POSIX<sp/>lfc<sp/>stat</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/><sp/>struct<sp/>must<sp/>be<sp/>already<sp/>allocated</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lfc_convert_lstat(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat*<sp/>output,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_filestat*<sp/>input,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(output<sp/>&amp;&amp;<sp/>input,<sp/>-1,<sp/>err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_lfc_convert_lstat]<sp/>Invalid<sp/>args<sp/>statg/stat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_mode<sp/>=<sp/>input-&gt;filemode;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_nlink<sp/>=<sp/>input-&gt;nlink;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_uid<sp/>=<sp/>input-&gt;uid;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_gid<sp/>=<sp/>input-&gt;gid;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_size<sp/>=<sp/>input-&gt;filesize;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_atime<sp/>=<sp/>input-&gt;atime;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_ctime<sp/>=<sp/>input-&gt;ctime;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;st_mtime<sp/>=<sp/>input-&gt;mtime;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gfal_lfc_mkdir(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops*<sp/>ops,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/>mode_t<sp/>mode,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>struid[37];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gfal__common__all_8c_14cb5e50a1af5612463aaa525162a2e9e" kindref="member">gfal_generate_guidG</ref>(struid,NULL);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ops-&gt;mkdirg<sp/>(path,<sp/>struid,<sp/>mode)){<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sav_errno<sp/>=<sp/>*ops-&gt;serrno<sp/>&lt;<sp/>1000<sp/>?<sp/>*ops-&gt;serrno<sp/>:<sp/>ECOMM;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_set_error(err,0,sav_errno,</highlight><highlight class="stringliteral">&quot;[%s]<sp/>Error<sp/>while<sp/>mkdir<sp/>call<sp/>in<sp/>the<sp/>lfc<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>__func__,strerror(sav_errno));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lfc__ifce__ng_8c_10d7c361d951ac79fee504d5125485033" kindref="member">gfal_lfc_mkdir_rec</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops*<sp/>ops,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>browser_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>full_path,<sp/>mode_t<sp/>mode,<sp/>GError**<sp/>err){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=-1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>next_sep=<sp/>strchr(browser_path,<sp/>G_DIR_SEPARATOR);<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/>next_sep<sp/>==<sp/>NULL<sp/>||<sp/>*(next_sep+1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">){<sp/></highlight><highlight class="comment">//<sp/>last<sp/>folder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gfal_lfc_mkdir(ops,<sp/>full_path,<sp/>mode,<sp/>err);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>path_size<sp/>=next_sep<sp/>-<sp/>full_path;<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GError*<sp/>tmp_err<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[<sp/>path_size+1];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>mempcpy(path,<sp/>full_path,<sp/>path_size<sp/>))<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gfal_lfc_mkdir(ops,<sp/>path,<sp/>(<sp/>0700<sp/>|<sp/>mode)<sp/>,<sp/>&amp;tmp_err);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret==<sp/>0<sp/>||<sp/>tmp_err-&gt;code<sp/>==<sp/>EEXIST<sp/>||<sp/>tmp_err-&gt;code<sp/>==<sp/>EACCES){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_clear_error(&amp;tmp_err);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lfc__ifce__ng_8c_10d7c361d951ac79fee504d5125485033" kindref="member">gfal_lfc_mkdir_rec</ref>(ops,<sp/>next_sep+1,<sp/>full_path,<sp/>mode,<sp/>err);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_propagate_error(err,<sp/>tmp_err);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lfc__ifce__ng_8c_19fa43925882e2e196e0020b529827d3c" kindref="member">gfal_lfc_ifce_mkdirpG</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>lfc_ops*<sp/>ops,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path,<sp/>mode_t<sp/>mode,<sp/>gboolean<sp/>pflag,<sp/>GError**<sp/><sp/>err){</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_return_val_err_if_fail(<sp/>ops<sp/>&amp;&amp;<sp/>path,<sp/>-1,<sp/>err,<sp/></highlight><highlight class="stringliteral">&quot;[gfal_lfc_ifce_mkdirpG]<sp/>Invalid<sp/>args<sp/>in<sp/>ops<sp/>or/and<sp/>path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret,<sp/>end_trans;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GError*<sp/>tmp_err<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gfal_lfc_startTransaction(ops,<sp/>&amp;tmp_err);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&gt;=0<sp/>){</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>gfal_lfc_mkdir(ops,<sp/>path,<sp/>mode,<sp/>&amp;tmp_err);<sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>create<sp/>the<sp/>directory,<sp/>suppose<sp/>the<sp/>non-recursive<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tmp_err<sp/>&amp;&amp;<sp/>tmp_err-&gt;code<sp/>==<sp/>ENOENT</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>pflag){<sp/></highlight><highlight class="comment">//<sp/>failure<sp/>on<sp/>the<sp/>simple<sp/>call,<sp/>try<sp/>to<sp/>do<sp/>a<sp/>recursive<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_clear_error(&amp;tmp_err);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="lfc__ifce__ng_8c_10d7c361d951ac79fee504d5125485033" kindref="member">gfal_lfc_mkdir_rec</ref>(ops,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)path+1,<sp/>path,<sp/><sp/>mode,<sp/>&amp;tmp_err);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=gfal_lfc_endTransaction(ops,&amp;tmp_err);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfal_lfc_abortTransaction(ops,NULL);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp_err)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_propagate_prefixed_error(err,<sp/>tmp_err,<sp/></highlight><highlight class="stringliteral">&quot;[%s]&quot;</highlight><highlight class="normal">,<sp/>__func__);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce_ng.c"/>
  </compounddef>
</doxygen>
