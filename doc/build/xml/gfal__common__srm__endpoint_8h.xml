<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gfal__common__srm__endpoint_8h" kind="file">
    <compoundname>gfal_common_srm_endpoint.h</compoundname>
    <includes refid="gfal__common__srm_8h" local="yes">gfal_common_srm.h</includes>
    <includes refid="gfal__constants_8h" local="yes">gfal_constants.h</includes>
    <includes refid="gfal__types_8h" local="yes">gfal_types.h</includes>
    <includes local="no">stdlib.h</includes>
    <includedby refid="gfal__common__srm_8h" local="yes">/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.h</includedby>
    <includedby refid="gfal__common__srm__endpoint_8c" local="yes">/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c</includedby>
    <incdepgraph>
      <node id="1263">
        <label>sys/stat.h</label>
      </node>
      <node id="1277">
        <label>../gfal_common_internal.h</label>
      </node>
      <node id="1267">
        <label>stdarg.h</label>
      </node>
      <node id="1271">
        <label>../gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1278">
        <label>stdlib.h</label>
      </node>
      <node id="1265">
        <label>gfal_prototypes.h</label>
        <link refid="gfal__prototypes_8h-source"/>
        <childnode refid="1260" relation="include">
        </childnode>
      </node>
      <node id="1269">
        <label>errno.h</label>
      </node>
      <node id="1256">
        <label>/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h</label>
        <link refid="gfal_common_srm_endpoint.h"/>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1264">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="1268">
        <label>uuid/uuid.h</label>
      </node>
      <node id="1257">
        <label>gfal_common_srm.h</label>
        <link refid="gfal__common__srm_8h"/>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
      </node>
      <node id="1261">
        <label>sys/types.h</label>
      </node>
      <node id="1270">
        <label>string.h</label>
      </node>
      <node id="1275">
        <label>lfc_api.h</label>
      </node>
      <node id="1274">
        <label>lfc/lfc_ifce.h</label>
        <link refid="lfc__ifce_8h-source"/>
        <childnode refid="1261" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
      </node>
      <node id="1259">
        <label>unistd.h</label>
      </node>
      <node id="1260">
        <label>glib.h</label>
      </node>
      <node id="1272">
        <label>gfal_common.h</label>
        <link refid="gfal__common_8h"/>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
      </node>
      <node id="1266">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
      </node>
      <node id="1273">
        <label>gfal_constants.h</label>
        <link refid="gfal__constants_8h-source"/>
      </node>
      <node id="1276">
        <label>voms_apic.h</label>
      </node>
      <node id="1258">
        <label>../gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
      </node>
      <node id="1262">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1286">
        <label>/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_opendir.c</label>
        <link refid="gfal__common__srm__opendir_8c"/>
      </node>
      <node id="1281">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
      </node>
      <node id="1285">
        <label>/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c</label>
        <link refid="gfal__common__srm__endpoint_8c"/>
      </node>
      <node id="1279">
        <label>/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h</label>
        <link refid="gfal_common_srm_endpoint.h"/>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
      </node>
      <node id="1287">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix_stat.c</label>
        <link refid="gfal__posix__stat_8c"/>
      </node>
      <node id="1280">
        <label>/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm.h</label>
        <link refid="gfal__common__srm_8h"/>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>/home/adevress/myworkspace/gfal/src/common/rfio/gfal_rfio_plugin_layer.c</label>
        <link refid="gfal__rfio__plugin__layer_8c"/>
      </node>
      <node id="1284">
        <label>/home/adevress/myworkspace/gfal/src/common/rfio/gfal_rfio_plugin_main.c</label>
        <link refid="gfal__rfio__plugin__main_8c"/>
      </node>
      <node id="1282">
        <label>/home/adevress/myworkspace/gfal/src/common/lfc/gfal_common_lfc.c</label>
        <link refid="gfal__common__lfc_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="gfal__common__srm__endpoint_8h_1d4518c44afa2a953bea3701d26ae7e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_srm_determine_endpoint</definition>
        <argsstring>(gfal_handle handle, const char *surl, char *buff_endpoint, size_t s_buff, enum gfal_srm_proto *srm_type, GError **err)</argsstring>
        <name>gfal_srm_determine_endpoint</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buff_endpoint</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>enum gfal_srm_proto *</type>
          <declname>srm_type</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>extract endpoint and srm_type from a surl determine the best endpoint associated with the surl and the param of the actual handle (no bdii check or not) see the diagram in doc/diagrams/surls_get_endpoint_activity_diagram.svg for more informations </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return 0 with endpoint and types set if success else -1 and set Error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h" line="32" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c" bodystart="46" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm__endpoint_8h_199a6995d5d222d54f28d7952499f60ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>gboolean gfal_check_fullendpoint_in_surlG</definition>
        <argsstring>(const char *surl, GError **err)</argsstring>
        <name>gfal_check_fullendpoint_in_surlG</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return TRUE if a full endpoint is contained in surl else FALSE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h" line="35" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c" bodystart="77" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm__endpoint_8h_1fbb46a068ea2a908160cb7b998377ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_fullendpointG</definition>
        <argsstring>(const char *surl, char *buff_endpoint, size_t s_buff, GError **err)</argsstring>
        <name>gfal_get_fullendpointG</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buff_endpoint</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>create a full endpoint from a &quot;full-surl&quot; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h" line="37" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c" bodystart="90" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm__endpoint_8h_16752ff0c9af50ac505ba7d1f42e43e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_select_best_protocol_and_endpointG</definition>
        <argsstring>(gfal_handle handle, char **tab_se_type, char **tab_endpoint, char *buff_endpoint, size_t s_buff, enum gfal_srm_proto *srm_type, GError **err)</argsstring>
        <name>gfal_select_best_protocol_and_endpointG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>tab_se_type</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>tab_endpoint</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buff_endpoint</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>enum gfal_srm_proto *</type>
          <declname>srm_type</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>select the best protocol choice and the best endpoint choice from a list of protocol and endpoints obtained by the bdii </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h" line="39" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c" bodystart="128" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm__endpoint_8h_1140721fdb18fe72533ed6f47122e939d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_endpoint_and_setype_from_bdiiG</definition>
        <argsstring>(gfal_handle handle, const char *surl, char *buff_endpoint, size_t s_buff, enum gfal_srm_proto *srm_type, GError **err)</argsstring>
        <name>gfal_get_endpoint_and_setype_from_bdiiG</name>
        <param>
          <type>gfal_handle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buff_endpoint</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>enum gfal_srm_proto *</type>
          <declname>srm_type</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>get endpoint from the bdii system only </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>0 if success with endpoint and srm_type set correctly else -1 and err set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h" line="41" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c" bodystart="183" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="gfal__common__srm__endpoint_8h_1c986f73b04fffd801b49861414fd33b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gfal_get_hostname_from_surlG</definition>
        <argsstring>(const char *surl, char *buff_hostname, size_t s_buff, GError **err)</argsstring>
        <name>gfal_get_hostname_from_surlG</name>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buff_hostname</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s_buff</declname>
        </param>
        <param>
          <type>GError **</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>get the hostname from a surl </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return 0 if success else -1 and err is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h" line="43" bodyfile="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.c" bodystart="158" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>header file for internal use in the srm part, endpoint determination </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Devresse Adrien </para></simplesect>
<simplesect kind="version"><para>2.0 </para></simplesect>
<simplesect kind="date"><para>22/06/2011 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gfal__common__srm_8h" kindref="compound">gfal_common_srm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__srm__endpoint_8c_1d4518c44afa2a953bea3701d26ae7e9e" kindref="member">gfal_srm_determine_endpoint</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>surl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buff_endpoint,<sp/>size_t<sp/>s_buff,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_srm_proto*<sp/>srm_type,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">gboolean<sp/><ref refid="gfal__common__srm__endpoint_8c_199a6995d5d222d54f28d7952499f60ba" kindref="member">gfal_check_fullendpoint_in_surlG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>surl,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__srm__endpoint_8c_1fbb46a068ea2a908160cb7b998377ffd" kindref="member">gfal_get_fullendpointG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>surl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buff_endpoint,<sp/>size_t<sp/>s_buff,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__srm__endpoint_8c_16752ff0c9af50ac505ba7d1f42e43e2d" kindref="member">gfal_select_best_protocol_and_endpointG</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>tab_se_type,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>tab_endpoint,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buff_endpoint,<sp/>size_t<sp/>s_buff,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_srm_proto*<sp/>srm_type,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gfal__common__srm__endpoint_8c_1140721fdb18fe72533ed6f47122e939d" kindref="member">gfal_get_endpoint_and_setype_from_bdiiG</ref>(gfal_handle<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>surl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buff_endpoint,<sp/>size_t<sp/>s_buff,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>gfal_srm_proto*<sp/>srm_type,<sp/>GError**<sp/>err);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="gfal__common__srm__endpoint_8c_1c986f73b04fffd801b49861414fd33b1" kindref="member">gfal_get_hostname_from_surlG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>surl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buff_hostname,<sp/>size_t<sp/>s_buff,<sp/>GError**<sp/>err);</highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/common/srm/gfal_common_srm_endpoint.h"/>
  </compounddef>
</doxygen>
