<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="gskiplist_8h" kind="file">
    <compoundname>gskiplist.h</compoundname>
    <includes local="no">glib.h</includes>
    <includedby refid="gskiplist_8c" local="yes">/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c</includedby>
    <incdepgraph>
      <node id="1982">
        <label>glib.h</label>
      </node>
      <node id="1981">
        <label>/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h</label>
        <link refid="gskiplist.h"/>
        <childnode refid="1982" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct__GSkiplist" prot="public">_GSkiplist</innerclass>
    <innerclass refid="struct__GSkipLink" prot="public">_GSkipLink</innerclass>
    <innerclass refid="struct__GSkipNode" prot="public">_GSkipNode</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gskiplist_8h_1da8b91cd42e756f098a953aa8087f335" prot="public" static="no">
        <type><ref refid="struct__GSkiplist" kindref="compound">_GSkiplist</ref></type>
        <definition>typedef struct _GSkiplist GSkiplist</definition>
        <argsstring></argsstring>
        <name>GSkiplist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="28" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gskiplist_8h_1d699cd92335ffe077d2b7ab2efbdb132" prot="public" static="no">
        <type>_GSkipNode</type>
        <definition>typedef struct _GSkipNode GSkipNode</definition>
        <argsstring></argsstring>
        <name>GSkipNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="29" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gskiplist_8h_1a65c5c63dcb76b2be4a6e67468bbb209" prot="public" static="no">
        <type>_GSkipLink</type>
        <definition>typedef struct _GSkipLink GSkipLink</definition>
        <argsstring></argsstring>
        <name>GSkipLink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="30" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gskiplist_8h_1ed9a6d0709aa074224daa2fd10c911f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
        <definition>GSkiplist* gskiplist_new</definition>
        <argsstring>(GCompareFunc func)</argsstring>
        <name>gskiplist_new</name>
        <param>
          <type>GCompareFunc</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a new skip list </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="58" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="gskiplist_8h_18dbc9df706526778d5488631c1d2059f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gskiplist_delete</definition>
        <argsstring>(GSkiplist *sk)</argsstring>
        <name>gskiplist_delete</name>
        <param>
          <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete an existing skip list </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="60" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="50" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="gskiplist_8h_186a8ad88934b67be2b081bb15c11224b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gboolean</type>
        <definition>gboolean gskiplist_insert</definition>
        <argsstring>(GSkiplist *sk, gpointer key, gpointer value)</argsstring>
        <name>gskiplist_insert</name>
        <param>
          <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
          <declname>sk</declname>
        </param>
        <param>
          <type>gpointer</type>
          <declname>key</declname>
        </param>
        <param>
          <type>gpointer</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert an element in the SkipList sk replace an existing one if already exist <simplesect kind="return"><para>return true if insert else False if replaced </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="62" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="69" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="gskiplist_8h_1c6460c21749fac9d17f5f4511075b1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t gskiplist_length</definition>
        <argsstring>(GSkiplist *sk)</argsstring>
        <name>gskiplist_length</name>
        <param>
          <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="65" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="gskiplist_8h_15faf49deba35b0999985b0bca02cd534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gpointer</type>
        <definition>gpointer gskiplist_remove</definition>
        <argsstring>(GSkiplist *sk, gpointer key)</argsstring>
        <name>gskiplist_remove</name>
        <param>
          <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
          <declname>sk</declname>
        </param>
        <param>
          <type>gpointer</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>remove a element from the list with the given key, return the value if found else NULL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="67" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="gskiplist_8h_14ddc52005069405498667b8d10b03f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gpointer</type>
        <definition>gpointer gskiplist_search</definition>
        <argsstring>(GSkiplist *sk, gpointer key)</argsstring>
        <name>gskiplist_search</name>
        <param>
          <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
          <declname>sk</declname>
        </param>
        <param>
          <type>gpointer</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search an element and return the value if found else NULL pointer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="69" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="173" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="gskiplist_8h_14a8426868ce08758a306970a924ed313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gpointer</type>
        <definition>gpointer gskiplist_get_first_value</definition>
        <argsstring>(GSkiplist *sk)</argsstring>
        <name>gskiplist_get_first_value</name>
        <param>
          <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the first value of the list </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="71" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="207" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="gskiplist_8h_1c34d3152469c860413e3836f875dfbf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gskiplist_clean</definition>
        <argsstring>(GSkiplist *sk)</argsstring>
        <name>gskiplist_clean</name>
        <param>
          <type><ref refid="struct__GSkiplist" kindref="compound">GSkiplist</ref> *</type>
          <declname>sk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clean all value in the SkipList </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="73" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="224" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gskiplist_8h_1b1dfcfc979918393c534c1415cf67c21" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int max_size</definition>
        <argsstring></argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h" line="33" bodyfile="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__GSkiplist" kindref="compound">_GSkiplist</ref><sp/>GSkiplist;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_GSkipNode<sp/>GSkipNode;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_GSkipLink<sp/>GSkipLink;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="struct__GSkiplist" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__GSkiplist" kindref="compound">_GSkiplist</ref>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>GSkipNode*<sp/>head_node;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>GCompareFunc<sp/>cmp_func;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>size_t<sp/>length;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>GStaticRWLock<sp/>lock;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_GSkipLink{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>GSkipNode*<sp/>next;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_GSkipNode{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>guint<sp/>height;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>GSkipLink<sp/>link[];</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">GSkiplist*<sp/>gskiplist_new(GCompareFunc<sp/>func);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gskiplist_delete(GSkiplist*<sp/>sk);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">gboolean<sp/>gskiplist_insert(GSkiplist*<sp/>sk,<sp/>gpointer<sp/>key,<sp/>gpointer<sp/>value);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">size_t<sp/>gskiplist_length(GSkiplist*<sp/>sk);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">gpointer<sp/>gskiplist_remove(GSkiplist*<sp/>sk,<sp/>gpointer<sp/>key);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">gpointer<sp/>gskiplist_search(GSkiplist*<sp/>sk,<sp/>gpointer<sp/>key);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">gpointer<sp/>gskiplist_get_first_value(GSkiplist*<sp/>sk);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gskiplist_clean(GSkiplist*<sp/>sk);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/externals/gskiplist/gskiplist.h"/>
  </compounddef>
</doxygen>
