<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="lfc__ifce_8h" kind="file">
    <compoundname>lfc_ifce.h</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">lfc_api.h</includes>
    <includes refid="gfal__types_8h" local="yes">gfal_types.h</includes>
    <includedby refid="gfal__common_8h" local="yes">/home/adevress/myworkspace/gfal/src/common/gfal_common.h</includedby>
    <includedby refid="lfc__ifce_8c" local="yes">/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c</includedby>
    <incdepgraph>
      <node id="990">
        <label>sys/stat.h</label>
      </node>
      <node id="994">
        <label>stdarg.h</label>
      </node>
      <node id="992">
        <label>gfal_prototypes.h</label>
        <link refid="gfal__prototypes_8h-source"/>
        <childnode refid="988" relation="include">
        </childnode>
      </node>
      <node id="996">
        <label>errno.h</label>
      </node>
      <node id="991">
        <label>gfal_srm_ifce_types.h</label>
      </node>
      <node id="995">
        <label>uuid/uuid.h</label>
      </node>
      <node id="984">
        <label>sys/types.h</label>
      </node>
      <node id="997">
        <label>string.h</label>
      </node>
      <node id="985">
        <label>lfc_api.h</label>
      </node>
      <node id="983">
        <label>/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h</label>
        <link refid="lfc_ifce.h"/>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
      <node id="987">
        <label>unistd.h</label>
      </node>
      <node id="988">
        <label>glib.h</label>
      </node>
      <node id="993">
        <label>gfal_common_catalog.h</label>
        <link refid="gfal__common__catalog_8h"/>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
      <node id="986">
        <label>gfal_types.h</label>
        <link refid="gfal__types_8h-source"/>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
      </node>
      <node id="989">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1005">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_internal.h</label>
        <link refid="gfal__common__internal_8h"/>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1011">
        <label>/home/adevress/myworkspace/gfal/src/common/voms/gfal_voms_if.c</label>
        <link refid="gfal__voms__if_8c"/>
      </node>
      <node id="1010">
        <label>/home/adevress/myworkspace/gfal/src/common/voms/gfal_voms_if.h</label>
        <link refid="gfal__voms__if_8h-source"/>
        <childnode refid="1011" relation="include">
        </childnode>
      </node>
      <node id="1000">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_internals.h</label>
        <link refid="gfal__internals_8h-source"/>
      </node>
      <node id="1003">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix.c</label>
        <link refid="gfal__posix_8c"/>
      </node>
      <node id="1013">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix_mkdir.c</label>
        <link refid="gfal__posix__mkdir_8c"/>
      </node>
      <node id="1001">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_storage.h</label>
        <link refid="gfal__common__storage_8h-source"/>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
      </node>
      <node id="1008">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix_stat.c</label>
        <link refid="gfal__posix__stat_8c"/>
      </node>
      <node id="1007">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h</label>
        <link refid="gfal__common__srm_8h"/>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
      </node>
      <node id="1006">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_interface.c</label>
        <link refid="gfal__common__interface_8c"/>
      </node>
      <node id="998">
        <label>/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h</label>
        <link refid="lfc_ifce.h"/>
        <childnode refid="999" relation="include">
        </childnode>
      </node>
      <node id="1002">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common.c</label>
        <link refid="gfal__common_8c"/>
      </node>
      <node id="999">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common.h</label>
        <link refid="gfal__common_8h"/>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1001" relation="include">
        </childnode>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
      </node>
      <node id="1012">
        <label>/home/adevress/myworkspace/gfal/src/posix/gfal_posix_access.c</label>
        <link refid="gfal__posix__access_8c"/>
      </node>
      <node id="1004">
        <label>/home/adevress/myworkspace/gfal/src/common/gfal_common_all.c</label>
        <link refid="gfal__common__all_8c"/>
      </node>
      <node id="1009">
        <label>/home/adevress/myworkspace/gfal/src/common/lfc/gfal_common_lfc.c</label>
        <link refid="gfal__common__lfc_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structfc__ops" prot="public">fc_ops</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lfc__ifce_8h_1f369861ff930aa15081aabe8a18f23b0" prot="public" static="no">
        <name>ALLOC_BLOCK_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="29" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lfc__ifce_8h_100ce1160368431570c013c0af0cfd0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* lfc_get_catalog_endpoint</definition>
        <argsstring>(char *errbuf, int errbufsz)</argsstring>
        <name>lfc_get_catalog_endpoint</name>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="61" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g4fa605c700ac841df98ffb1b4f2d0ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_replica_exists</definition>
        <argsstring>(const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_replica_exists</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="63" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="178" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g145e85cc530b23736eea535580c4e5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_accessl</definition>
        <argsstring>(const char *path, const char *guid, int mode, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_accessl</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="65" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="197" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g45d447082c9b4e1a47684a43f198d2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_chmodl</definition>
        <argsstring>(const char *path, mode_t mode, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_chmodl</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="67" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="251" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g344113bab975bfeedfa4be33b2054745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* lfc_guidforpfn</definition>
        <argsstring>(const char *pfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guidforpfn</name>
        <param>
          <type>const char *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>lfc_guidforpfn : Get the guid for a replica. If the replica does not exist, fail with ENOENT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="71" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="270" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gf922973a476763abd5185fc13d2af9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_guidsforpfns</definition>
        <argsstring>(int nbfiles, const char **pfns, int amode, char ***guids, int **statuses, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guidsforpfns</name>
        <param>
          <type>int</type>
          <declname>nbfiles</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pfns</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amode</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>guids</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>statuses</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>lfc_guidsforpfns : Get the guid for a replica. If the replica does not exist, fail with ENOENT </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="76" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="294" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g89af6526e8342c74f90fa2ee10cdc5fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_guid_exists</definition>
        <argsstring>(const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guid_exists</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>test if guid exists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="78" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="377" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g942218fc4c4fa95df2bf10db3f3fad75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** lfc_get_replicas</definition>
        <argsstring>(const char *lfn, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_get_replicas</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="80" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="397" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g9ea58977487f9be50e91ba9857bc9510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_unregister_pfns</definition>
        <argsstring>(int nbguids, const char **guids, const char **pfns, int **results, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_unregister_pfns</name>
        <param>
          <type>int</type>
          <declname>nbguids</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>guids</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pfns</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>results</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister replicas (SURLs) from a GUIDs, and remove all links to a GUID if there are no more replicas </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="85" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="443" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g338e9042e72eeffa51e27beca09675c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* lfc_guidfromlfn</definition>
        <argsstring>(const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_guidfromlfn</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="87" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="545" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g546944558296f5a894005368c236cccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** lfc_get_aliases</definition>
        <argsstring>(const char *lfn, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_get_aliases</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="89" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="565" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gdc3db49fb133cc79ae3250731167b478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_register_file</definition>
        <argsstring>(const char *lfn, const char *guid, const char *surl, mode_t mode, GFAL_LONG64 size, int bool_createonly, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_register_file</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>surl</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>GFAL_LONG64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bool_createonly</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="92" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="610" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gbcf2a1618d925816f8b570cdeac04afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_register_alias</definition>
        <argsstring>(const char *guid, const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_register_alias</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="94" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="777" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g776fc6004cd4c565c42be3365a719376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_unregister_alias</definition>
        <argsstring>(const char *guid, const char *lfn, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_unregister_alias</name>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="96" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="823" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gb13d4fafbe48d4748371fb2780381908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_mkdirp</definition>
        <argsstring>(const char *path, mode_t mode, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_mkdirp</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="98" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="871" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1gf0a92088b3b2bd149ad3968573d3dbce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_renamel</definition>
        <argsstring>(const char *old_name, const char *new_name, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_renamel</name>
        <param>
          <type>const char *</type>
          <declname>old_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="100" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="955" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1ge22436958fd4ad2bb2bcc1b608aa7f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DIR *</type>
        <definition>DIR* lfc_opendirlg</definition>
        <argsstring>(const char *dirname, const char *guid, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_opendirlg</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="102" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="972" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1ga46361de52e13b63a74c50589a75fa33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_rmdirl</definition>
        <argsstring>(const char *dirname, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_rmdirl</name>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="104" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="991" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g6be41de8da5424cc099b88ec27f772c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_maperror</definition>
        <argsstring>(struct proto_ops *pops, int ioflag)</argsstring>
        <name>lfc_maperror</name>
        <param>
          <type>struct proto_ops *</type>
          <declname>pops</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ioflag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="106" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="1008" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g30eee0fb314a09f9b28cddd249ccf692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_setsize</definition>
        <argsstring>(const char *lfn, GFAL_LONG64 size, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_setsize</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>GFAL_LONG64</type>
          <declname>size</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="108" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="1014" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g3115c08a5c7ffb01087a192358a40ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_statl</definition>
        <argsstring>(const char *lfn, const char *guid, struct stat64 *buf, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_statl</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>guid</declname>
        </param>
        <param>
          <type>struct stat64 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="110" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="1031" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g498672f9d3482822d3da75e23903cfdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_lstatl</definition>
        <argsstring>(const char *lfn, struct stat64 *buf, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_lstatl</name>
        <param>
          <type>const char *</type>
          <declname>lfn</declname>
        </param>
        <param>
          <type>struct stat64 *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="112" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="1062" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g0b34fbad9eb051aa476eec5bea9e7692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_fillsurls</definition>
        <argsstring>(gfal_file gf, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_fillsurls</name>
        <param>
          <type>gfal_file</type>
          <declname>gf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="114" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="1093" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="group__lfc__low__group_1g1f63e86121210390d7f0d448bdd4d44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int lfc_remove</definition>
        <argsstring>(gfal_file gfile, char *errbuf, int errbufsz)</argsstring>
        <name>lfc_remove</name>
        <param>
          <type>gfal_file</type>
          <declname>gfile</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>errbufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h" line="116" bodyfile="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.c" bodystart="1270" bodyend="1349"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Members<sp/>of<sp/>the<sp/>EGEE<sp/>Collaboration.<sp/>2004.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>http://www.eu-egee.org/partners/<sp/>for<sp/>details<sp/>on<sp/>the<sp/>copyright<sp/>holders.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>@(#)$RCSfile:<sp/>lfc_ifce.c,v<sp/>$<sp/>$Revision:<sp/>1.67<sp/>$<sp/>$Date:<sp/>2010/01/22<sp/>15:25:54<sp/>$<sp/>CERN<sp/>James<sp/>Casey</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GFAL_LFC_IFCE_H_</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GFAL_LFC_IFCE_H_</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;lfc_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfal_types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALLOC_BLOCK_SIZE<sp/>16<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>block<sp/>size<sp/>to<sp/>allocate<sp/>new<sp/>pointers<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fc_ops<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*serrno;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*(*sstrerror)(int);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*addreplica)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_fileid<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*creatg)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*delreplica)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_fileid<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*aborttrans)();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*endtrans)();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*getpath)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>u_signed64,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*getlinks)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_linkinfo<sp/>**);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*getreplica)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_filereplica<sp/>**);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*lstat)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_filestat<sp/>*);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*mkdirg)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*seterrbuf)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>int);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*setfsizeg)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>u_signed64,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*setfsize)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_fileid<sp/>*,<sp/>u_signed64);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*starttrans)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*statg)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_filestatg<sp/>*);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*statr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">lfc_filestatg<sp/>*);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*symlink)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*unlink)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*access)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>int);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*chmod)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*rename)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lfc_DIR<sp/>*(*opendirg)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/>(*rmdir)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*startsess)<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*endsess)<sp/>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>lfc_get_catalog_endpoint<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_replica_exists<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_accessl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_chmodl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>mode_t<sp/>mode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group__lfc__low__group_1g344113bab975bfeedfa4be33b2054745" kindref="member">lfc_guidforpfn</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lfc__low__group_1gf922973a476763abd5185fc13d2af9eb" kindref="member">lfc_guidsforpfns</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbfiles,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pfns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***guids,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**statuses,<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lfc__low__group_1g89af6526e8342c74f90fa2ee10cdc5fa" kindref="member">lfc_guid_exists</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>lfc_get_replicas<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>lfn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unregister<sp/>replicas<sp/>(SURLs)<sp/>from<sp/>a<sp/>GUIDs,<sp/>and<sp/>remove<sp/>all<sp/>links<sp/>to<sp/>a<sp/>GUID</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>if<sp/>there<sp/>are<sp/>no<sp/>more<sp/>replicas<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lfc__low__group_1g9ea58977487f9be50e91ba9857bc9510" kindref="member">lfc_unregister_pfns</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbguids,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**guids,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**pfns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**results,<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>lfc_guidfromlfn<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>lfc_get_aliases<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_register_file<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*surl,<sp/>mode_t<sp/>mode,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GFAL_LONG64<sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bool_createonly,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_register_alias<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_unregister_alias<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_mkdirp<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>mode_t<sp/>mode,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_renamel<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*old_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">DIR<sp/>*<sp/>lfc_opendirlg<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_rmdirl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirname,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_maperror<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>proto_ops<sp/>*pops,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ioflag);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_setsize<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/>GFAL_LONG64<sp/>size,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_statl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*guid,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*buf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_lstatl<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lfn,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>stat64<sp/>*buf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_fillsurls<sp/>(gfal_file<sp/>gf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lfc_remove<sp/>(gfal_file<sp/>gfile,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errbuf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errbufsz);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#define<sp/>GFAL_LFC_IFCE_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/adevress/myworkspace/gfal/src/common/lfc/lfc_ifce.h"/>
  </compounddef>
</doxygen>
