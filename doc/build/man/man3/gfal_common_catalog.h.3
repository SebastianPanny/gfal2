.TH "/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h" 3 "31 May 2011" "Version 1.90" "CERN org.glite.Gfal" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/adevress/myworkspace/gfal/src/common/gfal_common_catalog.h \- the header file of the common lib for the catalog management 
.SH SYNOPSIS
.br
.PP
\fC#include <stdarg.h>\fP
.br
\fC#include <uuid/uuid.h>\fP
.br
\fC#include <glib.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <string.h>\fP
.br
\fC#include <dirent.h>\fP
.br
\fC#include <sys/stat.h>\fP
.br
\fC#include 'gfal_prototypes.h'\fP
.br
\fC#include 'gfal_types.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fB_gfal_catalog_interface\fP"
.br
.ti -1c
.RI "struct \fB_catalog_opts\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBMAX_CATALOG_LIST\fP   64"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fB_catalog_mode\fP { \fBGFAL_CATALOG_ALL\fP = 0, \fBGFAL_CATALOG_ACCESS\fP, \fBGFAL_CATALOG_CHMOD\fP, \fBGFAL_CATALOG_RENAME\fP, \fBGFAL_CATALOG_STAT\fP, \fBGFAL_CATALOG_LSTAT\fP, \fBGFAL_CATALOG_MKDIR\fP, \fBGFAL_CATALOG_RMDIR\fP, \fBGFAL_CATALOG_OPENDIR\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "char * \fBgfal_get_cat_type\fP (GError **)"
.br
.RI "\fIcatalog type getter \fP"
.ti -1c
.RI "int \fBgfal_catalogs_instance\fP (gfal_handle, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_catalogs_accessG\fP (gfal_handle handle, const char *path, int mode, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_catalogs_guid_accessG\fP (gfal_handle handle, char *guid, int mode, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_catalogs_delete\fP (gfal_handle, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_catalog_statG\fP (gfal_handle handle, const char *path, struct stat *st, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_catalog_lstatG\fP (gfal_handle handle, const char *path, struct stat *st, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_catalog_mkdirp\fP (gfal_handle handle, const char *path, mode_t mode, gboolean pflag, GError **err)"
.br
.ti -1c
.RI "char * \fBgfal_catalog_resolve_guid\fP (gfal_handle handle, const char *guid, GError **err)"
.br
.ti -1c
.RI "gfal_file_handle \fBgfal_catalog_opendirG\fP (gfal_handle handle, const char *name, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_catalog_closedirG\fP (gfal_handle handle, gfal_file_handle fh, GError **err)"
.br
.ti -1c
.RI "dirent * \fBgfal_catalog_readdirG\fP (gfal_handle handle, gfal_file_handle fh, GError **err)"
.br
.ti -1c
.RI "char * \fBget_default_se\fP (char *, int)"
.br
.ti -1c
.RI "int \fBpurify_surl\fP (const char *, char *, const int)"
.br
.ti -1c
.RI "int \fBsetypesandendpointsfromsurl\fP (const char *, char ***, char ***, char *, int)"
.br
.ti -1c
.RI "int \fBsetypesandendpoints\fP (const char *, char ***, char ***, char *, int)"
.br
.ti -1c
.RI "int \fBcanonical_url\fP (const char *, const char *, char *, int, char *, int)"
.br
.ti -1c
.RI "int \fBparseturl\fP (const char *, char *, int, char *, int, char *, int)"
.br
.ti -1c
.RI "int \fBreplica_exists\fP (const char *, char *, int)"
.br
.ti -1c
.RI "int \fBgetdomainnm\fP (char *name, int namelen)"
.br
.ti -1c
.RI "char ** \fBget_sup_proto\fP ()"
.br
.ti -1c
.RI "proto_ops * \fBfind_pops\fP (const char *)"
.br
.ti -1c
.RI "int \fBmapposixerror\fP (struct proto_ops *, int)"
.br
.in -1c
.SH "Detailed Description"
.PP 
the header file of the common lib for the catalog management 

\fBAuthor:\fP
.RS 4
Devresse Adrien 
.RE
.PP
\fBVersion:\fP
.RS 4
0.0.1 
.RE
.PP
\fBDate:\fP
.RS 4
8/04/2011 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int gfal_catalog_closedirG (gfal_handle handle, gfal_file_handle fh, GError ** err)"
.PP
close the given file Handle while contacting the proper catalog 
.SS "int gfal_catalog_lstatG (gfal_handle handle, const char * path, struct stat * st, GError ** err)"
.PP
Execute a lstat function in the lfc 
.SS "int gfal_catalog_mkdirp (gfal_handle handle, const char * path, mode_t mode, gboolean pflag, GError ** err)"
.PP
Execute a mkdir function on the first compatible catalog ( checked with check url func ) 
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP handle of the current context 
.br
\fIpath\fP path to create 
.br
\fImode\fP right of the file created 
.br
\fIpflag\fP if TRUE, execute the request recursively if necessary else work as the common mkdir system call 
.br
\fIGError\fP error report system 
.RE
.PP
\fBWarning:\fP
.RS 4
no check on the path, please check the path before 
.RE
.PP
\fBReturns:\fP
.RS 4
return 0 if success else return -1 
.RE
.PP

.SS "gfal_file_handle gfal_catalog_opendirG (gfal_handle handle, const char * name, GError ** err)"
.PP
Execute a opendir function on the first compatible catalog ( checked with check url func ) 
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP handle of the current context 
.br
\fIpath\fP path to open 
.br
\fIGError\fP error report system 
.RE
.PP
\fBReturns:\fP
.RS 4
gfal_file_handle pointer given to the handle or NULL if error 
.RE
.PP

.SS "struct dirent* gfal_catalog_readdirG (gfal_handle handle, gfal_file_handle fh, GError ** err)"
.PP
execute a readdir for the given file handle on the appropriate catalog 
.SS "int gfal_catalog_statG (gfal_handle handle, const char * path, struct stat * st, GError ** err)"
.PP
Execute a stat function on the lfc catalog 
.SS "int gfal_catalogs_accessG (gfal_handle handle, const char * path, int mode, GError ** err)"
.PP
Execute an access function on the first catalog compatible in the catalog list return the result of the first valid catalog for a given URL 
.PP
\fBReturns:\fP
.RS 4
result of the access method or -1 if error and set GError with the correct value error : EPROTONOSUPPORT means that the URL is not matched by a catalog 
.RE
.PP

.SS "int gfal_catalogs_delete (gfal_handle handle, GError ** err)"
.PP
Delete all instance of catalogs 
.SS "int gfal_catalogs_instance (gfal_handle handle, GError ** err)"
.PP
Instance all catalogs for use if it's not the case return the number of catalog available 
.SS "char* gfal_get_cat_type (GError **)"
.PP
catalog type getter 
.PP
\fBReturns:\fP
.RS 4
return a string of the type of the catalog return NULL if an error occured and set the GError correctly 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for CERN org.glite.Gfal from the source code.
