.TH "/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h" 3 "20 Apr 2011" "Version 1.90" "CERN org.glite.Gfal" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/adevress/myworkspace/gfal/src/common/gfal_common_srm.h \- the header file with the main srm funcs of the common API 
.SH SYNOPSIS
.br
.PP
\fC#include 'gfal_common.h'\fP
.br
\fC#include <regex.h>\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBGFAL_PREFIX_SRM\fP   'srm://'"
.br
.ti -1c
.RI "#define \fBGFAL_ENDPOINT_DEFAULT_PREFIX\fP   'httpg://'"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "gfal_handle \fBgfal_initG\fP (GError **err)"
.br
.ti -1c
.RI "void \fBgfal_handle_freeG\fP (gfal_handle handle)"
.br
.RI "\fIfree a gfal's handle, safe if null \fP"
.ti -1c
.RI "int \fBgfal_get_asyncG\fP (gfal_handle handle, GList *surls, GError **err)"
.br
.RI "\fIlaunch a surls-> turls translation in asynchronous mode \fP"
.ti -1c
.RI "int \fBgfal_get_async_resultsG\fP (gfal_handle handle, GList **turls, GList **gerr_turls, GError **err)"
.br
.ti -1c
.RI "void \fBgfal_set_nobdiiG\fP (gfal_handle handle, gboolean no_bdii_chk)"
.br
.in -1c
.SH "Detailed Description"
.PP 
the header file with the main srm funcs of the common API 

\fBAuthor:\fP
.RS 4
Devresse Adrien 
.RE
.PP
\fBVersion:\fP
.RS 4
2.0 
.RE
.PP
\fBDate:\fP
.RS 4
12/04/2011 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int gfal_get_async_resultsG (gfal_handle handle, GList ** turls, GList ** gerr_turls, GError ** err)"
.PP
get the state of the current async request 
.PP
\fBReturns:\fP
.RS 4
return the number of response in turls or negativevalue if error 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP : handle of the current context 
.br
\fIGList**\fP turls : GList of char* with the full list of answer, answer can be 0 if error 
.br
\fIOptional\fP GList**gerr_turls : GList of GError*, contain the error report for each url ( see GError report system ), A turl element with no error is associated with NULL pointer for safety reason 
.RE
.PP
\fBWarning:\fP
.RS 4
turls need to be free manually after use 
.RE
.PP

.SS "int gfal_get_asyncG (gfal_handle handle, GList * surls, GError ** err)"
.PP
launch a surls-> turls translation in asynchronous mode 
.PP
\fBWarning:\fP
.RS 4
need a initiaed gfal_handle 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIhandle\fP : the gfal_handle initiated ( \fBgfal_init\fP ) 
.br
\fIsurls\fP : GList of string of the differents surls to convert 
.br
\fIerr\fP : GError for error report 
.RE
.PP
\fBReturns:\fP
.RS 4
return positive if success else -1, check GError for more information 
.RE
.PP

.SS "gfal_handle gfal_initG (GError ** err)"
.PP
initiate a gfal's context with default parameters for use 
.PP
\fBReturns:\fP
.RS 4
a gfal_handle, need to be free after usage or NULL if errors 
.RE
.PP

.SS "void gfal_set_nobdiiG (gfal_handle handle, gboolean no_bdii_chk)"
.PP
set the bdii value of the handle specified 
.SH "Author"
.PP 
Generated automatically by Doxygen for CERN org.glite.Gfal from the source code.
