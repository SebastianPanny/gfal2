.TH "/home/adevress/myworkspace/gfal/src/common/gfal_common_filedescriptor.c" 3 "16 Aug 2011" "Version 1.90" "CERN org.glite.Gfal" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/adevress/myworkspace/gfal/src/common/gfal_common_filedescriptor.c \- file for the file descriptor management 
.SH SYNOPSIS
.br
.PP
\fC#include <unistd.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include <pthread.h>\fP
.br
\fC#include 'gfal_common_errverbose.h'\fP
.br
\fC#include 'gfal_types.h'\fP
.br
\fC#include 'gfal_common_filedescriptor.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBgfal_add_new_file_desc\fP (gfal_fdesc_container_handle fhandle, gpointer pfile, GError **err)"
.br
.ti -1c
.RI "gpointer \fBgfal_get_file_desc\fP (gfal_fdesc_container_handle fhandle, int key, GError **err)"
.br
.ti -1c
.RI "gboolean \fBgfal_remove_file_desc\fP (gfal_fdesc_container_handle fhandle, int key, GError **err)"
.br
.ti -1c
.RI "gfal_fdesc_container_handle \fBgfal_file_descriptor_handle_create\fP (GDestroyNotify destroyer)"
.br
.ti -1c
.RI "gfal_file_handle \fBgfal_file_handle_new\fP (const char *module_name, gpointer fdesc)"
.br
.ti -1c
.RI "gfal_file_handle \fBgfal_file_handle_ext_new\fP (const char *module_name, gpointer fdesc, gpointer ext_data)"
.br
.ti -1c
.RI "gfal_file_handle \fBgfal_file_handle_bind\fP (gfal_fdesc_container_handle h, int file_desc, GError **err)"
.br
.ti -1c
.RI "gboolean \fBgfal_file_handle_delete\fP (gfal_fdesc_container_handle h, int file_desc, GError **err)"
.br
.in -1c
.SH "Detailed Description"
.PP 
file for the file descriptor management 

\fBAuthor:\fP
.RS 4
Devresse Adrien 
.RE
.PP
\fBVersion:\fP
.RS 4
2.0 
.RE
.PP
\fBDate:\fP
.RS 4
22/05/2011 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int gfal_add_new_file_desc (gfal_fdesc_container_handle fhandle, gpointer pfile, GError ** err)"
.PP
Add the given file handle to the and return a file descriptor 
.PP
\fBReturns:\fP
.RS 4
return the associated key if success else 0 and set err 
.RE
.PP

.SS "gfal_file_handle gfal_file_handle_bind (gfal_fdesc_container_handle h, int file_desc, GError ** err)"
.PP
return the file handle associated with the file_desc 
.PP
\fBWarning:\fP
.RS 4
does not free the handle 
.RE
.PP

.SS "gboolean gfal_file_handle_delete (gfal_fdesc_container_handle h, int file_desc, GError ** err)"
.PP
delete the handle associated with the given key, return TRUE if success else FALSE
.PP
* 
.SS "gfal_file_handle gfal_file_handle_ext_new (const char * module_name, gpointer fdesc, gpointer ext_data)"
.PP
same than gfal_file_handle but with external data storage support 
.SS "gpointer gfal_get_file_desc (gfal_fdesc_container_handle fhandle, int key, GError ** err)"
.PP
return the associated file handle for the given file descriptor or NULL if the key is not present and err is set 
.SS "gboolean gfal_remove_file_desc (gfal_fdesc_container_handle fhandle, int key, GError ** err)"
.PP
remove the associated file handle associated with the given file descriptor return true if success else false 
.SH "Author"
.PP 
Generated automatically by Doxygen for CERN org.glite.Gfal from the source code.
