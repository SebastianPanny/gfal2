.TH "/home/adevress/myworkspace/gfal/src/common/gfal_common_filedescriptor.c" 3 "25 May 2011" "Version 1.90" "CERN org.glite.Gfal" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/adevress/myworkspace/gfal/src/common/gfal_common_filedescriptor.c \- file for the file descriptor management 
.SH SYNOPSIS
.br
.PP
\fC#include <unistd.h>\fP
.br
\fC#include <stdlib.h>\fP
.br
\fC#include <errno.h>\fP
.br
\fC#include 'gfal_common_errverbose.h'\fP
.br
\fC#include 'gfal_prototypes.h'\fP
.br
\fC#include 'gfal_common_filedescriptor.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBgfal_file_key_generatorG\fP (gfal_file_descriptor_handle fhandle, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_add_new_file_desc\fP (gfal_file_descriptor_handle fhandle, gpointer pfile, GError **err)"
.br
.ti -1c
.RI "gpointer \fBgfal_get_file_desc\fP (gfal_file_descriptor_handle fhandle, int key, GError **err)"
.br
.ti -1c
.RI "gboolean \fBgfal_remove_file_desc\fP (gfal_file_descriptor_handle fhandle, int key, GError **err)"
.br
.ti -1c
.RI "gfal_file_descriptor_handle \fBgfal_file_descriptor_handle_create\fP (GDestroyNotify destroyer)"
.br
.ti -1c
.RI "gfal_directory_handle \fBgfal_dir_handle_bind\fP (gfal_file_descriptor_handle h, int file_desc, GError **err)"
.br
.ti -1c
.RI "int \fBgfal_dir_handle_create\fP (gfal_file_descriptor_handle h, int module_id, gpointer real_file_desc, GError **err)"
.br
.ti -1c
.RI "gboolean \fBgfal_dir_handle_delete\fP (gfal_file_descriptor_handle h, int file_desc, GError **err)"
.br
.in -1c
.SH "Detailed Description"
.PP 
file for the file descriptor management 

\fBAuthor:\fP
.RS 4
Devresse Adrien 
.RE
.PP
\fBVersion:\fP
.RS 4
2.0 
.RE
.PP
\fBDate:\fP
.RS 4
22/05/2011 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int gfal_add_new_file_desc (gfal_file_descriptor_handle fhandle, gpointer pfile, GError ** err)"
.PP
Add the given file handle to the and return a file descriptor 
.PP
\fBReturns:\fP
.RS 4
return the associated key if success else 0 and set err 
.RE
.PP

.SS "gfal_directory_handle gfal_dir_handle_bind (gfal_file_descriptor_handle h, int file_desc, GError ** err)"
.PP
return the file handle associated with the file_desc 
.PP
\fBWarning:\fP
.RS 4
does not free the handle 
.RE
.PP

.SS "int gfal_dir_handle_create (gfal_file_descriptor_handle h, int module_id, gpointer real_file_desc, GError ** err)"
.PP
create a file handle with a given module_id ( id of the catalog) and a given file descriptor ( catalog's fiel descriptor )
.PP
* 
.SS "gboolean gfal_dir_handle_delete (gfal_file_descriptor_handle h, int file_desc, GError ** err)"
.PP
delete the handle associated with the given key, return TRUE if success else FALSE
.PP
* 
.SS "int gfal_file_key_generatorG (gfal_file_descriptor_handle fhandle, GError ** err)"
.PP
generate a new unique key 
.SS "gpointer gfal_get_file_desc (gfal_file_descriptor_handle fhandle, int key, GError ** err)"
.PP
return the associated file handle for the given file descriptor or NULL if the key is not present and err is set 
.SS "gboolean gfal_remove_file_desc (gfal_file_descriptor_handle fhandle, int key, GError ** err)"
.PP
remove the associated file handle associated with the given file descriptor return true if success else false 
.SH "Author"
.PP 
Generated automatically by Doxygen for CERN org.glite.Gfal from the source code.
