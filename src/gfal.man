.\" @(#)$RCSfile: gfal.man,v $ $Revision: 1.5 $ $Date: 2004/10/24 10:56:45 $ CERN Jean-Philippe Baud
.\" Copyright (C) 2003-2004 by CERN/IT/PDP/DM
.\" All rights reserved
.\"
.TH GFAL 3 "$Date: 2004/10/24 10:56:45 $" GFAL "Library Functions"
.SH NAME
gfal - Grid File Access Library
.SH DESCRIPTION
Grid storage interactions today require using several existing software
components:
.RS
.TP
.B .
The replica catalog services to locate valid replicas of files.
.TP
.B .
The SRM software to ensure:
.RS
.TP
.B .
files exist on disk (they are recalled from mass storage if necessary) or
.TP
.B .
space is allocated on disk for new files (they are possibly migrated to mass
storage later)
.RE
.TP
.B .
A file access mechanism to access files from the storage system on the worker
node.
.RE
.LP
The GFAL library hides these interactions and presents a Posix interface for the
I/O operations. The currently supported protocols are:
.B file
for local access,
.BR dcap ,
.B gsidcap
and
.B kdcap
(dCache access protocol) and
.B rfio
(CASTOR access protocol).
.LP
The function names are obtained by prepending 
.B gfal_
to the Posix names, for example gfal_open, gfal_read, gfal_close ...
.LP
The argument lists and the values returned by the functions are identical.
.TP
.B File naming convention
A file name can be a Logical File Name (LFN), a Grid Unique IDentifier (GUID),
a file replica (SURL) or a Transport file name (TURL).
.RS
.LP
an LFN starts with
.B lfn:
.RS
for example lfn:baud/testgfal15
.RE
.LP
a GUID starts with
.B guid:
.RS
for example guid:2cd59291-7ae7-4778-af6d-b1f423719441
.RE
.LP
an SURL starts with
.B srm://
.RS
for example srm://wacdr002d.cern.ch:8443/castor/cern.ch/user/b/baud/testgfal15
.RE
.LP
a TURL starts with a protocol name
.RS
for example rfio:////castor/cern.ch/user/b/baud/testgfal15
.RE
.RE
.TP
.B Compile and link
The header file
.B gfal_api.h
needs to be included in the application source code to get the prototype of the
functions.
The application must be linked with
.B libgfal
(a few auxiliary security libraries: 
.BR libcgsi_plugin_gsoap_2.3 ,
.B libglobus_gssapi_gsi_gcc32dbg
and
.B libglobus_gss_assist_gcc32dbg
are used internally).
.sp
All these libraries are available as shared libraries as well as archive
libraries.
.TP
.B EDG Replica Catalogs endpoints
To be able to use an LFN or a GUID as filename, one must specify the Virtual
Organization LCG_GFAL_VO and the LCG_GFAL_INFOSYS or the servers endpoints,
for example:
.sp
	setenv LCG_GFAL_VO dteam
.br
	setenv LCG_GFAL_INFOSYS tbed0150.cern.ch:2170
.br
or
.br
	setenv RMC_ENDPOINT \\
.br
	http://rlscert01.cern.ch:7777/dteam/edg-replica-metadata-catalog/services/edg-replica-metadata-catalog
.br
	setenv LRC_ENDPOINT \\
.br
	http://rlscert01.cern.ch:7777/dteam/edg-local-replica-catalog/services/edg-local-replica-catalog
.TP
.B LCG File Catalog
An alternative to the EDG Replica Catalogs is to use the LCG File Catalog (LFC)
instead.  In order to use the LFC, one must set the LCG_CATALOG_TYPE variable to "lfc" and optionally provide the LFC_HOST to specify which host to contact.
for example:
.sp
	setenv LCG_CATALOG_TYPE lfc
.br
and optionally
.br
	setenv LFC_HOST rlscert01.cern.ch:5010
.br
.TP
.B Security
The SRMs can only be accessed in secure mode, i.e. require a valid Grid
certificate and valid Grid proxy obtained by
.BR grid-proxy-init .
The Replica catalogs can be accessed in secure or insecure mode depending on the
endpoint provided: if it starts with
.B https:
the secure mode is used.
.SH RETURN VALUE
The variable
.B errno
is set to the Posix error codes in the case of failure.
.SH EXAMPLES
A program writing a file, reading it back and checking the content of the file
is shown below:
.nf
.ft CW
#include <fcntl.h>
#include <stdio.h>
#include "gfal_api.h"
#define BLKLEN 65536

main(int argc, char **argv)
{
	int fd;
	int i;
	char ibuf[BLKLEN];
	char obuf[BLKLEN];
	int rc;

	if (argc != 2) {
		fprintf (stderr, "usage: %s filename\\n", argv[0]);
		exit (1);
	}

	for (i = 0; i < BLKLEN; i++)
		obuf[i] = i;

	printf ("creating file %s\\n", argv[1]);
	if ((fd = gfal_open (argv[1], O_WRONLY|O_CREAT, 0644)) < 0) {
		perror ("gfal_open");
		exit (1);
	}
	printf ("open successful, fd = %d\\n", fd);

	if ((rc = gfal_write (fd, obuf, BLKLEN)) != BLKLEN) {
		if (rc < 0)
			perror ("gfal_write");
		else
			fprintf (stderr, "gfal_write returns %d\\n", rc);
		(void) gfal_close (fd);
		exit (1);
	}
	printf ("write successful\\n");

	if ((rc = gfal_close (fd)) < 0) {
		perror ("gfal_close");
		exit (1);
	}
	printf ("close successful\\n");

	printf ("reading back %s\\n", argv[1]);
	if ((fd = gfal_open (argv[1], O_RDONLY, 0)) < 0) {
		perror ("gfal_open");
		exit (1);
	}
	printf ("open successful, fd = %d\\n", fd);

	if ((rc = gfal_read (fd, ibuf, BLKLEN)) != BLKLEN) {
		if (rc < 0)
			perror ("gfal_read");
		else
			fprintf (stderr, "gfal_read returns %d\\n", rc);
		(void) gfal_close (fd);
		exit (1);
	}
	printf ("read successful\\n");

	if ((rc = gfal_close (fd)) < 0) {
		perror ("gfal_close");
		exit (1);
	}
	printf ("close successful\\n");

	for (i = 0; i < BLKLEN; i++) {
		if (ibuf[i] != obuf[i]) {
			fprintf (stderr, "compare failed at offset %d\\n", i);
			exit (1);
		}
	}
	printf ("compare successful\\n");
	exit (0);
}
.ft
.fi
.SH FILES
.B /opt/lcg/include/gfal_api.h
.TP
.B /opt/lcg/lib/libgfal.so
.TP
.B /usr/local/lib/libcgsi_plugin_gsoap_2.3.so
.TP
.B /opt/globus/lib/libglobus_gssapi_gsi_gcc32dbg.so
.TP
.B /opt/globus/lib/libglobus_gss_assist_gcc32dbg.so
.SH AUTHOR
Jean-Philippe Baud
