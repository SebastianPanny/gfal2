##
# simple scons file for build

Import('*')	# import SConstruct exported var
import os

gfal_common_libs = [ 'vomsc','is_ifce'] 		# libraries linked
gsimplecache = ["externals/gsimplecache/gsimplecacheOS.os"]
other_headers=['common/']
common_src = Glob("common/*.c") 
common_voms = Glob("common/voms/*.c")
common_mds = Glob("common/mds/*.c") 
posix_src_all = Glob("posix/*.c")
src_all = common_src + common_mds + common_voms + posix_src_all

plugin_lfc = Glob("common/lfc/*.c")
plugin_srm = Glob("common/srm/*.c")
plugin_rfio = Glob("common/rfio/*.c")
plugin_dcap = Glob("common/dcap/*.c")

##
# Clone the env for the link flag

env_posix = env.Clone()
env_posix.Append(LIBS=gfal_common_libs)
env_posix.Append(CPPPATH=other_headers)

#main gfal lib
mainlib = env_posix.SharedLibrary('#build/libs/libgfal2', src_all)
staticlib = env_posix.StaticLibrary('#build/libs/libgfal2', src_all)
#plugins
env_plugin = env.Clone();
env_plugin.Append(LIBS=["gfal2"])
env_plugin_srm = env_plugin.Clone()
env_plugin_srm.Append(LIBS=["gfal_srm_ifce"] )
env_plugin_lfc = env_plugin.Clone();
env_plugin_lfc.Append(CFLAGS="-D_REENTRANT")
plugin_lfc_lib = env_plugin_lfc.SharedLibrary('#build/libs/libgfal_plugin_lfc', plugin_lfc+ gsimplecache)
plugin_rfio_lib= env_plugin.SharedLibrary('#build/libs/libgfal_plugin_rfio', plugin_rfio)
plugin_dcap_lib = env_plugin.SharedLibrary('#build/libs/libgfal_plugin_dcap', plugin_dcap)
plugin_srm_lib = env_plugin_srm.SharedLibrary('#build/libs/libgfal_plugin_srm', plugin_srm + gsimplecache)

#gfal version
version = env_plugin.Program("#build/gfal2_version", Glob("version/*.c"))





Default(plugin_rfio_lib, plugin_dcap_lib, plugin_lfc_lib, plugin_srm_lib, mainlib,staticlib, version)
