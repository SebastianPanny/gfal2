#!/usr/bin/python
##
# Example builind script
# @author : Devresse Adrien
# @version : v0.1
# @date 08/04/2011

Import('*')	# import SConstruct exported var
import os
import random
import shutil
import commands


def get_env_var(str_name):
	if(os.getenv(str_name) is None):
		return ""
	else:
		return os.getenv(str_name)


src_tests_link = ['gfal2', 'gfal_plugin_lfc', 'gfal_plugin_srm', 'gfal_plugin_rfio', 'cgreen']
src_tests_mocks = Glob('mock/*.c')
src_tests_main = Glob("*.c") + Glob("common/*.c") + Glob("common/lfc/*.c")  + Glob("common/mds/*.c") + Glob("common/rfio/*.c") + Glob("posix/*.c") + Glob("externals/*.c") 
src_tests_all = src_tests_main + src_tests_mocks + [ static_gskiplist ]
## build test config

lfc_gfal_infosys = get_env_var("LCG_GFAL_INFOSYS")

lfc_host = get_env_var("LFC_HOST")

tests_headers = all_headers +  Glob('mock/*.h') + Glob("externals/*.h")+ Glob("*.h") + Glob("common/*.h") + Glob("common/lfc/*.h")  + Glob("common/mds/*.h") + Glob("common/rfio/*.h") + Glob("posix/*.h")

env_test.PrependENVPath('LCG_GFAL_INFOSYS', lfc_gfal_infosys); # setup the bdii access point
env_test.PrependENVPath('LFC_HOST', lfc_host); # setup the bdii access point
env_test.PrependENVPath('GFAL_PLUGIN_LIST', "libgfal_plugin_lfc.so:libgfal_plugin_srm.so:libgfal_plugin_rfio.so"); # setup the GFAL PLUGIN SEARCH PATH
env_test.Append(LIBS=src_tests_link);
env_test.Append(CFLAGS="-D_REENTRANT");
tests =env_test.Program("test_verbose",  src_tests_all)
env_test.Depends(tests, tests_headers + build_deps)



prog_name = tests[0].abspath;
# select single test mode
if ARGUMENTS.get('single','0') != '0':
	t = ARGUMENTS.get('single','0')
	print "Single test mode with test named : %s"%(t)
	prog_name += " "+t;
	
run_test= env_test.Alias("test_run_verbose.passed", tests, prog_name)
test_alias= env_test.Alias("test", ["test_run_verbose.passed"])	
AlwaysBuild(test_alias)

Return("tests")

