<?xml version="1.0" encoding="UTF-8" ?>
<!--
    Copyright (c) Members of the EGEE Collaboration. 2004.
    See http://public.eu-egee.org/partners/ for details on 
    the copyright holders.
    For license conditions see the license file or
    http://eu-egee.org/license.html

    Authors: 
         Akos Frohner <Akos.Frohner@cern.ch>
	Version info: $Id: build.xml,v 1.1 2006/03/06 21:49:06 szamsu Exp $
-->

<project name="gfal" default="dist">

	<!-- ==============================================
	      Builds the GLite security cgsi-gsoap component
	     ============================================== -->
	
	<!-- =========================================
	      Import properties (order is important)
	     ========================================= -->
	
	<!-- Import baseline properties & user properties -->
	<import file="../org.glite/project/baseline.properties.xml" />

	<!-- import component build properties,
		        component properties &
		        component common properties -->
	<import file="./project/properties.xml"/>
	
	<!-- import subsystem build properties,
		        subsystem properties &
		        subsystem common properties -->
	<import file="${subsystem.properties.file}"/>

	<!-- import global build properties &
		        global properties -->
	<import file="${global.properties.file}" />
		
	<!-- =========================================
 	      Load dependency property files (order is important)
	     ========================================= -->
	<property file="${user.dependencies.file}"/>
	<property file="${component.dependencies.file}" />
	<property file="${subsystem.dependencies.file}" />
	<property file="${global.dependencies.file}"/>

	<!-- =========================================
             Load configuration definitions (order is important)
         ========================================= -->
    <import file="${global.configure.options.file}"/>
    <import file="${component.configure.options.file}"/>
	
	<!-- =========================================
      	      Import task definitions (order is important)
	     ========================================= -->
	<import file="${subsystem.taskdefs.file}" />
	<import file="${global.taskdefs.file}" />
	
	<!-- =========================================
		 Load common targets
	     ========================================= -->
	<!-- Put your language target (java/c++-ant/c++-autotool/perl) here -->
	<import file="${global.targets-simple_make.file}" />
		
	<!-- =========================================
		 Load version file 
	     ========================================= -->
	<property file="${module.version.file}"/>
	<property file="${module.build.file}"/>
	
	<!-- ==============================================
		 Local private targets
	     ============================================== -->
	
	<target name="localinit"
		description="Module specific initialization tasks">
        <copy file="${module.src.dir}/Makefile.${os.name}" tofile="${module.build.dir}/Makefile"/>
        <propertyregex property="ext.gsoap.version.simple" input="${ext.gsoap.version}"
            regexp="^(\d+)\.(\d+)\." select="\1.\2"/>
        <property name="build.make.arguments"
                      value="SRCDIR=${module.src.dir} GSOAP_LOCATION=${with.gsoap.prefix} GLOBUS_LOCATION=${with.globus.prefix} GLOBUS_FLAVOUR=${with.globus.dbg.nothr.flavor} GLOBUS_FLAVOUR_PTHR=${with.globus.dbg.thr.flavor} LFC_LOCATION=${stage.abs.dir} DCAP_LOCATION=${with.dcap.prefix} CGSI_GSOAP_LOCATION=${stage.abs.dir} CGSI_GSOAP_VERSION=gsoap_${ext.gsoap.version.simple} VERSION=${module.version}"/>
        <!-- debugging aid -->
        <echo  file="${module.build.dir}/mymake">
            cp -u ${module.src.dir}/Makefile.${os.name} ${module.build.dir}/Makefile
            make ${build.make.arguments} $*
        </echo>
        <chmod file="${module.build.dir}/mymake" perm="ugo+rx"/>
	</target>
	
	<target name="localcompile" depends="localinit"
        description="Module specific compile tasks">
	</target>

	<target name="localclean"
		description="Module specific cleaning tasks">
	</target>

	
    <!-- https://savannah.cern.ch/bugs/?func=detailitem&item_id=14961 -->
	<!-- Creates directories and prepares necessary environment for rpm building -->
	<target name="rpm.init" depends="init.rpm.properties">
		<!-- Create necessary directories -->
        <delete dir="${rpm.build.path}"/>
        <delete dir="${module.dir}/RPMS"/>
		<mkdir dir="${rpm.build.path}" />
		<mkdir dir="${rpm.build.path}/SOURCES" />
		<mkdir dir="${rpm.build.path}/BUILD" />
		<mkdir dir="${rpm.build.path}/RPMS" />
		<mkdir dir="${rpm.build.path}/SRPMS" />
		<mkdir dir="${rpm.build.path}/SPECS" />

        <property name="package.prefix" value="/opt/lcg"/>
		<mkdir dir="${rpm.tmp.path}/${package.prefix}" />

		<exec executable="pwd" dir="." outputproperty="current.abs.dir" failonerror="true" />
		<!-- repackage the tarball files to have correct path -->
		<exec executable="tar" dir="${rpm.tmp.path}/${package.prefix}" failonerror="true">
			<arg line="xzf ${current.abs.dir}/${dist.dir}/${component.dist.file}" />
		</exec>
		<exec executable="tar" dir="${rpm.tmp.path}" failonerror="true">
			<arg line="czf ${rpm.build.path}/SOURCES/${package.name.correct}-${module.version}_bin.tar.gz --exclude=*.la ." />
		</exec>
		<!--delete dir="${rpm.tmp.path}" /-->
	</target>


</project>		
